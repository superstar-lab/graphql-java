#// This file describes the production GraphQL schema for the graphql-api service.
#// Please do not manually edit this file, instead run graphql/tools/schema update_local.

"Allows Strato dark requests to be enabled or disabled"
directive @dark_request(
    "dark request value"
    value: DarkRequestDirectiveInput!
  ) on FIELD

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Marks fields that are in development."
directive @development on FIELD_DEFINITION

"Marks fields that serve as educational examples and not intended for production use"
directive @example on FIELD_DEFINITION

"allows for a selection set to be conditionally included/skipped based on the value of a feature switch"
directive @feature(
    "whether this selection set should be included/excluded from the query depending on the value of the feature switch"
    action: FeatureDirectiveInput!, 
    "Feature Switch Value. This is the feature switch that will be used to determine if the field is to be included/excluded depending on the Action argument."
    name: String!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Safety level annotated by the field, used to filter entities in the enclosing scope of this field."
directive @safety_level(
    "SafetyLevel value"
    value: String!
  ) on FIELD_DEFINITION

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

"Records extra stats for a field. Only use if your specific use case requires the use of additional metrics for SLA purposes."
directive @stats(
    "Sets the scope on the metrics path. It is recommended to include language specific to your domain or use case."
    scope: String!
  ) on FIELD

"Used to indicate the column metadata ascossiated with the field"
directive @strato_column(path: String!) on FIELD_DEFINITION

"Used to annotate with the specific strato op used in the underlying strato column"
directive @strato_op(value: StratoOp!) on FIELD_DEFINITION

"Used to indicate the space and space key associated with a type"
directive @strato_space(name: String!) on OBJECT

"Used to indicate the source thrift definition information associated with the type"
directive @thrift_type(name: String!, package: String!) on OBJECT | UNION | ENUM | INPUT_OBJECT

"Valid safety level choices for arguments to a field. Used by clients to do code generation around the argument."
directive @valid_safety_level_choices(
    "SafetyLevel values"
    values: [SafetyLevelInput!]!
  ) on FIELD

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestResult`](http://go/sg.thrift/AcceptFollowRequestResult)"
union AcceptFollowRequestResult @thrift_type(name : "AcceptFollowRequestResult", package : "com.twitter.strato.columns.socialgraph") = AcceptFollowRequestFailure | AcceptFollowRequestInvalidRequest | AcceptFollowRequestSuccess

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberResult`](http://go/sg.thrift/AddListMemberResult)"
union AddListMemberResult @thrift_type(name : "AddListMemberResult", package : "com.twitter.dataproducts.devo.lists.graphql") = AddListMemberFailedResult | AddListMemberInvalidRequestResult | AddListMemberSuccessResult

"Generated from type: [`com.twitter.convosvc.strato.AddParticipantsResult`](http://go/sg.thrift/AddParticipantsResult)"
union AddParticipantsResult @thrift_type(name : "AddParticipantsResult", package : "com.twitter.convosvc.strato") = AddParticipantsFailure | AddParticipantsSuccess

"Generated from type: [`com.twitter.adsmanager.CreationSourceGraphqlOutput`](http://go/sg.thrift/CreationSourceGraphqlOutput)"
union AdvertiserCreationSourceData @thrift_type(name : "CreationSourceGraphqlOutput", package : "com.twitter.adsmanager") = AdvertiserAutogeneratedSource | AdvertiserCreatorUserId | AdvertiserInternalSource | AdvertiserPredefinedSource

"Generated from type: [`com.twitter.adsmanager.FilterGraphqlOutput`](http://go/sg.thrift/FilterGraphqlOutput)"
union AdvertiserFilterData @thrift_type(name : "FilterGraphqlOutput", package : "com.twitter.adsmanager") = AdvertiserAdNameFilter | AdvertiserCampaignIdFilter | AdvertiserCampaignNameFilter | AdvertiserCampaignTypesFilter | AdvertiserDisplayStateFilter | AdvertiserFundingInstrumentsFilter | AdvertiserFundingSourceNameFilter | AdvertiserHadDeliveryFilter | AdvertiserLineItemIdFilter | AdvertiserLineItemNameFilter | AdvertiserObjectivesFilter | AdvertiserPlacementCategoryData | AdvertiserTweetIdFilter

"Generated from type: [`com.twitter.strato.graphql.ApiMediaInfo`](http://go/sg.thrift/ApiMediaInfo)"
union ApiMediaInfo @thrift_type(name : "ApiMediaInfo", package : "com.twitter.strato.graphql") = ApiGif | ApiImage | ApiModel3d | ApiVideo

"Generated from type: [`com.twitter.strato.graphql.MediaUnavailabilityInfo`](http://go/sg.thrift/MediaUnavailabilityInfo)"
union ApiMediaUnavailabilityInfo @thrift_type(name : "MediaUnavailabilityInfo", package : "com.twitter.strato.graphql") = ApiMediaUnavailabilityInfoCopyrightViolation

"Generated from type: [`com.twitter.strato.graphql.ApiTweetCollectionItem`](http://go/sg.thrift/ApiTweetCollectionItem)"
union ApiTweetCollectionItem @thrift_type(name : "ApiTweetCollectionItem", package : "com.twitter.strato.graphql") = ApiTweetCollectionTweetItem | LegacyCard

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharedItem`](http://go/sg.thrift/AudioSpaceSharedItem)"
union AudioSpaceSharedItem @thrift_type(name : "AudioSpaceSharedItem", package : "com.twitter.strato.graphql") = AudioSpaceSharedTweet

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharingsSliceResult`](http://go/sg.thrift/AudioSpaceSharingsSliceResult)"
union AudioSpaceSharingsSliceResult @thrift_type(name : "AudioSpaceSharingsSliceResult", package : "com.twitter.strato.graphql") = AudioSpaceSharingsSlice | AudioSpaceSharingsSliceUnavailable

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceSoldTicketsResult`](http://go/sg.thrift/AudioSpaceSoldTicketsResult)"
union AudioSpaceSoldTicketsResult @thrift_type(name : "AudioSpaceSoldTicketsResult", package : "com.twitter.periscope.audio_space") = AudioSpaceSoldTicketsUnavailable | AudioSpaceTicketSlice

"Generated from type: [`com.twitter.tweb3.graphql.result.AvatarUpdateResult`](http://go/sg.thrift/AvatarUpdateResult)"
union AvatarUpdateResult @thrift_type(name : "AvatarUpdateResult", package : "com.twitter.tweb3.graphql.result") = AvatarUpdateSuccessResult | NFTContractAddressError | NFTOwnershipError

union BetaMixerSliceItem = TweetItem | UserItem

union BetaSampleMixerSliceResult = BetaSampleMixerSlice | BetaSampleMixerValidationErrors

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteCreateResult`](http://go/sg.thrift/BirdwatchNoteCreateResult)"
union BirdwatchNoteCreateResult @thrift_type(name : "BirdwatchNoteCreateResult", package : "com.twitter.strato.graphql") = BirdwatchError | BirdwatchNote

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingQuestionDetails`](http://go/sg.thrift/BirdwatchNoteRatingQuestionDetails)"
union BirdwatchNoteRatingQuestionDetails @thrift_type(name : "BirdwatchNoteRatingQuestionDetails", package : "com.twitter.strato.graphql") = BirdwatchNoteRatingMultipleChoiceQuestion | BirdwatchNoteRatingSingleChoiceQuestion

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockResult`](http://go/sg.thrift/BlockResult)"
union BlockResult @thrift_type(name : "BlockResult", package : "com.twitter.dataproducts.userrelationships.graphql") = BlockFailedResult | BlockInvalidRequestResult | BlockSuccessResult

"Generated from type: [`com.twitter.ceatweetsearch.CampaignTweetSearchSliceItem`](http://go/sg.thrift/CampaignTweetSearchSliceItem)"
union CampaignTweetSearchSliceItem @thrift_type(name : "CampaignTweetSearchSliceItem", package : "com.twitter.ceatweetsearch") = ScheduledTweet | Tweet

"Generated from type: [`com.twitter.ceatweetsearch.CampaignTweetSearchSliceItem`](http://go/sg.thrift/CampaignTweetSearchSliceItem)"
union CampaignTweetSearchSliceItemResult @thrift_type(name : "CampaignTweetSearchSliceItem", package : "com.twitter.ceatweetsearch") = ScheduledTweet | Tweet | TweetTombstone | TweetUnavailable | TweetWithVisibilityResults

"Generated from type: [`com.twitter.ceatweetsearch.CampaignTweetSearchSliceItem`](http://go/sg.thrift/CampaignTweetSearchSliceItem)"
union CampaignTweetSearchSliceItemResults @thrift_type(name : "CampaignTweetSearchSliceItem", package : "com.twitter.ceatweetsearch") = ScheduledTweet | TweetResults

"Generated from type: [`com.twitter.strato.graphql.unified_cards.Component`](http://go/sg.thrift/Component)"
union CardComponent @thrift_type(name : "Component", package : "com.twitter.strato.graphql.unified_cards") = CardAppStoreDetailsComponent | CardButtonGroupComponent | CardDetailsComponent | CardMediaComponent | CardMediaWithDetailsHorizontal | CardProfileComponent | CardSwipeableMediaComponent | CardTwitterListDetailsComponent | DeveloperBuiltCardContainer

"Generated from type: [`com.twitter.strato.graphql.unified_cards.Destination`](http://go/sg.thrift/Destination)"
union CardDestination @thrift_type(name : "Destination", package : "com.twitter.strato.graphql.unified_cards") = CardAppStoreDestination | CardAppStoreWithDockedMediaDestination | CardBrowserDestination | CardBrowserWithDockedMediaDestination | CardPlayableDestination | CardTweetComposerDestination

"Generated from type: [`com.twitter.strato.graphql.unified_cards.Layout`](http://go/sg.thrift/Layout)"
union CardLayout @thrift_type(name : "Layout", package : "com.twitter.strato.graphql.unified_cards") = CardModelExplorerLayout | CardSwipeableLayout | CardVerticalStackLayout

"Generated from type: [`com.twitter.strato.graphql.unified_cards.PlayableSecondaryDestination`](http://go/sg.thrift/PlayableSecondaryDestination)"
union CardPlayableSecondaryDestination @thrift_type(name : "PlayableSecondaryDestination", package : "com.twitter.strato.graphql.unified_cards") = CardAppStoreDestination

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsProductAsset`](http://go/sg.thrift/CoinsProductAsset)"
union CoinsProductAsset @thrift_type(name : "CoinsProductAsset", package : "com.twitter.audiencerewards.productcatalog") = AnimationAsset | ImageAsset

"""
Tweet collaborators.

Generated from type: [`com.twitter.strato.graphql.CollabControl`](http://go/sg.thrift/CollabControl)
"""
union CollabControl @thrift_type(name : "CollabControl", package : "com.twitter.strato.graphql") = CollabInvitation | CollabTweet

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceCatalogWriteResult`](http://go/sg.thrift/CommerceCatalogWriteResult)"
union CommerceCatalogWriteResult @thrift_type(name : "CommerceCatalogWriteResult", package : "com.twitter.commerce.catalog.api.graphql") = CatalogAuthorizationError | CatalogNameInvalidError | CommerceCatalog

"Generated from type: [`com.twitter.commerce.catalog.common.CommerceConfig`](http://go/sg.thrift/CommerceConfig)"
union CommerceConfig @thrift_type(name : "CommerceConfig", package : "com.twitter.commerce.catalog.common") = ProductSetConfig

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceItem`](http://go/sg.thrift/CommerceItem)"
union CommerceItem @thrift_type(name : "CommerceItem", package : "com.twitter.commerce.catalog.api.graphql") = CommerceProduct | CommerceProductGroup

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceItem`](http://go/sg.thrift/CommerceItem)"
union CommerceItemResults @thrift_type(name : "CommerceItem", package : "com.twitter.commerce.catalog.api.graphql") = CommerceProductGroupResults | CommerceProductResults

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceProductGroupResult`](http://go/sg.thrift/CommerceProductGroupResult)"
union CommerceProductGroupResult @thrift_type(name : "CommerceProductGroupResult", package : "com.twitter.commerce.catalog.api.graphql") = CommerceProductGroup | CommerceProductGroupUnavailable

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceProductResult`](http://go/sg.thrift/CommerceProductResult)"
union CommerceProductResult @thrift_type(name : "CommerceProductResult", package : "com.twitter.commerce.catalog.api.graphql") = CommerceProduct | CommerceProductUnavailable

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UpsertCommerceProductSetResult`](http://go/sg.thrift/UpsertCommerceProductSetResult)"
union CommerceProductSetResult @thrift_type(name : "UpsertCommerceProductSetResult", package : "com.twitter.commerce.catalog.api.graphql") = CatalogAuthorizationError | CommerceProductSet | ItemKeyError | ProductItemsLimitError | ProductSetDescriptionError | ProductSetIdError | ProductSetNameError | ProductSetTypeError

"Generated from type: [`com.twitter.communities.actions.CommunityCreateActionResult`](http://go/sg.thrift/CommunityCreateActionResult)"
union CommunityCreateActionResult @thrift_type(name : "CommunityCreateActionResult", package : "com.twitter.communities.actions") = CommunityCreateAction | CommunityCreateActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityCreateResult`](http://go/sg.thrift/CommunityCreateResult)"
union CommunityCreateResult @thrift_type(name : "CommunityCreateResult", package : "com.twitter.communities.actions") = Community | CommunityCreateActionUnavailable | CommunityCreateError

"Generated from type: [`com.twitter.communities.invites.CommunityInvitesResult`](http://go/sg.thrift/CommunityInvitesResult)"
union CommunityInvitesResult @thrift_type(name : "CommunityInvitesResult", package : "com.twitter.communities.invites") = CommunityInvites | CommunityInvitesUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityJoinActionResult`](http://go/sg.thrift/CommunityJoinActionResult)"
union CommunityJoinActionResult @thrift_type(name : "CommunityJoinActionResult", package : "com.twitter.communities.actions") = CommunityJoinAction | CommunityJoinActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveActionResult`](http://go/sg.thrift/CommunityJoinRequestApproveActionResult)"
union CommunityJoinRequestApproveActionResult @thrift_type(name : "CommunityJoinRequestApproveActionResult", package : "com.twitter.communities.actions") = CommunityJoinRequestApproveAction | CommunityJoinRequestApproveActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveResult`](http://go/sg.thrift/CommunityJoinRequestApproveResult)"
union CommunityJoinRequestApproveResult @thrift_type(name : "CommunityJoinRequestApproveResult", package : "com.twitter.communities.actions") = CommunityJoinRequest | CommunityJoinRequestApproveActionUnavailable | CommunityJoinRequestApproveError

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestCreateResult`](http://go/sg.thrift/CommunityJoinRequestCreateResult)"
union CommunityJoinRequestCreateResult @thrift_type(name : "CommunityJoinRequestCreateResult", package : "com.twitter.communities.actions") = CommunityJoinRequest | CommunityJoinRequestCreateActionUnavailable | CommunityJoinRequestCreateError

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyActionResult`](http://go/sg.thrift/CommunityJoinRequestDenyActionResult)"
union CommunityJoinRequestDenyActionResult @thrift_type(name : "CommunityJoinRequestDenyActionResult", package : "com.twitter.communities.actions") = CommunityJoinRequestDenyAction | CommunityJoinRequestDenyActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyResult`](http://go/sg.thrift/CommunityJoinRequestDenyResult)"
union CommunityJoinRequestDenyResult @thrift_type(name : "CommunityJoinRequestDenyResult", package : "com.twitter.communities.actions") = CommunityJoinRequest | CommunityJoinRequestDenyActionUnavailable | CommunityJoinRequestDenyError

"Generated from type: [`com.twitter.communities.join_requests.CommunityJoinRequestsResult`](http://go/sg.thrift/CommunityJoinRequestsResult)"
union CommunityJoinRequestsResult @thrift_type(name : "CommunityJoinRequestsResult", package : "com.twitter.communities.join_requests") = CommunityJoinRequests | CommunityJoinRequestsUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityLeaveActionResult`](http://go/sg.thrift/CommunityLeaveActionResult)"
union CommunityLeaveActionResult @thrift_type(name : "CommunityLeaveActionResult", package : "com.twitter.communities.actions") = CommunityLeaveAction | CommunityLeaveActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityMemberRemoveActionResult`](http://go/sg.thrift/CommunityMemberRemoveActionResult)"
union CommunityMemberRemoveActionResult @thrift_type(name : "CommunityMemberRemoveActionResult", package : "com.twitter.communities.actions") = CommunityMemberRemoveAction | CommunityMemberRemoveActionUnavailable

"Generated from type: [`com.twitter.communities.membership.CommunityMembershipSettings`](http://go/sg.thrift/CommunityMembershipSettings)"
union CommunityMembershipSettings @thrift_type(name : "CommunityMembershipSettings", package : "com.twitter.communities.membership") = CommunityOpenMembershipSettings | CommunityRestrictedMembershipSettings

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutActionResult`](http://go/sg.thrift/CommunityMembershipSettingsPutActionResult)"
union CommunityMembershipSettingsPutActionResult @thrift_type(name : "CommunityMembershipSettingsPutActionResult", package : "com.twitter.communities.actions") = CommunityMembershipSettingsPutAction | CommunityMembershipSettingsPutActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutResult`](http://go/sg.thrift/CommunityMembershipSettingsPutResult)"
union CommunityMembershipSettingsPutResult @thrift_type(name : "CommunityMembershipSettingsPutResult", package : "com.twitter.communities.actions") = Community | CommunityMembershipSettingsPutActionUnavailable | CommunityMembershipSettingsPutError

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateActionResult`](http://go/sg.thrift/CommunityMembershipSettingsUpdateActionResult)"
union CommunityMembershipSettingsUpdateActionResult @thrift_type(name : "CommunityMembershipSettingsUpdateActionResult", package : "com.twitter.communities.actions") = CommunityMembershipSettingsUpdateAction | CommunityMembershipSettingsUpdateActionUnavailable

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateResult`](http://go/sg.thrift/CommunityMembershipSettingsUpdateResult)"
union CommunityMembershipSettingsUpdateResult @thrift_type(name : "CommunityMembershipSettingsUpdateResult", package : "com.twitter.communities.actions") = Community | CommunityMembershipSettingsUpdateError | CommunityMembershipSettingsUpdateUnavailable

"Generated from type: [`com.twitter.communities.moderation.CommunityTweetModerationState`](http://go/sg.thrift/CommunityTweetModerationState)"
union CommunityTweetModerationState @thrift_type(name : "CommunityTweetModerationState", package : "com.twitter.communities.moderation") = CommunityTweetDefaultModerationState | CommunityTweetHiddenModerationState

"Generated from type: [`com.twitter.communities.moderation.CommunityUserModerationState`](http://go/sg.thrift/CommunityUserModerationState)"
union CommunityUserModerationState @thrift_type(name : "CommunityUserModerationState", package : "com.twitter.communities.moderation") = CommunityUserDefaultModerationState | CommunityUserRemovedModerationState

"Generated from type: [`com.twitter.convosvc.strato.CreateDMReactionResult`](http://go/sg.thrift/CreateDMReactionResult)"
union CreateDMReactionResult @thrift_type(name : "CreateDMReactionResult", package : "com.twitter.convosvc.strato") = CreateDMReactionFailure | CreateDMReactionSuccess

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmResult`](http://go/sg.thrift/CreateDmResult)"
union CreateDmResult @thrift_type(name : "CreateDmResult", package : "com.twitter.dataproducts.devo.dm.graphql") = CreateDmFailed | CreateDmInvalidRequest | CreateDmSuccess

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.CreateTweetResultTypes`](http://go/sg.thrift/CreateTweetResultTypes)"
union CreateTweetResultTypes @thrift_type(name : "CreateTweetResultTypes", package : "com.twitter.dataproducts.aaa.graphql") = CreateTweetInvalidRequestResult | CreateTweetSuccessResult

"Generated from type: [`com.twitter.convosvc.strato.DMAttachment`](http://go/sg.thrift/DMAttachment)"
union DMAttachment @thrift_type(name : "DMAttachment", package : "com.twitter.convosvc.strato") = DMCardAttachment | DMMediaAttachment | DMTweetAttachment

"Generated from type: [`com.twitter.strato.graphql.DMConversationLabelResult`](http://go/sg.thrift/DMConversationLabelResult)"
union DMConversationLabelResult @thrift_type(name : "DMConversationLabelResult", package : "com.twitter.strato.graphql") = DMConversationLabelInfo | DMConversationLabelUnavailable

"Generated from type: [`com.twitter.convosvc.strato.DMConversationResult`](http://go/sg.thrift/DMConversationResult)"
union DMConversationResult @thrift_type(name : "DMConversationResult", package : "com.twitter.convosvc.strato") = DMConversation | DMConversationUnavailable

"Generated from type: [`com.twitter.convosvc.strato.DMConvoListItem`](http://go/sg.thrift/DMConvoListItem)"
union DMConvoListItem @thrift_type(name : "DMConvoListItem", package : "com.twitter.convosvc.strato") = DMConvoItem

"Generated from type: [`com.twitter.convosvc.strato.DMConvoListSliceResult`](http://go/sg.thrift/DMConvoListSliceResult)"
union DMConvoListSliceResult @thrift_type(name : "DMConvoListSliceResult", package : "com.twitter.convosvc.strato") = DMConvoListSlice

"Generated from type: [`com.twitter.convosvc.strato.DMEventResult`](http://go/sg.thrift/DMEventResult)"
union DMEventResult @thrift_type(name : "DMEventResult", package : "com.twitter.convosvc.strato") = DMEvent | DMEventUnavailable

"Generated from type: [`com.twitter.convosvc.strato.DMEventSliceResult`](http://go/sg.thrift/DMEventSliceResult)"
union DMEventSliceResult @thrift_type(name : "DMEventSliceResult", package : "com.twitter.convosvc.strato") = DMEventSlice | DMEventSliceFailure

union DMGroupConvoSliceResult = DMGroupConvoSlice

"Generated from type: [`com.twitter.convosvc.strato.DMMessageSearchListItem`](http://go/sg.thrift/DMMessageSearchListItem)"
union DMMessageSearchListItem @thrift_type(name : "DMMessageSearchListItem", package : "com.twitter.convosvc.strato") = DMMessageSearchItem

"Generated from type: [`com.twitter.convosvc.strato.DMMessageSliceResult`](http://go/sg.thrift/DMMessageSliceResult)"
union DMMessageSliceResult @thrift_type(name : "DMMessageSliceResult", package : "com.twitter.convosvc.strato") = DMMessageSlice | DMMessageSliceQueryStringTooLong

union DMPeopleConvoSliceResult = DmPeopleConvoSlice

"Generated from type: [`com.twitter.convosvc.strato.DMReactionSliceResult`](http://go/sg.thrift/DMReactionSliceResult)"
union DMReactionSliceResult @thrift_type(name : "DMReactionSliceResult", package : "com.twitter.convosvc.strato") = DMReactionSlice | DMReactionSliceFailure

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.DeleteProductResult`](http://go/sg.thrift/DeleteProductResult)"
union DeleteProductResult @thrift_type(name : "DeleteProductResult", package : "com.twitter.commerce.catalog.api.graphql") = DeleteProductError | DeletedProduct

"Generated from type: [`com.twitter.strato.columns.socialgraph.DenyFollowRequestResult`](http://go/sg.thrift/DenyFollowRequestResult)"
union DenyFollowRequestResult @thrift_type(name : "DenyFollowRequestResult", package : "com.twitter.strato.columns.socialgraph") = DenyFollowRequestInvalidRequest | DenyFollowRequestSuccess

"Generated from type: [`com.twitter.developer_built_cards.schema.Action`](http://go/sg.thrift/Action)"
union DevCardAction @thrift_type(name : "Action", package : "com.twitter.developer_built_cards.schema") = DevCardLinkAction

"Generated from type: [`com.twitter.developer_built_cards.schema.DeveloperBuiltCardComponent`](http://go/sg.thrift/DeveloperBuiltCardComponent)"
union DevCardComponent @thrift_type(name : "DeveloperBuiltCardComponent", package : "com.twitter.developer_built_cards.schema") = DevCardButtonComponent | DevCardHorizontalLineComponent | DevCardImageComponent | DevCardLabelComponent | DevCardLineGraphComponent

"Generated from type: [`com.twitter.developer_built_cards.schema.LabelProperties`](http://go/sg.thrift/LabelProperties)"
union DevCardLabelProperties @thrift_type(name : "LabelProperties", package : "com.twitter.developer_built_cards.schema") = DevCardHeaderProperties | DevCardTextProperties

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceFollowResult`](http://go/sg.thrift/DeviceFollowResult)"
union DeviceFollowResult @thrift_type(name : "DeviceFollowResult", package : "com.twitter.strato.columns.socialgraph") = DeviceFollowInvalidRequestResult | DeviceFollowSuccessResult

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceUnfollowResult`](http://go/sg.thrift/DeviceUnfollowResult)"
union DeviceUnfollowResult @thrift_type(name : "DeviceUnfollowResult", package : "com.twitter.strato.columns.socialgraph") = DeviceUnfollowInvalidRequestResult | DeviceUnfollowSuccessResult

"Generated from type: [`com.twitter.tweetypie.EditControl`](http://go/sg.thrift/EditControl)"
union EditControl @thrift_type(name : "EditControl", package : "com.twitter.tweetypie") = EditControlEdit | EditControlInitial

"Generated from type: [`com.twitter.strato.graphql.ExampleEntityResult`](http://go/sg.thrift/ExampleEntityResult)"
union ExampleEntityResult @thrift_type(name : "ExampleEntityResult", package : "com.twitter.strato.graphql") = ExampleEntity | ExampleEntityUnavailable

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetFollowResult`](http://go/sg.thrift/ExclusiveTweetFollowResult)"
union ExclusiveTweetFollowResult @thrift_type(name : "ExclusiveTweetFollowResult", package : "com.twitter.strato.columns.audience_rewards") = ExclusiveTweetFollowInvalidResult | ExclusiveTweetFollowSuccessResult

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetUnfollowResult`](http://go/sg.thrift/ExclusiveTweetUnfollowResult)"
union ExclusiveTweetUnfollowResult @thrift_type(name : "ExclusiveTweetUnfollowResult", package : "com.twitter.strato.columns.audience_rewards") = ExclusiveTweetUnfollowInvalidResult | ExclusiveTweetUnfollowSuccessResult

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowResult`](http://go/sg.thrift/FollowResult)"
union FollowResult @thrift_type(name : "FollowResult", package : "com.twitter.dataproducts.userrelationships.graphql") = FollowFailedResult | FollowInvalidRequestResult | FollowSuccessResult

"Generated from type: [`com.twitter.strato.columns.socialgraph.FollowRetweetsResult`](http://go/sg.thrift/FollowRetweetsResult)"
union FollowRetweetsResult @thrift_type(name : "FollowRetweetsResult", package : "com.twitter.strato.columns.socialgraph") = FollowRetweetsFailure | FollowRetweetsSuccess

"Generated from type: [`com.twitter.tweb3.graphql.result.GetNFTCollectionsResult`](http://go/sg.thrift/GetNFTCollectionsResult)"
union GetNFTCollectionsResult @thrift_type(name : "GetNFTCollectionsResult", package : "com.twitter.tweb3.graphql.result") = NFTCollectionsSlice | NFTUnverifiedWallet

"Generated from type: [`com.twitter.tweb3.graphql.result.GetNFTsResult`](http://go/sg.thrift/GetNFTsResult)"
union GetNFTsResult @thrift_type(name : "GetNFTsResult", package : "com.twitter.tweb3.graphql.result") = NFTUnverifiedWallet | NFTsSlice

union HomeTopicsNavigatorSlicesItem = TopicItem

union HomeTopicsNavigatorSlicesResult = HomeTopicsNavigatorSlices | HomeTopicsNavigatorSlicesValidationErrors

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProductMetadata`](http://go/sg.thrift/InAppPurchaseProductMetadata)"
union InAppPurchaseProductMetadata @thrift_type(name : "InAppPurchaseProductMetadata", package : "com.twitter.audiencerewards.productcatalog") = CoinsMetadata | SpacesMetadata | SubscriptionsMetadata | SuperLikesMetadata

"Generated from type: [`com.twitter.in_app_purchases.graphql.RedemptionMetadata`](http://go/sg.thrift/RedemptionMetadata)"
union InAppPurchaseRedemptionMetadata @thrift_type(name : "RedemptionMetadata", package : "com.twitter.in_app_purchases.graphql") = AccountBalance | InAppPurchaseAudienceRewards | InAppPurchaseCoins | InAppPurchaseSubscriptionMetadata | SeedsMetadata

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.ListTweetsSliceResult`](http://go/sg.thrift/ListTweetsSliceResult)"
union ListTweetsSliceResult @thrift_type(name : "ListTweetsSliceResult", package : "com.twitter.dataproducts.devo.lists.graphql") = ListTweetsSlice | ListTweetsSliceParameterValidationErrorResult

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveFollowResult`](http://go/sg.thrift/LiveFollowResult)"
union LiveFollowResult @thrift_type(name : "LiveFollowResult", package : "com.twitter.strato.columns.socialgraph") = LiveFollowInvalidRequest | LiveFollowSuccess

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveUnfollowResult`](http://go/sg.thrift/LiveUnfollowResult)"
union LiveUnfollowResult @thrift_type(name : "LiveUnfollowResult", package : "com.twitter.strato.columns.socialgraph") = LiveUnfollowInvalidRequestResult | LiveUnfollowSuccessResult

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.MediaUnavailabilityInfo`](http://go/sg.thrift/MediaUnavailabilityInfo)"
union MediaUnavailabilityInfo @thrift_type(name : "MediaUnavailabilityInfo", package : "com.twitter.mediaservices.commons.mediainformation") = MediaUnavailabilityInfoCopyrightViolation

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteResult`](http://go/sg.thrift/MuteResult)"
union MuteResult @thrift_type(name : "MuteResult", package : "com.twitter.dataproducts.userrelationships.graphql") = MuteFailedResult | MuteInvalidRequestResult | MuteSuccessResult

"Generated from type: [`com.twitter.tweb3.graphql.model.NFTCollectionMetadata`](http://go/sg.thrift/NFTCollectionMetadata)"
union NFTCollectionMetadata @thrift_type(name : "NFTCollectionMetadata", package : "com.twitter.tweb3.graphql.model") = OpenseaCollectionMetadata

"Generated from type: [`com.twitter.tweb3.graphql.model.NFTMetadata`](http://go/sg.thrift/NFTMetadata)"
union NFTMetadata @thrift_type(name : "NFTMetadata", package : "com.twitter.tweb3.graphql.model") = OpenseaNFTMetadata

"Generated from type: [`com.twitter.incentives.jiminy.NudgeType`](http://go/sg.thrift/NudgeType)"
union NudgeType @thrift_type(name : "NudgeType", package : "com.twitter.incentives.jiminy") = PotentiallyToxicTweet | ReviseOrBlock | ReviseOrHideThenBlock | ReviseOrMute

"Generated from type: [`com.twitter.pages.render.PageBody`](http://go/sg.thrift/PageBody)"
union PageBody @thrift_type(name : "PageBody", package : "com.twitter.pages.render") = SegmentedTimelines | Timeline

"""
page header rendered in a page

Generated from type: [`com.twitter.pages.render.PageHeader`](http://go/sg.thrift/PageHeader)
"""
union PageHeader @thrift_type(name : "PageHeader", package : "com.twitter.pages.render") = TopicPageHeader

"""
the UI component displayed above the timeline/header which typically contains a back button, page title and/or other control elements

Generated from type: [`com.twitter.pages.render.PageNavBar`](http://go/sg.thrift/PageNavBar)
"""
union PageNavBar @thrift_type(name : "PageNavBar", package : "com.twitter.pages.render") = TitleNavBar | TopicPageNavBar

"Generated from type: [`com.twitter.bff.BFFPaymentMethodDetails`](http://go/sg.thrift/BFFPaymentMethodDetails)"
union PaymentMethodDetails @thrift_type(name : "BFFPaymentMethodDetails", package : "com.twitter.bff") = CouponDetails | CreditCardDetails | PayPalDetails

"Generated from type: [`com.twitter.channels.management.pin_list.v3.PinListResult`](http://go/sg.thrift/PinListResult)"
union PinListResult @thrift_type(name : "PinListResult", package : "com.twitter.channels.management.pin_list.v3") = PinListInvalidRequestResult | PinListSuccessResult

"Generated from type: [`com.twitter.dataproducts.search.counthunter.CountHunterResponse`](http://go/sg.thrift/CountHunterResponse)"
union PowerTrackTweetCountResponse @thrift_type(name : "CountHunterResponse", package : "com.twitter.dataproducts.search.counthunter") = InternalServerErrorResponse | InvalidParameterResponse | InvalidParametersResponse | PowerTrackFoundTweetCounts | ServiceUnavailableResponse | UnprocessableQueryResponse

"Generated from type: [`com.twitter.dataproducts.search.idhunter.IdHunterResponse`](http://go/sg.thrift/IdHunterResponse)"
union PowerTrackTweetSearchResponse @thrift_type(name : "IdHunterResponse", package : "com.twitter.dataproducts.search.idhunter") = InternalServerErrorResponse | InvalidParameterResponse | InvalidParametersResponse | PowerTrackFoundTweets | ServiceUnavailableResponse

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductValidityDetail`](http://go/sg.thrift/ProductValidityDetail)"
union ProductValidityDetail @thrift_type(name : "ProductValidityDetail", package : "com.twitter.commerce.catalog.api.graphql") = ProductAdQualityValidityDetail | ProductCoverMediaValidityDetail

"Generated from type: [`com.twitter.bizprofiles.graphql.ProfessionalResult`](http://go/sg.thrift/ProfessionalResult)"
union ProfessionalResult @thrift_type(name : "ProfessionalResult", package : "com.twitter.bizprofiles.graphql") = Professional | ProfessionalUnavailable

"Generated from type: [`com.twitter.bizprofiles.graphql.ProfileModule`](http://go/sg.thrift/ProfileModule)"
union ProfileModule @thrift_type(name : "ProfileModule", package : "com.twitter.bizprofiles.graphql") = AboutModule | RevueModule | ShopModule

"Generated from type: [`com.twitter.quick_promote.PromoteResponse`](http://go/sg.thrift/PromoteResponse)"
union PromotionResponse @thrift_type(name : "PromoteResponse", package : "com.twitter.quick_promote") = EasypromotePromotionResponse | QuickPromoteError

"Generated from type: [`com.twitter.easypromote.QuickPromoteCouponEnrollmentResponse`](http://go/sg.thrift/QuickPromoteCouponEnrollmentResponse)"
union QuickPromoteCouponEnrollment @thrift_type(name : "QuickPromoteCouponEnrollmentResponse", package : "com.twitter.easypromote") = QuickPromoteCouponEnrollmentDetails | QuickPromoteCouponEnrollmentError

"Generated from type: [`com.twitter.quick_promote.PromoteTweetValidationResult`](http://go/sg.thrift/PromoteTweetValidationResult)"
union QuickPromoteValidationResult @thrift_type(name : "PromoteTweetValidationResult", package : "com.twitter.quick_promote") = QuickPromoteSetupError | QuickPromoteValidation | QuickPromoteValidationError

"Generated from type: [`com.twitter.timelines.graphql.slices.quote_tweets.QuoteTweetsSliceResult`](http://go/sg.thrift/QuoteTweetsSliceResult)"
union QuoteTweetsSliceResult @thrift_type(name : "QuoteTweetsSliceResult", package : "com.twitter.timelines.graphql.slices.quote_tweets") = ParameterValidationErrorResponse | QuoteTweetsSlice

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.RemoveListMemberResult`](http://go/sg.thrift/RemoveListMemberResult)"
union RemoveListMemberResult @thrift_type(name : "RemoveListMemberResult", package : "com.twitter.dataproducts.devo.lists.graphql") = RemoveListMemberFailure | RemoveListMemberSuccess

union ReportEntity = Tweet | User

union ReportEntityResult = Tweet | TweetTombstone | TweetUnavailable | TweetWithVisibilityResults | User | UserUnavailable | UserWithVisibilityTreatment

union ReportEntityResults = TweetResults | UserResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.RetweetersBySliceItem`](http://go/sg.thrift/RetweetersBySliceItem)"
union RetweetersBySliceItem @thrift_type(name : "RetweetersBySliceItem", package : "com.twitter.dataproducts.aaa.graphql") = User

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.RetweetersBySliceItem`](http://go/sg.thrift/RetweetersBySliceItem)"
union RetweetersBySliceItemResult @thrift_type(name : "RetweetersBySliceItem", package : "com.twitter.dataproducts.aaa.graphql") = User | UserUnavailable | UserWithVisibilityTreatment

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.RetweetersBySliceItem`](http://go/sg.thrift/RetweetersBySliceItem)"
union RetweetersBySliceItemResults @thrift_type(name : "RetweetersBySliceItem", package : "com.twitter.dataproducts.aaa.graphql") = UserResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.RetweetersBySliceResult`](http://go/sg.thrift/RetweetersBySliceResult)"
union RetweetersBySliceResult @thrift_type(name : "RetweetersBySliceResult", package : "com.twitter.dataproducts.aaa.graphql") = RetweetersBySlice | UserRelationshipSliceInvalidParametersResponse

"Generated from type: [`com.twitter.tweb3.graphql.model.SmartContract`](http://go/sg.thrift/SmartContract)"
union SmartContract @thrift_type(name : "SmartContract", package : "com.twitter.tweb3.graphql.model") = ERC1155 | ERC20 | ERC721 | UnknownSmartContract

"Generated from type: [`com.twitter.strato.graphql.SocialgraphListsSliceResponse`](http://go/sg.thrift/SocialgraphListsSliceResponse)"
union SocialgraphListsSliceResponse @thrift_type(name : "SocialgraphListsSliceResponse", package : "com.twitter.strato.graphql") = SocialgraphListsSlice | SocialgraphSliceParameterValidationErrorResponse

"Generated from type: [`com.twitter.strato.graphql.SocialgraphUsersSliceResponse`](http://go/sg.thrift/SocialgraphUsersSliceResponse)"
union SocialgraphSliceResponse @thrift_type(name : "SocialgraphUsersSliceResponse", package : "com.twitter.strato.graphql") = SocialgraphSliceParameterValidationErrorResponse | SocialgraphUsersSlice

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceFollowResult`](http://go/sg.thrift/SpaceDeviceFollowResult)"
union SpaceDeviceFollowResult @thrift_type(name : "SpaceDeviceFollowResult", package : "com.twitter.strato.columns.notifications") = SpaceDeviceFollowInvalidResult | SpaceDeviceFollowSuccessResult

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceUnfollowResult`](http://go/sg.thrift/SpaceDeviceUnfollowResult)"
union SpaceDeviceUnfollowResult @thrift_type(name : "SpaceDeviceUnfollowResult", package : "com.twitter.strato.columns.notifications") = SpaceDeviceUnfollowInvalidResult | SpaceDeviceUnfollowSuccessResult

"Generated from type: [`com.twitter.strato.graphql.StickerCore`](http://go/sg.thrift/StickerCore)"
union StickerCore @thrift_type(name : "StickerCore", package : "com.twitter.strato.graphql") = ImageStickerCore

"Generated from type: [`com.twitter.audiencerewards.productcatalog.SuperLikesProductAsset`](http://go/sg.thrift/SuperLikesProductAsset)"
union SuperLikesProductAsset @thrift_type(name : "SuperLikesProductAsset", package : "com.twitter.audiencerewards.productcatalog") = AnimationAsset | ImageAsset

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.Target`](http://go/sg.thrift/Target)"
union Target @thrift_type(name : "Target", package : "com.twitter.strato.columns.creative_entity_enrichments") = WebsiteTarget

"Generated from type: [`com.twitter.timelines.render.ConversationComponent`](http://go/sg.thrift/ConversationComponent)"
union TimelineConversationComponent @thrift_type(name : "ConversationComponent", package : "com.twitter.timelines.render") = TimelineConversationTweetComponent | TimelineTombstone | TimelineTweetComposer | TimelineTweetUnavailable

"Generated from type: [`com.twitter.timelines.render.Cover`](http://go/sg.thrift/Cover)"
union TimelineCover @thrift_type(name : "Cover", package : "com.twitter.timelines.render") = TimelineFullCover | TimelineHalfCover

"Generated from type: [`com.twitter.timelines.render.CoverCtaBehavior`](http://go/sg.thrift/CoverCtaBehavior)"
union TimelineCoverCtaBehavior @thrift_type(name : "CoverCtaBehavior", package : "com.twitter.timelines.render") = TimelineCoverBehaviorDismiss | TimelineCoverBehaviorNavigate

"Generated from type: [`com.twitter.timelines.render.CtaButton`](http://go/sg.thrift/CtaButton)"
union TimelineCtaButton @thrift_type(name : "CtaButton", package : "com.twitter.timelines.render") = TimelineIconCtaButton | TimelineTextCtaButton

"Generated from type: [`com.twitter.timelines.render.MediaEntity`](http://go/sg.thrift/MediaEntity)"
union TimelineMediaEntity @thrift_type(name : "MediaEntity", package : "com.twitter.timelines.render") = TimelineBroadcastId | TimelineImageVariant | TimelineTweetMedia

"Generated from type: [`com.twitter.timelines.render.MessageContent`](http://go/sg.thrift/MessageContent)"
union TimelineMessageContent @thrift_type(name : "MessageContent", package : "com.twitter.timelines.render") = TimelineCompactPrompt | TimelineHeaderImagePrompt | TimelineInlinePrompt | TimelineLargePrompt

"Generated from type: [`com.twitter.timelines.render.ModuleShowMoreBehavior`](http://go/sg.thrift/ModuleShowMoreBehavior)"
union TimelineModuleShowMoreBehavior @thrift_type(name : "ModuleShowMoreBehavior", package : "com.twitter.timelines.render") = TimelineModuleShowMoreBehaviorRevealByCount

"Generated from type: [`com.twitter.timelines.render.PagedCarouselFeedbackItemContent`](http://go/sg.thrift/PagedCarouselFeedbackItemContent)"
union TimelinePagedCarouselFeedbackItemContent @thrift_type(name : "PagedCarouselFeedbackItemContent", package : "com.twitter.timelines.render") = TimelineTweet

"Generated from type: [`com.twitter.timelines.render.PagedCarouselItemContent`](http://go/sg.thrift/PagedCarouselItemContent)"
union TimelinePagedCarouselItemContent @thrift_type(name : "PagedCarouselItemContent", package : "com.twitter.timelines.render") = TimelineMessagePrompt | TimelinePagedCarouselFeedbackItem | TimelinePagedCarouselItemgedCarouselFeedbackItem

"Generated from type: [`com.twitter.timelines.render.PreviewMetadata`](http://go/sg.thrift/PreviewMetadata)"
union TimelinePreviewMetadata @thrift_type(name : "PreviewMetadata", package : "com.twitter.timelines.render") = TimelineDraftTweetMetadata | TimelineFillerTweetMetadata

"Generated from type: [`com.twitter.timelines.render.PromptContent`](http://go/sg.thrift/PromptContent)"
union TimelinePromptContent @thrift_type(name : "PromptContent", package : "com.twitter.timelines.render") = TimelineEntityFollowPrompt | TimelineOnboardingLikesStartPrompt | TimelineRelevancePrompt | TimelineUserFollowPrompt

"Generated from type: [`com.twitter.timelines.render.ReferenceObject`](http://go/sg.thrift/ReferenceObject)"
union TimelineReferenceObject @thrift_type(name : "ReferenceObject", package : "com.twitter.timelines.render") = TimelineRichTextCashtag | TimelineRichTextHashtag | TimelineRichTextList | TimelineRichTextMention | TimelineRichTextUser | TimelineUrl

"Generated from type: [`com.twitter.timelines.render.RelevancePromptFollowUpFeedbackType`](http://go/sg.thrift/RelevancePromptFollowUpFeedbackType)"
union TimelineRelevancePromptFollowUpFeedbackType @thrift_type(name : "RelevancePromptFollowUpFeedbackType", package : "com.twitter.timelines.render") = TimelineRelevancePromptFollowUpFeedbackText

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehavior`](http://go/sg.thrift/RichFeedbackBehavior)"
union TimelineRichFeedbackBehavior @thrift_type(name : "RichFeedbackBehavior", package : "com.twitter.timelines.render") = TimelineRichFeedbackBehaviorBlockUser | TimelineRichFeedbackBehaviorMarkNotInterestedTopic | TimelineRichFeedbackBehaviorReportList | TimelineRichFeedbackBehaviorReportTweet | TimelineRichFeedbackBehaviorToggleFollowTopic | TimelineRichFeedbackBehaviorToggleFollowTopicV2 | TimelineRichFeedbackBehaviorToggleFollowUser | TimelineRichFeedbackBehaviorToggleMuteList | TimelineRichFeedbackBehaviorToggleMuteUser

"Generated from type: [`com.twitter.timelines.render.SocialContext`](http://go/sg.thrift/SocialContext)"
union TimelineSocialContext @thrift_type(name : "SocialContext", package : "com.twitter.timelines.render") = TimelineGeneralContext | TimelineTopicContext

"Generated from type: [`com.twitter.timelines.render.ThreadHeaderContent`](http://go/sg.thrift/ThreadHeaderContent)"
union TimelineThreadHeaderContent @thrift_type(name : "ThreadHeaderContent", package : "com.twitter.timelines.render") = TimelineUserThreadHeader

"Generated from type: [`com.twitter.timelines.render.TileContent`](http://go/sg.thrift/TileContent)"
union TimelineTileContent @thrift_type(name : "TileContent", package : "com.twitter.timelines.render") = TimelineExperimentTileContentDigestCard | TimelineTileContentBroadcast | TimelineTileContentCallToAction | TimelineTileContentScoreCard | TimelineTileContentStandard

"Generated from type: [`com.twitter.timelines.render.TimelineEntryContent`](http://go/sg.thrift/TimelineEntryContent)"
union TimelineTimelineEntryContent @thrift_type(name : "TimelineEntryContent", package : "com.twitter.timelines.render") = TimelineTimelineCursor | TimelineTimelineItem | TimelineTimelineModule

"Generated from type: [`com.twitter.timelines.render.TimelineInstruction`](http://go/sg.thrift/TimelineInstruction)"
union TimelineTimelineInstruction @thrift_type(name : "TimelineInstruction", package : "com.twitter.timelines.render") = TimelineAddEntries | TimelineAddToModule | TimelineAddToThread | TimelineClearCache | TimelineClearEntriesUnreadState | TimelineMarkEntriesUnread | TimelineMarkEntriesUnreadGreaterThanSortIndex | TimelineNavigation | TimelinePinEntry | TimelineRemoveEntries | TimelineReplaceEntry | TimelineScribeEvents | TimelineShowAlert | TimelineShowCover | TimelineTerminateTimeline

"Generated from type: [`com.twitter.timelines.render.TimelineItemContent`](http://go/sg.thrift/TimelineItemContent)"
union TimelineTimelineItemContent @thrift_type(name : "TimelineItemContent", package : "com.twitter.timelines.render") = ScoreEventSummary | TimelineArticle | TimelineAudioSpace | TimelineCard | TimelineCommunity | TimelineCommunityUserRelationship | TimelineConversationThread | TimelineEventSummary | TimelineFollowSearch | TimelineFollowSearchAction | TimelineHomeConversation | TimelineIconLabel | TimelineLabel | TimelineMessagePrompt | TimelineMoment | TimelineMomentAnnotation | TimelineMomentCapsuleFooter | TimelineMomentCapsuleHeader | TimelineMomentCard | TimelineNews | TimelineNotification | TimelinePagedCarouselItem | TimelinePivot | TimelinePlace | TimelinePrompt | TimelineRelatedSearch | TimelineRelatedSearches | TimelineRtbImageAd | TimelineRtbVideoAd | TimelineScoreEventCard | TimelineSpelling | TimelineThreadHeaderItem | TimelineTile | TimelineTimelineCursor | TimelineTombstone | TimelineTopic | TimelineTopicCollection | TimelineTopicFollowPrompt | TimelineTrend | TimelineTweet | TimelineTweetComposer | TimelineTweetUnavailable | TimelineTwitterList | TimelineUser | TimelineUserCommunityRelationship | TimelineVerticalGridItem | TopicLandingHeader

"Generated from type: [`com.twitter.timelines.render.TimelineReactionExecution`](http://go/sg.thrift/TimelineReactionExecution)"
union TimelineTimelineReactionExecution @thrift_type(name : "TimelineReactionExecution", package : "com.twitter.timelines.render") = TimelineGraphQLRemoteTimelineReaction | TimelineImmediateTimelineReaction | TimelineRemoteTimelineReaction

"Generated from type: [`com.twitter.timelines.render.TransparentGuideDetails`](http://go/sg.thrift/TransparentGuideDetails)"
union TimelineTransparentGuideDetails @thrift_type(name : "TransparentGuideDetails", package : "com.twitter.timelines.render") = TimelineEventUrtMetadata | TimelineNewsModuleMetadata | TimelineSemanticCoreInterest | TimelineSimClusterInterest | TimelineTrendUrtMetadata | TimelineTttInterest

"Generated from type: [`com.twitter.timelines.render.VerticalGridItemContent`](http://go/sg.thrift/VerticalGridItemContent)"
union TimelineVerticalGridItemContent @thrift_type(name : "VerticalGridItemContent", package : "com.twitter.timelines.render") = TimelineVerticalGridItemTopicTile

"Generated from type: [`com.twitter.strato.graphql.Tombstone`](http://go/sg.thrift/Tombstone)"
union Tombstone @thrift_type(name : "Tombstone", package : "com.twitter.strato.graphql") = TextTombstone

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsInfoResult`](http://go/sg.thrift/TrustedFriendsInfoResult)"
union TrustedFriendsInfoResult @thrift_type(name : "TrustedFriendsInfoResult", package : "com.twitter.trusted_friends") = ApiTrustedFriendsInfo | TrustedFriendsInfoUnavailable

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListCreateResult`](http://go/sg.thrift/TrustedFriendsListCreateResult)"
union TrustedFriendsListCreateResult @thrift_type(name : "TrustedFriendsListCreateResult", package : "com.twitter.trusted_friends") = TrustedFriendsList | TrustedFriendsListCreateInvalid

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberAddResult`](http://go/sg.thrift/TrustedFriendsListMemberAddResult)"
union TrustedFriendsListMemberAddResult @thrift_type(name : "TrustedFriendsListMemberAddResult", package : "com.twitter.trusted_friends") = TrustedFriendsListMemberAddInvalid | TrustedFriendsListMemberAddSuccess

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberRemoveResult`](http://go/sg.thrift/TrustedFriendsListMemberRemoveResult)"
union TrustedFriendsListMemberRemoveResult @thrift_type(name : "TrustedFriendsListMemberRemoveResult", package : "com.twitter.trusted_friends") = TrustedFriendsListMemberRemoveInvalid | TrustedFriendsListMemberRemoveSuccess

"Generated from type: [`com.twitter.scheduleanddraftapi.TweetCreateRequest`](http://go/sg.thrift/TweetCreateRequest)"
union TweetCreateRequest @thrift_type(name : "TweetCreateRequest", package : "com.twitter.scheduleanddraftapi") = PostRetweetRequest | PostTweetRequest

"Generated from type: [`com.twitter.eduardo.actions.TweetEditActionResult`](http://go/sg.thrift/TweetEditActionResult)"
union TweetEditActionResult @thrift_type(name : "TweetEditActionResult", package : "com.twitter.eduardo.actions") = TweetEditAction | TweetEditActionUnavailable

"Generated from type: [`com.twitter.strato.graphql.TweetInterstitial`](http://go/sg.thrift/TweetInterstitial)"
union TweetInterstitial @thrift_type(name : "TweetInterstitial", package : "com.twitter.strato.graphql") = ContextualTweetInterstitial

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetLikedBySliceItem`](http://go/sg.thrift/TweetLikedBySliceItem)"
union TweetLikedBySliceItem @thrift_type(name : "TweetLikedBySliceItem", package : "com.twitter.dataproducts.aaa.graphql") = User

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetLikedBySliceItem`](http://go/sg.thrift/TweetLikedBySliceItem)"
union TweetLikedBySliceItemResult @thrift_type(name : "TweetLikedBySliceItem", package : "com.twitter.dataproducts.aaa.graphql") = User | UserUnavailable | UserWithVisibilityTreatment

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetLikedBySliceItem`](http://go/sg.thrift/TweetLikedBySliceItem)"
union TweetLikedBySliceItemResults @thrift_type(name : "TweetLikedBySliceItem", package : "com.twitter.dataproducts.aaa.graphql") = UserResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetLikedBySliceResult`](http://go/sg.thrift/TweetLikedBySliceResult)"
union TweetLikedBySliceResult @thrift_type(name : "TweetLikedBySliceResult", package : "com.twitter.dataproducts.aaa.graphql") = TweetLikedBySlice | UserRelationshipSliceInvalidParametersResponse

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetMetricsResult`](http://go/sg.thrift/TweetMetricsResult)"
union TweetMetricsResult @thrift_type(name : "TweetMetricsResult", package : "com.twitter.dataproducts.metrics.graphql") = IsRetweet | NoAccess | TooOld | TweetMetrics | UnownedTweet

"Generated from type: [`com.twitter.strato.graphql.TweetResult`](http://go/sg.thrift/TweetResult)"
union TweetResult @thrift_type(name : "TweetResult", package : "com.twitter.strato.graphql") = Tweet | TweetTombstone | TweetUnavailable | TweetWithVisibilityResults

"Generated from type: [`com.twitter.longform.composer.TwitterArticleResult`](http://go/sg.thrift/TwitterArticleResult)"
union TwitterArticleResult @thrift_type(name : "TwitterArticleResult", package : "com.twitter.longform.composer") = TwitterArticle | TwitterArticleUnavailable

union TypeaheadItem = TypeaheadEventItem | TypeaheadQuerySuggestionItem | TypeaheadUserItem

union TypeaheadResult = TypeaheadSlice | TypeaheadValidationErrors

"Generated from type: [`com.twitter.convosvc.strato.TypingIndicatorResult`](http://go/sg.thrift/TypingIndicatorResult)"
union TypingIndicatorResult @thrift_type(name : "TypingIndicatorResult", package : "com.twitter.convosvc.strato") = TypingIndicatorFailure | TypingIndicatorSuccess

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnblockResult`](http://go/sg.thrift/UnblockResult)"
union UnblockResult @thrift_type(name : "UnblockResult", package : "com.twitter.dataproducts.userrelationships.graphql") = UnblockInvalidRequestResult | UnblockSuccessResult

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowResult`](http://go/sg.thrift/UnfollowResult)"
union UnfollowResult @thrift_type(name : "UnfollowResult", package : "com.twitter.dataproducts.userrelationships.graphql") = UnfollowFailedResult | UnfollowInvalidRequestResult | UnfollowSuccessResult

"Generated from type: [`com.twitter.strato.columns.socialgraph.UnfollowRetweetsResult`](http://go/sg.thrift/UnfollowRetweetsResult)"
union UnfollowRetweetsResult @thrift_type(name : "UnfollowRetweetsResult", package : "com.twitter.strato.columns.socialgraph") = UnfollowRetweetsFailure | UnfollowRetweetsSuccess

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnmuteResult`](http://go/sg.thrift/UnmuteResult)"
union UnmuteResult @thrift_type(name : "UnmuteResult", package : "com.twitter.dataproducts.userrelationships.graphql") = UnmuteInvalidRequestResult | UnmuteSuccessResult

"Generated from type: [`com.twitter.channels.management.pin_list.v3.UnpinListResult`](http://go/sg.thrift/UnpinListResult)"
union UnpinListResult @thrift_type(name : "UnpinListResult", package : "com.twitter.channels.management.pin_list.v3") = UnpinListSuccessResult

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserBookmarksSliceItem`](http://go/sg.thrift/UserBookmarksSliceItem)"
union UserBookmarksSliceItem @thrift_type(name : "UserBookmarksSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = Tweet

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserBookmarksSliceItem`](http://go/sg.thrift/UserBookmarksSliceItem)"
union UserBookmarksSliceItemResult @thrift_type(name : "UserBookmarksSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = Tweet | TweetTombstone | TweetUnavailable | TweetWithVisibilityResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserBookmarksSliceItem`](http://go/sg.thrift/UserBookmarksSliceItem)"
union UserBookmarksSliceItemResults @thrift_type(name : "UserBookmarksSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = TweetResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserBookmarksSliceResult`](http://go/sg.thrift/UserBookmarksSliceResult)"
union UserBookmarksSliceResult @thrift_type(name : "UserBookmarksSliceResult", package : "com.twitter.dataproducts.aaa.graphql") = UserBookmarksSlice | UserRelationshipSliceInvalidParametersResponse

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteActionResult`](http://go/sg.thrift/UserCommunityInviteActionResult)"
union UserCommunityInviteActionResult @thrift_type(name : "UserCommunityInviteActionResult", package : "com.twitter.communities.actions") = UserCommunityInviteAction | UserCommunityInviteActionUnavailable

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteMutationResult`](http://go/sg.thrift/UserCommunityInviteMutationResult)"
union UserCommunityInviteMutationResult @thrift_type(name : "UserCommunityInviteMutationResult", package : "com.twitter.communities.actions") = UserCommunityInviteActionUnavailable | UserCommunityInviteMutationError | UserCommunityRelationship

"Generated from type: [`com.twitter.commerce.drops.api.graphql.UserDropSubscriptionConfig`](http://go/sg.thrift/UserDropSubscriptionConfig)"
union UserDropSubscriptionConfig @thrift_type(name : "UserDropSubscriptionConfig", package : "com.twitter.commerce.drops.api.graphql") = UserDropSubscriptionConfigV1

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserFavoriteSliceItem`](http://go/sg.thrift/UserFavoriteSliceItem)"
union UserFavoriteSliceItem @thrift_type(name : "UserFavoriteSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = Tweet

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserFavoriteSliceItem`](http://go/sg.thrift/UserFavoriteSliceItem)"
union UserFavoriteSliceItemResult @thrift_type(name : "UserFavoriteSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = Tweet | TweetTombstone | TweetUnavailable | TweetWithVisibilityResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserFavoriteSliceItem`](http://go/sg.thrift/UserFavoriteSliceItem)"
union UserFavoriteSliceItemResults @thrift_type(name : "UserFavoriteSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = TweetResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserFavoritesSliceResult`](http://go/sg.thrift/UserFavoritesSliceResult)"
union UserFavoritesSliceResult @thrift_type(name : "UserFavoritesSliceResult", package : "com.twitter.dataproducts.aaa.graphql") = UserFavoritesSlice | UserRelationshipSliceInvalidParametersResponse

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserMentionsSliceResult`](http://go/sg.thrift/UserMentionsSliceResult)"
union UserMentionsSliceResult @thrift_type(name : "UserMentionsSliceResult", package : "com.twitter.dataproducts.aaa.graphql") = UserMentionsSlice | UserRelationshipSliceInvalidParametersResponse

"Generated from type: [`com.twitter.bizprofiles.graphql.UserOrValidationErrorResponse`](http://go/sg.thrift/UserOrValidationErrorResponse)"
union UserOrValidationErrorResponse @thrift_type(name : "UserOrValidationErrorResponse", package : "com.twitter.bizprofiles.graphql") = User | ValidationError

"Generated from type: [`com.twitter.strato.graphql.UserResult`](http://go/sg.thrift/UserResult)"
union UserResult @thrift_type(name : "UserResult", package : "com.twitter.strato.graphql") = User | UserUnavailable | UserWithVisibilityTreatment

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserTweetSliceItem`](http://go/sg.thrift/UserTweetSliceItem)"
union UserTweetSliceItem @thrift_type(name : "UserTweetSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = Tweet

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserTweetSliceItem`](http://go/sg.thrift/UserTweetSliceItem)"
union UserTweetSliceItemResult @thrift_type(name : "UserTweetSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = Tweet | TweetTombstone | TweetUnavailable | TweetWithVisibilityResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserTweetSliceItem`](http://go/sg.thrift/UserTweetSliceItem)"
union UserTweetSliceItemResults @thrift_type(name : "UserTweetSliceItem", package : "com.twitter.dataproducts.aaa.graphql") = TweetResults

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserTweetsSliceResult`](http://go/sg.thrift/UserTweetsSliceResult)"
union UserTweetsSliceResult @thrift_type(name : "UserTweetsSliceResult", package : "com.twitter.dataproducts.aaa.graphql") = UserRelationshipSliceInvalidParametersResponse | UserTweetsSlice

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UsersSlice`](http://go/sg.thrift/UsersSlice)"
union UsersSlice @thrift_type(name : "UsersSlice", package : "com.twitter.dataproducts.userrelationships.graphql") = UsersSliceInvalidParametersResponse | UsersSliceNotAuthorizedResponse | UsersSliceParameterValidationErrorResponse | UsersSliceSuccessResponse

"Generated from type: [`com.twitter.tweb3.graphql.result.VerificationSessionResult`](http://go/sg.thrift/VerificationSessionResult)"
union VerificationSessionResult @thrift_type(name : "VerificationSessionResult", package : "com.twitter.tweb3.graphql.result") = VerificationSession

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.VideoQuartileViewResult`](http://go/sg.thrift/VideoQuartileViewResult)"
union VideoQuartileViewResult @thrift_type(name : "VideoQuartileViewResult", package : "com.twitter.dataproducts.metrics.graphql") = IsRetweet | TooOld | UnownedTweet | VideoQuartileCounts

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.VideoViewResult`](http://go/sg.thrift/VideoViewResult)"
union VideoViewResult @thrift_type(name : "VideoViewResult", package : "com.twitter.dataproducts.metrics.graphql") = Count | IsRetweet | TooOld | UnownedTweet

"Generated from type: [`com.twitter.tweb3.graphql.result.Web3WalletResult`](http://go/sg.thrift/Web3WalletResult)"
union Web3WalletResult @thrift_type(name : "Web3WalletResult", package : "com.twitter.tweb3.graphql.result") = ExpiredVerificationSession | InvalidSignature | NoVerificationSession | Web3Wallet

"Generated from type: [`com.twitter.bizprofiles.graphql.AboutModule`](http://go/sg.thrift/AboutModule)"
type AboutModule @thrift_type(name : "AboutModule", package : "com.twitter.bizprofiles.graphql") {
  config: AboutModuleConfig!
  data: AboutModuleData!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.AboutModuleConfig`](http://go/sg.thrift/AboutModuleConfig)"
type AboutModuleConfig @thrift_type(name : "AboutModuleConfig", package : "com.twitter.bizprofiles.graphql") {
  enable_call: Boolean
  enable_dm: Boolean
  enable_email: Boolean
  enable_sms: Boolean
  show_directions: Boolean
  venue_id: NumericString
}

"Generated from type: [`com.twitter.bizprofiles.graphql.AboutModuleData`](http://go/sg.thrift/AboutModuleData)"
type AboutModuleData @thrift_type(name : "AboutModuleData", package : "com.twitter.bizprofiles.graphql") {
  address: BusinessAddressResponse
  contact: BusinessContact
  open_times: BusinessOpenTimesResponse
  timezone: BusinessTimezone
  website: ApiShortenedUrl
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestFailure`](http://go/sg.thrift/AcceptFollowRequestFailure)"
type AcceptFollowRequestFailure @thrift_type(name : "AcceptFollowRequestFailure", package : "com.twitter.strato.columns.socialgraph") {
  accept_follow_request_failed_reason: AcceptFollowRequestFailedReason!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestInvalidRequest`](http://go/sg.thrift/AcceptFollowRequestInvalidRequest)"
type AcceptFollowRequestInvalidRequest @thrift_type(name : "AcceptFollowRequestInvalidRequest", package : "com.twitter.strato.columns.socialgraph") {
  accept_follow_request_invalid_request_reason: AcceptFollowRequestInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestSuccess`](http://go/sg.thrift/AcceptFollowRequestSuccess)"
type AcceptFollowRequestSuccess @thrift_type(name : "AcceptFollowRequestSuccess", package : "com.twitter.strato.columns.socialgraph") {
  accept_follow_request_success_reason: AcceptFollowRequestSuccessReason!
}

"Generated from type: [`com.twitter.balance_service.graphql.AccountBalance`](http://go/sg.thrift/AccountBalance)"
type AccountBalance @thrift_type(name : "AccountBalance", package : "com.twitter.balance_service.graphql") {
  amount: Int!
  at_limit: Boolean!
  balance_type: AccountBalanceType!
}

"Generated from type: [`com.twitter.ceaamplifyvideos.AmplifyVideosForAccountQuery`](http://go/sg.thrift/AmplifyVideosForAccountQuery)"
type AccountMediaAmplifyVideos @thrift_type(name : "AmplifyVideosForAccountQuery", package : "com.twitter.ceaamplifyvideos") {
  account_media_id: NumericString!
  created_at: Int53!
  media: ApiMedia!
}

"Generated from type: [`com.twitter.ceaaccountpermissions.AccountPermissionsResponse`](http://go/sg.thrift/AccountPermissionsResponse)"
type AccountPermissionsResponse @thrift_type(name : "AccountPermissionsResponse", package : "com.twitter.ceaaccountpermissions") {
  permission_set: [AccountPermissionSet!]!
}

"Generated from type: [`com.twitter.accountsync.ClientConfig`](http://go/sg.thrift/ClientConfig)"
type AccountSyncClientConfig @thrift_type(name : "ClientConfig", package : "com.twitter.accountsync") {
  active_deck_id: NumericString
  composer_expanded: Boolean
  default_column_width: AccountSyncColumnWidth
  default_media_preview: AccountSyncMediaPreview
  default_visual_scaling: AccountSyncVisualScaling
  navbar_expanded: Boolean
}

"Generated from type: [`com.twitter.accountsync.Deck`](http://go/sg.thrift/Deck)"
type AccountSyncDeck @thrift_type(name : "Deck", package : "com.twitter.accountsync") {
  description: String
  following_deck_id: NumericString
  icon: String
  is_pinned: Boolean
  sharing_status: AccountSyncSharingStatus
  title: String
}

"Generated from type: [`com.twitter.accountsync.DeckColumn`](http://go/sg.thrift/DeckColumn)"
type AccountSyncDeckColumn @thrift_type(name : "DeckColumn", package : "com.twitter.accountsync") {
  description: String
  drawer_selected_page: AccountSyncPages
  drawer_selected_tab: AccountSyncTabs
  feed_option: AccountSyncTweetFeedOptions
  feed_type: AccountSyncFeedType
  following_deck_column_id: NumericString
  hide_header: Boolean
  latest: Boolean
  media_preview: AccountSyncMediaPreview
  pathname: String
  query: String
  sharing_status: AccountSyncSharingStatus
  show_drawer: Boolean
  show_tweets_after: String
  title: String
  width: AccountSyncColumnWidth
}

"Generated from type: [`com.twitter.accountsync.DeckColumnV2`](http://go/sg.thrift/DeckColumnV2)"
type AccountSyncDeckColumnV2 @thrift_type(name : "DeckColumnV2", package : "com.twitter.accountsync") {
  creator_id: NumericString
  description: String
  drawer_selected_page: AccountSyncPages
  drawer_selected_tab: AccountSyncTabs
  feed_option: AccountSyncTweetFeedOptions
  feed_type: AccountSyncFeedType
  following_deck_column_id: NumericString
  hide_header: Boolean
  latest: Boolean
  media_preview: AccountSyncMediaPreview
  pathname: String
  query: String
  rest_id: String!
  sharing_status: AccountSyncSharingStatus
  show_drawer: Boolean
  show_tweets_after: String
  title: String
  width: AccountSyncColumnWidth
}

"Generated from type: [`com.twitter.accountsync.OnboardingStateResponse`](http://go/sg.thrift/OnboardingStateResponse)"
type AccountSyncOnboardingStateResponse @thrift_type(name : "OnboardingStateResponse", package : "com.twitter.accountsync") {
  "Deprecated( use betaSurveyDismissed instead)"
  beta_survey_completed: Boolean! @deprecated(reason : "use betaSurveyDismissed instead")
  beta_survey_dismissed: Boolean!
  show_import_modal: Boolean!
  show_onboarding_tour: Boolean!
  show_opt_in_modal: Boolean!
}

"Generated from type: [`com.twitter.vibes.UserActiveVibe`](http://go/sg.thrift/UserActiveVibe)"
type ActiveVibe @thrift_type(name : "UserActiveVibe", package : "com.twitter.vibes") {
  vibe: Vibe!
}

"Generated from Strato space: `Ad`"
type Ad @strato_space(name : "Ad") {
  """
  The account associated with this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/account.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/account)
  """
  account: AdvertiserAccount @development @strato_column(path : "graphql/ads/hubble/ad/account.Ad") @strato_op(value : Fetch)
  """
  The ad group associated with this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/adGroup.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/adGroup)
  """
  ad_group: AdGroup @development @strato_column(path : "graphql/ads/hubble/ad/adGroup.Ad") @strato_op(value : Fetch)
  """
  The approval status of this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/approvalStatus.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/approvalStatus)
  """
  approval_status: HubbleApprovalStatus @strato_column(path : "graphql/ads/hubble/ad/approvalStatus.Ad") @strato_op(value : Fetch)
  """
  The campaign associated with this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/campaign.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/campaign)
  """
  campaign: AdCampaign @strato_column(path : "graphql/ads/hubble/ad/campaign.Ad") @strato_op(value : Fetch)
  """
  The ISO8601 creation timestamp for an AdGroup
  
  Generated from Strato column: [graphql/ads/hubble/ad/createdAt.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/createdAt)
  """
  created_at: String @development @strato_column(path : "graphql/ads/hubble/ad/createdAt.Ad") @strato_op(value : Fetch)
  """
  Retrieves the CreativeKey for a tweet and an ad key
  
  Generated from Strato column: [graphql/professional-analytics/Creative.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/professional-analytics/Creative)
  """
  creative: AdCreative @development @strato_column(path : "graphql/professional-analytics/Creative.Ad") @strato_op(value : Fetch)
  """
  The type of creative this ad represents
  
  Generated from Strato column: [graphql/ads/hubble/ad/creativeType.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/creativeType)
  """
  creative_type: HubbleCreativeType @development @strato_column(path : "graphql/ads/hubble/ad/creativeType.Ad") @strato_op(value : Fetch)
  """
  The 3 letter ISO 4217 currency code for this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/currency.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/currency)
  """
  currency: String @development @strato_column(path : "graphql/ads/hubble/ad/currency.Ad") @strato_op(value : Fetch)
  """
  The funding source associated with this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/fundingSource.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/fundingSource)
  """
  funding_source: AdFundingSource @development @strato_column(path : "graphql/ads/hubble/ad/fundingSource.Ad") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The automatically generated name for this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/name.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/name)
  """
  name: String @development @strato_column(path : "graphql/ads/hubble/ad/name.Ad") @strato_op(value : Fetch)
  """
  The objective you selected for this ad's campaign
  
  Generated from Strato column: [graphql/ads/hubble/ad/objective.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/objective)
  """
  objective: HubbleObjective @development @strato_column(path : "graphql/ads/hubble/ad/objective.Ad") @strato_op(value : Fetch)
  """
  The ID of this Ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/restId.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/restId)
  """
  rest_id: NumericString @development @strato_column(path : "graphql/ads/hubble/ad/restId.Ad") @strato_op(value : Fetch)
  """
  The serving status of this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/servingStatus.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/servingStatus)
  """
  serving_status: HubbleServingStatus @development @strato_column(path : "graphql/ads/hubble/ad/servingStatus.Ad") @strato_op(value : Fetch)
  """
  The effective status of this ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/status.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/status)
  """
  status: HubbleStatus @development @strato_column(path : "graphql/ads/hubble/ad/status.Ad") @strato_op(value : Fetch)
  """
  The ISO8601 update timestamp for an ad
  
  Generated from Strato column: [graphql/ads/hubble/ad/updatedAt.Ad](https://strato.twitter.biz/web/browse/Ad/graphql/ads/hubble/ad/updatedAt)
  """
  updated_at: String @development @strato_column(path : "graphql/ads/hubble/ad/updatedAt.Ad") @strato_op(value : Fetch)
}

type AdAccountClaimBackup {
  ad_account_user_permission_sets: [AdAccountUserPermissionSet!]!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from Strato space: `AdCampaign`"
type AdCampaign @strato_space(name : "AdCampaign") {
  """
  The account associated with this campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/account.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/account)
  """
  account: AdvertiserAccount @development @strato_column(path : "graphql/ads/hubble/campaign/account.AdCampaign") @strato_op(value : Fetch)
  """
  The rate at which your campaign is delivering spend over your campaign flight length.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/campaignFlightPacing.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/campaignFlightPacing)
  """
  campaign_flight_pacing: Float @development @strato_column(path : "graphql/ads/hubble/campaign/campaignFlightPacing.AdCampaign") @strato_op(value : Fetch)
  """
  The ISO8601 creation timestamp for a Campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/createdAt.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/createdAt)
  """
  created_at: String @development @strato_column(path : "graphql/ads/hubble/campaign/createdAt.AdCampaign") @strato_op(value : Fetch)
  """
  The 3 letter ISO 4217 currency code for this campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/currency.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/currency)
  """
  currency: String @development @strato_column(path : "graphql/ads/hubble/campaign/currency.AdCampaign") @strato_op(value : Fetch)
  """
  The maximum amount you're willing to spend on each campaign on average per day
  
  Generated from Strato column: [graphql/ads/hubble/campaign/dailyBudget.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/dailyBudget)
  """
  daily_budget: Int53 @development @strato_column(path : "graphql/ads/hubble/campaign/dailyBudget.AdCampaign") @strato_op(value : Fetch)
  """
  The rate at which your campaign is evenly delivering spend today. Daily pacing does not reflect campaign lifetime.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/dailyPacing.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/dailyPacing)
  """
  daily_pacing: Float @development @strato_column(path : "graphql/ads/hubble/campaign/dailyPacing.AdCampaign") @strato_op(value : Fetch)
  """
  The time this campaign is no longer eligible for auctions. When null the campaign will remain eligible indefinitely.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/endTime.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/endTime)
  """
  end_time: String @strato_column(path : "graphql/ads/hubble/campaign/endTime.AdCampaign") @strato_op(value : Fetch)
  """
  The funding source associated with this campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/fundingSource.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/fundingSource)
  """
  funding_source: AdFundingSource @development @strato_column(path : "graphql/ads/hubble/campaign/fundingSource.AdCampaign") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Last time when the campaign had any activity
  
  Generated from Strato column: [graphql/ads/hubble/campaign/lastActiveAt.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/lastActiveAt)
  """
  last_active_at: String @development @strato_column(path : "graphql/ads/hubble/campaign/lastActiveAt.AdCampaign") @strato_op(value : Fetch)
  """
  Fetch time series metrics for an Ad Campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/metricsTimeSeries.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/metricsTimeSeries)
  """
  metrics_time_series(from_time: AnalyticsTimestampInput!, granularity: HubbleMetricsTimeSeriesGranularityInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTimeSeriesValue!] @development @strato_column(path : "graphql/ads/hubble/campaign/metricsTimeSeries.AdCampaign") @strato_op(value : Fetch)
  """
  Fetch metrics for an Ad Campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/metricsTotal.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/campaign/metricsTotal.AdCampaign") @strato_op(value : Fetch)
  """
  The user-supplied name to identify this campaign in the UI and API.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/name.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/name)
  """
  name: String @development @strato_column(path : "graphql/ads/hubble/campaign/name.AdCampaign") @strato_op(value : Fetch)
  """
  The objective you selected for your campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/objective.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/objective)
  """
  objective: HubbleObjective @development @strato_column(path : "graphql/ads/hubble/campaign/objective.AdCampaign") @strato_op(value : Fetch)
  """
  The amount of budget that is currently available to spend.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/remainingBudget.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/remainingBudget)
  """
  remaining_budget: Int53 @development @strato_column(path : "graphql/ads/hubble/campaign/remainingBudget.AdCampaign") @strato_op(value : Fetch)
  """
  The ID of this campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/restId.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/restId)
  """
  rest_id: NumericString @development @strato_column(path : "graphql/ads/hubble/campaign/restId.AdCampaign") @strato_op(value : Fetch)
  """
  The serving status of this campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/servingStatus.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/servingStatus)
  """
  serving_status: HubbleServingStatus @development @strato_column(path : "graphql/ads/hubble/campaign/servingStatus.AdCampaign") @strato_op(value : Fetch)
  """
  The time this campaign becomes eligible for auctions.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/startTime.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/startTime)
  """
  start_time: String @strato_column(path : "graphql/ads/hubble/campaign/startTime.AdCampaign") @strato_op(value : Fetch)
  """
  The effective status of this campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/status.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/status)
  """
  status: HubbleStatus @strato_column(path : "graphql/ads/hubble/campaign/status.AdCampaign") @strato_op(value : Fetch)
  """
  The takeover AdGroup/LineItem if any. Used to extract the hashtag/targeting fields.
  
  Generated from Strato column: [graphql/ads/hubble/campaign/takeoverAdGroup.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/takeoverAdGroup)
  """
  takeover_ad_group: AdGroup @development @strato_column(path : "graphql/ads/hubble/campaign/takeoverAdGroup.AdCampaign") @strato_op(value : Fetch)
  """
  The maximum amount you're willing to spend on each campaign for the duration of the campaign
  
  Generated from Strato column: [graphql/ads/hubble/campaign/totalBudget.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/totalBudget)
  """
  total_budget: Int53 @development @strato_column(path : "graphql/ads/hubble/campaign/totalBudget.AdCampaign") @strato_op(value : Fetch)
  """
  The timestamp when this campaign was updated
  
  Generated from Strato column: [graphql/ads/hubble/campaign/updatedAt.AdCampaign](https://strato.twitter.biz/web/browse/AdCampaign/graphql/ads/hubble/campaign/updatedAt)
  """
  updated_at: String @development @strato_column(path : "graphql/ads/hubble/campaign/updatedAt.AdCampaign") @strato_op(value : Fetch)
}

"Generated from Strato space: `AdCreative`"
type AdCreative @strato_space(name : "AdCreative") {
  "A globally unique identifier"
  id: ID!
  """
  Fetch metrics for an Ad Creative
  
  Generated from Strato column: [graphql/ads/hubble/ad-creative/metricsTotal.AdCreative](https://strato.twitter.biz/web/browse/AdCreative/graphql/ads/hubble/ad-creative/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/ad-creative/metricsTotal.AdCreative") @strato_op(value : Fetch)
}

"Generated from Strato space: `AdFundingSource`"
type AdFundingSource @strato_space(name : "AdFundingSource") {
  """
  The account associated with this funding source
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/account.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/account)
  """
  account: AdvertiserAccount @development @strato_column(path : "graphql/ads/hubble/funding-source/account.AdFundingSource") @strato_op(value : Fetch)
  """
  The ISO8601 creation timestamp for a Funding Instrument
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/createdAt.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/createdAt)
  """
  created_at: String @development @strato_column(path : "graphql/ads/hubble/funding-source/createdAt.AdFundingSource") @strato_op(value : Fetch)
  """
  The limit on your credit line
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/creditLimit.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/creditLimit)
  """
  credit_limit: Int53 @development @strato_column(path : "graphql/ads/hubble/funding-source/creditLimit.AdFundingSource") @strato_op(value : Fetch)
  """
  The 3 letter ISO 4217 currency code for this funding instrument
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/currency.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/currency)
  """
  currency: String @development @strato_column(path : "graphql/ads/hubble/funding-source/currency.AdFundingSource") @strato_op(value : Fetch)
  """
  The timestamp when serving funded by this source must end. If null this funding source is valid indefinitely
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/endTime.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/endTime)
  """
  end_time: String @development @strato_column(path : "graphql/ads/hubble/funding-source/endTime.AdFundingSource") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The total budget available from your funding source
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/lifetimeBudget.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/lifetimeBudget)
  """
  lifetime_budget: Int53 @development @strato_column(path : "graphql/ads/hubble/funding-source/lifetimeBudget.AdFundingSource") @strato_op(value : Fetch)
  """
  The remaining budget for your funding source
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/lifetimeBudgetRemaining.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/lifetimeBudgetRemaining)
  """
  lifetime_budget_remaining: Int53 @development @strato_column(path : "graphql/ads/hubble/funding-source/lifetimeBudgetRemaining.AdFundingSource") @strato_op(value : Fetch)
  """
  The lifetime pacing of your funding source
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/lifetimePacing.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/lifetimePacing)
  """
  lifetime_pacing: Float @development @strato_column(path : "graphql/ads/hubble/funding-source/lifetimePacing.AdFundingSource") @strato_op(value : Fetch)
  """
  The total spend for your funding source for all time
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/lifetimeSpend.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/lifetimeSpend)
  """
  lifetime_spend: Int53 @development @strato_column(path : "graphql/ads/hubble/funding-source/lifetimeSpend.AdFundingSource") @strato_op(value : Fetch)
  """
  Fetch time series metrics for a FundingInstrument
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/metricsTimeSeries.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/metricsTimeSeries)
  """
  metrics_time_series(from_time: AnalyticsTimestampInput!, granularity: HubbleMetricsTimeSeriesGranularityInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTimeSeriesValue!] @development @strato_column(path : "graphql/ads/hubble/funding-source/metricsTimeSeries.AdFundingSource") @strato_op(value : Fetch)
  """
  Fetch metrics for a FundingInstrument
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/metricsTotal.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/funding-source/metricsTotal.AdFundingSource") @strato_op(value : Fetch)
  """
  The name of this funding source (generated automatically)
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/name.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/name)
  """
  name: String @development @strato_column(path : "graphql/ads/hubble/funding-source/name.AdFundingSource") @strato_op(value : Fetch)
  """
  The total credit remaining on your credit line
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/remainingCredit.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/remainingCredit)
  """
  remaining_credit: Int53 @development @strato_column(path : "graphql/ads/hubble/funding-source/remainingCredit.AdFundingSource") @strato_op(value : Fetch)
  """
  The ID of this funding source
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/restId.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/restId)
  """
  rest_id: NumericString @development @strato_column(path : "graphql/ads/hubble/funding-source/restId.AdFundingSource") @strato_op(value : Fetch)
  """
  The serving status of this campaign
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/servingStatus.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/servingStatus)
  """
  serving_status: HubbleServingStatus @development @strato_column(path : "graphql/ads/hubble/funding-source/servingStatus.AdFundingSource") @strato_op(value : Fetch)
  """
  The timestamp when serving funded by this source can start
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/startTime.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/startTime)
  """
  start_time: String @development @strato_column(path : "graphql/ads/hubble/funding-source/startTime.AdFundingSource") @strato_op(value : Fetch)
  """
  The effective status of this FundingInstrument
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/status.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/status)
  """
  status: HubbleStatus @development @strato_column(path : "graphql/ads/hubble/funding-source/status.AdFundingSource") @strato_op(value : Fetch)
  """
  The type of funding source this represents
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/type.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/type)
  """
  type: HubbleFundingSourceType @development @strato_column(path : "graphql/ads/hubble/funding-source/type.AdFundingSource") @strato_op(value : Fetch)
  """
  The timestamp when this FundingSource was updated
  
  Generated from Strato column: [graphql/ads/hubble/funding-source/updatedAt.AdFundingSource](https://strato.twitter.biz/web/browse/AdFundingSource/graphql/ads/hubble/funding-source/updatedAt)
  """
  updated_at: String @development @strato_column(path : "graphql/ads/hubble/funding-source/updatedAt.AdFundingSource") @strato_op(value : Fetch)
}

type AdFundingSourceSlice {
  items: [AdFundingSource!]!
  slice_info: SliceInfo!
}

"Generated from Strato space: `AdGroup`"
type AdGroup @strato_space(name : "AdGroup") {
  """
  The account associated with this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/account.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/account)
  """
  account: AdvertiserAccount @development @strato_column(path : "graphql/ads/hubble/ad-group/account.AdGroup") @strato_op(value : Fetch)
  """
  The amount you're willing to bid in the auction for your ads to be seen
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/bidAmount.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/bidAmount)
  """
  bid_amount: Int53 @development @strato_column(path : "graphql/ads/hubble/ad-group/bidAmount.AdGroup") @strato_op(value : Fetch)
  """
  The method you use to set how much you're willing to pay to show your ad.
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/bidType.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/bidType)
  """
  bid_type: HubbleBidType @development @strato_column(path : "graphql/ads/hubble/ad-group/bidType.AdGroup") @strato_op(value : Fetch)
  """
  The bid unit indicates how you are charged if you are bidding on specific actions
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/bidUnit.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/bidUnit)
  """
  bid_unit: HubbleBidUnit @development @strato_column(path : "graphql/ads/hubble/ad-group/bidUnit.AdGroup") @strato_op(value : Fetch)
  """
  The campaign associated with this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/campaign.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/campaign)
  """
  campaign: AdCampaign @development @strato_column(path : "graphql/ads/hubble/ad-group/campaign.AdGroup") @strato_op(value : Fetch)
  """
  The ISO8601 creation timestamp for an AdGroup
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/createdAt.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/createdAt)
  """
  created_at: String @development @strato_column(path : "graphql/ads/hubble/ad-group/createdAt.AdGroup") @strato_op(value : Fetch)
  """
  The 3 letter ISO 4217 currency code for this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/currency.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/currency)
  """
  currency: String @development @strato_column(path : "graphql/ads/hubble/ad-group/currency.AdGroup") @strato_op(value : Fetch)
  """
  The timestamp when this ad group is no longer eligible for auction
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/endTime.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/endTime)
  """
  end_time: String @development @strato_column(path : "graphql/ads/hubble/ad-group/endTime.AdGroup") @strato_op(value : Fetch)
  """
  The funding source associated with this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/fundingSource.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/fundingSource)
  """
  funding_source: AdFundingSource @development @strato_column(path : "graphql/ads/hubble/ad-group/fundingSource.AdGroup") @strato_op(value : Fetch)
  """
  A combination of bid unit and optimization preference
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/goal.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/goal)
  """
  goal: HubbleGoal @development @strato_column(path : "graphql/ads/hubble/ad-group/goal.AdGroup") @strato_op(value : Fetch)
  """
  The user-supplied hashtag/query for the takeover campaign.
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/hashtag.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/hashtag)
  """
  hashtag: String @development @strato_column(path : "graphql/ads/hubble/ad-group/hashtag.AdGroup") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Fetch time series metrics for an Adgroup
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/metricsTimeSeries.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/metricsTimeSeries)
  """
  metrics_time_series(from_time: AnalyticsTimestampInput!, granularity: HubbleMetricsTimeSeriesGranularityInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTimeSeriesValue!] @development @strato_column(path : "graphql/ads/hubble/ad-group/metricsTimeSeries.AdGroup") @strato_op(value : Fetch)
  """
  Fetch metrics for an Adgroup
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/metricsTotal.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/ad-group/metricsTotal.AdGroup") @strato_op(value : Fetch)
  """
  The user-supplied name to identify this ad group in the UI and API.
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/name.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/name)
  """
  name: String @development @strato_column(path : "graphql/ads/hubble/ad-group/name.AdGroup") @strato_op(value : Fetch)
  """
  The objective you selected for this ad group's campaign
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/objective.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/objective)
  """
  objective: HubbleObjective @development @strato_column(path : "graphql/ads/hubble/ad-group/objective.AdGroup") @strato_op(value : Fetch)
  """
  Where this ad group's creatives should be shown
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/placements.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/placements)
  """
  placements: [HubblePlacement!] @development @strato_column(path : "graphql/ads/hubble/ad-group/placements.AdGroup") @strato_op(value : Fetch)
  """
  Defines which promoted product which can be associated with this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/productType.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/productType)
  """
  product_type: HubbleProductType @development @strato_column(path : "graphql/ads/hubble/ad-group/productType.AdGroup") @strato_op(value : Fetch)
  """
  The ID of this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/restId.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/restId)
  """
  rest_id: NumericString @development @strato_column(path : "graphql/ads/hubble/ad-group/restId.AdGroup") @strato_op(value : Fetch)
  """
  The serving status of this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/servingStatus.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/servingStatus)
  """
  serving_status: HubbleServingStatus @development @strato_column(path : "graphql/ads/hubble/ad-group/servingStatus.AdGroup") @strato_op(value : Fetch)
  """
  The timestamp when this ad group becomes eligible for auction
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/startTime.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/startTime)
  """
  start_time: String @development @strato_column(path : "graphql/ads/hubble/ad-group/startTime.AdGroup") @strato_op(value : Fetch)
  """
  The effective status of this ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/status.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/status)
  """
  status: HubbleStatus @development @strato_column(path : "graphql/ads/hubble/ad-group/status.AdGroup") @strato_op(value : Fetch)
  """
  Return the location name for the AdGroup Targeting if any.
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/targetingLocation.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/targetingLocation)
  """
  targeting_location: String @development @strato_column(path : "graphql/ads/hubble/ad-group/targetingLocation.AdGroup") @strato_op(value : Fetch)
  """
  The maximum amount you're willing to spend on each ad group, for the duration of the ad group flight length.
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/totalBudget.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/totalBudget)
  """
  total_budget: Int53 @development @strato_column(path : "graphql/ads/hubble/ad-group/totalBudget.AdGroup") @strato_op(value : Fetch)
  """
  The ISO8601 update timestamp for an ad group
  
  Generated from Strato column: [graphql/ads/hubble/ad-group/updatedAt.AdGroup](https://strato.twitter.biz/web/browse/AdGroup/graphql/ads/hubble/ad-group/updatedAt)
  """
  updated_at: String @development @strato_column(path : "graphql/ads/hubble/ad-group/updatedAt.AdGroup") @strato_op(value : Fetch)
}

type AdGroupSlice {
  items: [AdGroup!]!
  slice_info: SliceInfo!
}

type AdGroupUsage {
  "Indicates number of active line items in use."
  active: Int!
  "Indicates max number of line items allowed."
  limit: Int!
}

"Generated from Strato space: `AdGroupView`"
type AdGroupView @strato_space(name : "AdGroupView") {
  "A globally unique identifier"
  id: ID!
  """
  Fetch metrics for an Ad Group View
  
  Generated from Strato column: [graphql/ads/hubble/ad-group-view/metricsTotal.AdGroupView](https://strato.twitter.biz/web/browse/AdGroupView/graphql/ads/hubble/ad-group-view/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/ad-group-view/metricsTotal.AdGroupView") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: HubbleAdGroupViewKey!
  """
  Get filtered Campaigns associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/ad-group-view/slice.AdGroupView](https://strato.twitter.biz/web/browse/AdGroupView/graphql/ads/hubble/ad-group-view/slice)
  """
  slice(cursor: String, next: Int): AdGroupSlice @development @strato_column(path : "graphql/ads/hubble/ad-group-view/slice.AdGroupView") @strato_op(value : Fetch)
}

type AdSlice {
  items: [Ad!]!
  slice_info: SliceInfo!
}

"Generated from Strato space: `AdView`"
type AdView @strato_space(name : "AdView") {
  "A globally unique identifier"
  id: ID!
  """
  Fetch metrics for an Ad View
  
  Generated from Strato column: [graphql/ads/hubble/ad-view/metricsTotal.AdView](https://strato.twitter.biz/web/browse/AdView/graphql/ads/hubble/ad-view/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/ad-view/metricsTotal.AdView") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: HubbleAdViewKey!
  """
  Get filtered Campaigns associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/ad-view/slice.AdView](https://strato.twitter.biz/web/browse/AdView/graphql/ads/hubble/ad-view/slice)
  """
  slice(cursor: String, next: Int): AdSlice @development @strato_column(path : "graphql/ads/hubble/ad-view/slice.AdView") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberFailedResult`](http://go/sg.thrift/AddListMemberFailedResult)"
type AddListMemberFailedResult @thrift_type(name : "AddListMemberFailedResult", package : "com.twitter.dataproducts.devo.lists.graphql") {
  add_list_member_failed_reason: AddListMemberFailedReason!
  user_id: NumericString
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberInvalidRequestResult`](http://go/sg.thrift/AddListMemberInvalidRequestResult)"
type AddListMemberInvalidRequestResult @thrift_type(name : "AddListMemberInvalidRequestResult", package : "com.twitter.dataproducts.devo.lists.graphql") {
  add_list_member_invalid_request_reason: AddListMemberInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
  user_id: NumericString
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberSuccessResult`](http://go/sg.thrift/AddListMemberSuccessResult)"
type AddListMemberSuccessResult @thrift_type(name : "AddListMemberSuccessResult", package : "com.twitter.dataproducts.devo.lists.graphql") {
  add_list_member_success_reason: AddListMemberSuccessReason!
  user_id: NumericString
}

"Generated from type: [`com.twitter.convosvc.strato.AddParticipantsFailure`](http://go/sg.thrift/AddParticipantsFailure)"
type AddParticipantsFailure @thrift_type(name : "AddParticipantsFailure", package : "com.twitter.convosvc.strato") {
  message: String
  reason: AddParticipantsFailureReason!
}

"Generated from type: [`com.twitter.convosvc.strato.AddParticipantsSuccess`](http://go/sg.thrift/AddParticipantsSuccess)"
type AddParticipantsSuccess @thrift_type(name : "AddParticipantsSuccess", package : "com.twitter.convosvc.strato") {
  added_users: [NumericString!]
  participants_join_event: DMEventItem
  user_failures: [UserFailures!]
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.AddSuperFollowerPrivacyResult`](http://go/sg.thrift/AddSuperFollowerPrivacyResult)"
type AddSuperFollowerPrivacyResult @thrift_type(name : "AddSuperFollowerPrivacyResult", package : "com.twitter.strato.columns.audience_rewards") {
  result_code: AddSuperFollowerPrivacyResultCode! @development
}

"Generated from type: [`com.twitter.ceaaccountperspective.AccountPerspectiveResponse`](http://go/sg.thrift/AccountPerspectiveResponse)"
type AdsAccountPerspectiveResponse @thrift_type(name : "AccountPerspectiveResponse", package : "com.twitter.ceaaccountperspective") {
  approval_status: CreativeApprovalStatus
  created_at: AdsAccountTimestamp
  features: [Feature!]!
  service_level: ServiceLevel
  timezone: String
}

"Generated from type: [`com.twitter.ceaaccountperspective.Timestamp`](http://go/sg.thrift/Timestamp)"
type AdsAccountTimestamp @thrift_type(name : "Timestamp", package : "com.twitter.ceaaccountperspective") {
  "A string of the format YYYY-MM-DD HH:MM:SS, representing the point in time in the UTC timezone."
  formatted_time: String
  "Seconds since the epoch."
  posix_time: NumericString
}

"Generated from type: [`com.twitter.strato.graphql.AdsSubscriptionAccess`](http://go/sg.thrift/AdsSubscriptionAccess)"
type AdsSubscriptionAccess @thrift_type(name : "AdsSubscriptionAccess", package : "com.twitter.strato.graphql") {
  is_whitelisted: Boolean
}

"Generated from Strato space: `AdvertiserAccount`"
type AdvertiserAccount @strato_space(name : "AdvertiserAccount") {
  "Generated from Strato column: [graphql/customer-experience-apps/adGroupUsage.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/adGroupUsage)"
  ad_group_usage: AdGroupUsage @strato_column(path : "graphql/customer-experience-apps/adGroupUsage.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Get AdGroups associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/account/adGroups.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/adGroups)
  """
  ad_groups(filter_by_ad_group_ids: [NumericString!], filter_by_campaign_ids: [NumericString!], filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilterInput, filter_by_funding_source_ids: [NumericString!], filter_by_objectives: [HubbleObjectiveInput!], include_deleted: Boolean): AdGroupView @development @strato_column(path : "graphql/ads/hubble/account/adGroups.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Get Ads associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/account/ads.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/ads)
  """
  ads(filter_by_ad_group_ids: [NumericString!], filter_by_campaign_ids: [NumericString!], filter_by_creative_ids: [NumericString!], filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilterInput, filter_by_funding_source_ids: [NumericString!], filter_by_objectives: [HubbleObjectiveInput!], include_deleted: Boolean): AdView @development @strato_column(path : "graphql/ads/hubble/account/ads.AdvertiserAccount") @strato_op(value : Fetch)
  """
  The approval status of this account
  
  Generated from Strato column: [graphql/ads/hubble/account/approvalStatus.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/approvalStatus)
  """
  approval_status: HubbleApprovalStatus @development @strato_column(path : "graphql/ads/hubble/account/approvalStatus.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Fetch audience segmented metrics for an Ad Account
  
  Generated from Strato column: [graphql/ads/hubble/account/audience.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/audience)
  """
  audience(dimension: HubbleAudienceDimensionInput!, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, sub_segment: HubbleAudienceSubSegmentInput, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/account/audience.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Returns the list of available countries
  
  Generated from Strato column: [graphql/customer-experience-apps/availableCountries.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/availableCountries)
  """
  available_countries: [String!] @strato_column(path : "graphql/customer-experience-apps/availableCountries.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Get Campaigns associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/account/campaigns.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/campaigns)
  """
  campaigns(filter_by_campaign_ids: [NumericString!], filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilterInput, filter_by_funding_source_ids: [NumericString!], filter_by_objectives: [HubbleObjectiveInput!], include_deleted: Boolean): CampaignView @development @strato_column(path : "graphql/ads/hubble/account/campaigns.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Country where the account is based. ISO 3166-1 alpha-2
  
  Generated from Strato column: [graphql/ads/hubble/account/countryCode.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/countryCode)
  """
  country_code: String @development @strato_column(path : "graphql/ads/hubble/account/countryCode.AdvertiserAccount") @strato_op(value : Fetch)
  """
  The ISO8601 creation timestamp for an Account
  
  Generated from Strato column: [graphql/ads/hubble/account/createdAt.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/createdAt)
  """
  created_at: String @development @strato_column(path : "graphql/ads/hubble/account/createdAt.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Column that returns all filters and their metadata. These filters will be used on the reporting dashboard for specifying the reporting data.
  
  Generated from Strato column: [graphql/customer-experience-apps/filters.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/filters)
  """
  filters: [AdvertiserFiltersDetails!] @development @strato_column(path : "graphql/customer-experience-apps/filters.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Get FundingSources associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/account/fundingSources.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/fundingSources)
  """
  funding_sources(filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilterInput, filter_by_funding_source_ids: [NumericString!], filter_by_funding_source_type: [HubbleFundingSourceTypeInput!], include_deleted: Boolean): FundingSourceView @development @strato_column(path : "graphql/ads/hubble/account/fundingSources.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Boolean. Returns True if any LineItem from the Advertiser Account has objective = Takeover
  
  Generated from Strato column: [graphql/customer-experience-apps/hasTakeover.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/hasTakeover)
  """
  has_takeover: Boolean @development @strato_column(path : "graphql/customer-experience-apps/hasTakeover.AdvertiserAccount") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Fetch time series metrics for an Ad Account
  
  Generated from Strato column: [graphql/ads/hubble/account/metricsTimeSeries.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/metricsTimeSeries)
  """
  metrics_time_series(from_time: AnalyticsTimestampInput!, granularity: HubbleMetricsTimeSeriesGranularityInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTimeSeriesValue!] @development @strato_column(path : "graphql/ads/hubble/account/metricsTimeSeries.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Fetch metrics for an Ad Account
  
  Generated from Strato column: [graphql/ads/hubble/account/metricsTotal.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/account/metricsTotal.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Display name of the ads account
  
  Generated from Strato column: [graphql/ads/hubble/account/name.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/name)
  """
  name: String @development @strato_column(path : "graphql/ads/hubble/account/name.AdvertiserAccount") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/customer-experience-apps/permissions.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/permissions)"
  permissions: AccountPermissionsResponse @strato_column(path : "graphql/customer-experience-apps/permissions.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Returns the account perspective, which includes account features, timezone, and service level.
  
  Generated from Strato column: [graphql/customer-experience-apps/perspective.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/perspective)
  """
  perspective: AdsAccountPerspectiveResponse @strato_column(path : "graphql/customer-experience-apps/perspective.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Returns the promotable users (user object and if primary) for a given ad account id
  
  Generated from Strato column: [graphql/customer-experience-apps/promotableUsers.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/customer-experience-apps/promotableUsers)
  """
  promotable_users: [PromotableUser!] @strato_column(path : "graphql/customer-experience-apps/promotableUsers.AdvertiserAccount") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/quick-promote/quick-promoteNeedsVat.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/quick-promote/quick-promoteNeedsVat)"
  quick_promote_needs_vat: Boolean @development @strato_column(path : "graphql/quick-promote/quick-promoteNeedsVat.AdvertiserAccount") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  The sales channel and the corresponding level of support an advertiser receives from Twitter.
  
  Generated from Strato column: [graphql/ads/hubble/account/serviceLevel.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/serviceLevel)
  """
  service_level: HubbleServiceLevel @development @strato_column(path : "graphql/ads/hubble/account/serviceLevel.AdvertiserAccount") @strato_op(value : Fetch)
  """
  Timezone for billing and analytics
  
  Generated from Strato column: [graphql/ads/hubble/account/timezone.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/timezone)
  """
  timezone: String @development @strato_column(path : "graphql/ads/hubble/account/timezone.AdvertiserAccount") @strato_op(value : Fetch)
  """
  The updated timestamp for an Account
  
  Generated from Strato column: [graphql/ads/hubble/account/updatedAt.AdvertiserAccount](https://strato.twitter.biz/web/browse/AdvertiserAccount/graphql/ads/hubble/account/updatedAt)
  """
  updated_at: String @development @strato_column(path : "graphql/ads/hubble/account/updatedAt.AdvertiserAccount") @strato_op(value : Fetch)
}

type AdvertiserAccountsSlice {
  items: [AdvertiserAccount!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.adsmanager.AdNameFilter`](http://go/sg.thrift/AdNameFilter)"
type AdvertiserAdNameFilter @thrift_type(name : "AdNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperator! @development
  query: String! @development
}

"Generated from type: [`com.twitter.adsmanager.AutogeneratedSource`](http://go/sg.thrift/AutogeneratedSource)"
type AdvertiserAutogeneratedSource @thrift_type(name : "AutogeneratedSource", package : "com.twitter.adsmanager") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.adsmanager.CampaignIdFilter`](http://go/sg.thrift/CampaignIdFilter)"
type AdvertiserCampaignIdFilter @thrift_type(name : "CampaignIdFilter", package : "com.twitter.adsmanager") {
  campaign_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.adsmanager.CampaignNameFilter`](http://go/sg.thrift/CampaignNameFilter)"
type AdvertiserCampaignNameFilter @thrift_type(name : "CampaignNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperator!
  query: String!
}

"Generated from type: [`com.twitter.adsmanager.CampaignTypesFilter`](http://go/sg.thrift/CampaignTypesFilter)"
type AdvertiserCampaignTypesFilter @thrift_type(name : "CampaignTypesFilter", package : "com.twitter.adsmanager") {
  campaign_types: [AdvertiserCampaignType!]!
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnSet`](http://go/sg.thrift/ColumnSet)"
type AdvertiserColumnSet @thrift_type(name : "ColumnSet", package : "com.twitter.ceacmetricolumn") {
  columns: [AdvertiserMetricColumn!]! @development
  metadata: AdvertiserColumnSetMetadata! @development
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnSetMetadata`](http://go/sg.thrift/ColumnSetMetadata)"
type AdvertiserColumnSetMetadata @thrift_type(name : "ColumnSetMetadata", package : "com.twitter.ceacmetricolumn") {
  id: String! @development
  is_custom: Boolean! @development
  is_default: Boolean! @development
  name: String! @development
}

"Generated from type: [`com.twitter.adsmanager.CreatorUserIdStruct`](http://go/sg.thrift/CreatorUserIdStruct)"
type AdvertiserCreatorUserId @thrift_type(name : "CreatorUserIdStruct", package : "com.twitter.adsmanager") {
  creator_user_id: NumericString!
}

"Generated from type: [`com.twitter.adsmanager.DisplayStateFilter`](http://go/sg.thrift/DisplayStateFilter)"
type AdvertiserDisplayStateFilter @thrift_type(name : "DisplayStateFilter", package : "com.twitter.adsmanager") {
  display_states: [AdvertiserCampaignDisplayState!]!
}

"Generated from type: [`com.twitter.adsmanager.FilterSetGraphqlOutput`](http://go/sg.thrift/FilterSetGraphqlOutput)"
type AdvertiserFilterSet @thrift_type(name : "FilterSetGraphqlOutput", package : "com.twitter.adsmanager") {
  creation_src: AdvertiserCreationSourceData
  filters: [AdvertiserFilterData!]!
  id: NumericString
  name: String
}

"Generated from type: [`com.twitter.ceafilters.AdvertiserFiltersDetails`](http://go/sg.thrift/AdvertiserFiltersDetails)"
type AdvertiserFiltersDetails @thrift_type(name : "AdvertiserFiltersDetails", package : "com.twitter.ceafilters") {
  metadata: AdvertiserFiltersDetailsMetaData! @development
  options: [String!]! @development
}

"Generated from type: [`com.twitter.ceafilters.AdvertiserFiltersDetailsMetadata`](http://go/sg.thrift/AdvertiserFiltersDetailsMetadata)"
type AdvertiserFiltersDetailsMetaData @thrift_type(name : "AdvertiserFiltersDetailsMetadata", package : "com.twitter.ceafilters") {
  entity_levels: [AdvertiserFilterEntityLevel!]! @development
  filter_type: AdvertiserFilterType! @development
  key: AdvertiserFilterKey! @development
}

"Generated from type: [`com.twitter.adsmanager.FundingInstrumentsFilter`](http://go/sg.thrift/FundingInstrumentsFilter)"
type AdvertiserFundingInstrumentsFilter @thrift_type(name : "FundingInstrumentsFilter", package : "com.twitter.adsmanager") {
  ids: [NumericString!]!
}

"Generated from type: [`com.twitter.adsmanager.FundingSourceNameFilter`](http://go/sg.thrift/FundingSourceNameFilter)"
type AdvertiserFundingSourceNameFilter @thrift_type(name : "FundingSourceNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperator! @development
  query: String! @development
}

"Generated from type: [`com.twitter.adsmanager.HadDeliveryFilter`](http://go/sg.thrift/HadDeliveryFilter)"
type AdvertiserHadDeliveryFilter @thrift_type(name : "HadDeliveryFilter", package : "com.twitter.adsmanager") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.adsmanager.InternalSource`](http://go/sg.thrift/InternalSource)"
type AdvertiserInternalSource @thrift_type(name : "InternalSource", package : "com.twitter.adsmanager") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.adsmanager.LineItemIdFilter`](http://go/sg.thrift/LineItemIdFilter)"
type AdvertiserLineItemIdFilter @thrift_type(name : "LineItemIdFilter", package : "com.twitter.adsmanager") {
  line_item_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.adsmanager.LineItemNameFilter`](http://go/sg.thrift/LineItemNameFilter)"
type AdvertiserLineItemNameFilter @thrift_type(name : "LineItemNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperator!
  query: String!
}

"Generated from type: [`com.twitter.ceacmetricolumn.Column`](http://go/sg.thrift/Column)"
type AdvertiserMetricColumn @thrift_type(name : "Column", package : "com.twitter.ceacmetricolumn") {
  api_key: String @development
  categories: [AdvertiserColumnCategory!]! @development
  chartable: Boolean! @development
  column_type: AdvertiserColumnType! @development
  description: String! @development
  display_type: AdvertiserColumnDisplayType! @development
  group: AdvertiserColumnGroup! @development
  internal_only: Boolean! @development
  key: String! @development
  label: String! @development
  metric_creation_source: AdvertiserColumnCreationSource! @development
}

"Generated from type: [`com.twitter.adsmanager.Objective`](http://go/sg.thrift/Objective)"
type AdvertiserObjective @thrift_type(name : "Objective", package : "com.twitter.adsmanager") {
  li_objective: LineItemObjective
}

"Generated from type: [`com.twitter.adsmanager.ObjectivesFilter`](http://go/sg.thrift/ObjectivesFilter)"
type AdvertiserObjectivesFilter @thrift_type(name : "ObjectivesFilter", package : "com.twitter.adsmanager") {
  objectives: [AdvertiserObjective!]!
}

"Generated from type: [`com.twitter.adsmanager.PlacementCategorySturct`](http://go/sg.thrift/PlacementCategorySturct)"
type AdvertiserPlacementCategoryData @thrift_type(name : "PlacementCategorySturct", package : "com.twitter.adsmanager") {
  placement_category: AdvertiserPlacementCategory!
}

"Generated from type: [`com.twitter.adsmanager.PredefinedSource`](http://go/sg.thrift/PredefinedSource)"
type AdvertiserPredefinedSource @thrift_type(name : "PredefinedSource", package : "com.twitter.adsmanager") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.adsmanager.TweetIdFilter`](http://go/sg.thrift/TweetIdFilter)"
type AdvertiserTweetIdFilter @thrift_type(name : "TweetIdFilter", package : "com.twitter.adsmanager") {
  tweet_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.ceaamplifyvideos.AmplifyVideosForAccountQuerySlice`](http://go/sg.thrift/AmplifyVideosForAccountQuerySlice)"
type AmplifyVideosSlice @thrift_type(name : "AmplifyVideosForAccountQuerySlice", package : "com.twitter.ceaamplifyvideos") {
  slice_info: SliceInfo
  videos: [AccountMediaAmplifyVideos!]!
}

"Generated from type: [`com.twitter.professionalanalytics.MetricsTotalValue`](http://go/sg.thrift/MetricsTotalValue)"
type AnayticsMetricsTotalValue @thrift_type(name : "MetricsTotalValue", package : "com.twitter.professionalanalytics") {
  metric_type: AnalyticsMetricType! @development
  metric_value: Float @development
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AnimationAsset`](http://go/sg.thrift/AnimationAsset)"
type AnimationAsset @thrift_type(name : "AnimationAsset", package : "com.twitter.audiencerewards.productcatalog") {
  url: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiAdsSubscriptionExtension`](http://go/sg.thrift/ApiAdsSubscriptionExtension)"
type ApiAdsSubscriptionExtension @thrift_type(name : "ApiAdsSubscriptionExtension", package : "com.twitter.strato.graphql") {
  r: ApiAdsSubscriptionExtensionR
  ttl: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiAdsSubscriptionExtensionOk`](http://go/sg.thrift/ApiAdsSubscriptionExtensionOk)"
type ApiAdsSubscriptionExtensionOk @thrift_type(name : "ApiAdsSubscriptionExtensionOk", package : "com.twitter.strato.graphql") {
  isWhitelisted: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiAdsSubscriptionExtensionR`](http://go/sg.thrift/ApiAdsSubscriptionExtensionR)"
type ApiAdsSubscriptionExtensionR @thrift_type(name : "ApiAdsSubscriptionExtensionR", package : "com.twitter.strato.graphql") {
  err: ApiExtensionErr
  missing: String
  ok: ApiAdsSubscriptionExtensionOk
}

"Generated from type: [`com.twitter.strato.graphql.ApiAppInstallCallToAction`](http://go/sg.thrift/ApiAppInstallCallToAction)"
type ApiAppInstallCallToAction @thrift_type(name : "ApiAppInstallCallToAction", package : "com.twitter.strato.graphql") {
  app_store_id: String
  ipad_app_store_id: String
  play_store_id: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiCallToActions`](http://go/sg.thrift/ApiCallToActions)"
type ApiCallToActions @thrift_type(name : "ApiCallToActions", package : "com.twitter.strato.graphql") {
  app_install: ApiAppInstallCallToAction
  visit_site: ApiVisitSiteCallToAction
  watch_now: ApiWatchNowCallToAction
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardBindingImageValue`](http://go/sg.thrift/ApiCardBindingImageValue)"
type ApiCardBindingImageValue @thrift_type(name : "ApiCardBindingImageValue", package : "com.twitter.strato.graphql") {
  alt: String
  height: Int53
  url: String
  width: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardBindingUserValue`](http://go/sg.thrift/ApiCardBindingUserValue)"
type ApiCardBindingUserValue @thrift_type(name : "ApiCardBindingUserValue", package : "com.twitter.strato.graphql") {
  id_str: String
  path: [String!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardBindingValue`](http://go/sg.thrift/ApiCardBindingValue)"
type ApiCardBindingValue @thrift_type(name : "ApiCardBindingValue", package : "com.twitter.strato.graphql") {
  boolean_value: Boolean
  double_value: Float
  image_color_value: ApiMediaEntityColorPalette
  image_value: ApiCardBindingImageValue
  integer_value: Int53
  scribe_key: String
  string_value: String
  type: String
  user_value: ApiCardBindingUserValue
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardPlatform`](http://go/sg.thrift/ApiCardPlatform)"
type ApiCardPlatform @thrift_type(name : "ApiCardPlatform", package : "com.twitter.strato.graphql") {
  platform: ApiCardPlatformPlatform
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardPlatformAudience`](http://go/sg.thrift/ApiCardPlatformAudience)"
type ApiCardPlatformAudience @thrift_type(name : "ApiCardPlatformAudience", package : "com.twitter.strato.graphql") {
  bucket: String
  name: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardPlatformDevice`](http://go/sg.thrift/ApiCardPlatformDevice)"
type ApiCardPlatformDevice @thrift_type(name : "ApiCardPlatformDevice", package : "com.twitter.strato.graphql") {
  name: String
  version: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardPlatformPlatform`](http://go/sg.thrift/ApiCardPlatformPlatform)"
type ApiCardPlatformPlatform @thrift_type(name : "ApiCardPlatformPlatform", package : "com.twitter.strato.graphql") {
  audience: ApiCardPlatformAudience
  device: ApiCardPlatformDevice
}

"""
Information about the conversation control applied to the Tweet

Generated from type: [`com.twitter.strato.graphql.ApiConversationControl`](http://go/sg.thrift/ApiConversationControl)
"""
type ApiConversationControl @thrift_type(name : "ApiConversationControl", package : "com.twitter.strato.graphql") {
  conversation_owner: User! @deprecated(reason : "migrated to conversation_owner_results")
  conversation_owner_result: UserResult @deprecated(reason : "migrated to conversation_owner_results; field will always be null")
  conversation_owner_results: UserResults!
  invite_via_mention: Boolean
  policy: ApiConversationPolicy!
}

"Generated from type: [`com.twitter.strato.graphql.ApiCurrentUserRetweet`](http://go/sg.thrift/ApiCurrentUserRetweet)"
type ApiCurrentUserRetweet @thrift_type(name : "ApiCurrentUserRetweet", package : "com.twitter.strato.graphql") {
  id_str: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiExtensionErr`](http://go/sg.thrift/ApiExtensionErr)"
type ApiExtensionErr @thrift_type(name : "ApiExtensionErr", package : "com.twitter.strato.graphql") {
  code: Int53
  message: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoAttributes`](http://go/sg.thrift/ApiGeoAttributes)"
type ApiGeoAttributes @thrift_type(name : "ApiGeoAttributes", package : "com.twitter.strato.graphql") {
  factual_id: String
  iso3: String
  locality: String
  region: String
  street_address: String
  twitter: String
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoFeature`](http://go/sg.thrift/ApiGeoFeature)"
type ApiGeoFeature @thrift_type(name : "ApiGeoFeature", package : "com.twitter.strato.graphql") {
  coordinates: [Float!]
  type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoPolygon`](http://go/sg.thrift/ApiGeoPolygon)"
type ApiGeoPolygon @thrift_type(name : "ApiGeoPolygon", package : "com.twitter.strato.graphql") {
  coordinates: [[[Float!]!]!]
  type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoVendorInfo`](http://go/sg.thrift/ApiGeoVendorInfo)"
type ApiGeoVendorInfo @thrift_type(name : "ApiGeoVendorInfo", package : "com.twitter.strato.graphql") {
  foursquare: ApiGeoVendorInfoFoursquare
  yelp: ApiGeoVendorInfoYelp
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoVendorInfoFoursquare`](http://go/sg.thrift/ApiGeoVendorInfoFoursquare)"
type ApiGeoVendorInfoFoursquare @thrift_type(name : "ApiGeoVendorInfoFoursquare", package : "com.twitter.strato.graphql") {
  venue_id: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoVendorInfoYelp`](http://go/sg.thrift/ApiGeoVendorInfoYelp)"
type ApiGeoVendorInfoYelp @thrift_type(name : "ApiGeoVendorInfoYelp", package : "com.twitter.strato.graphql") {
  business_id: String
  mobile_url: String
  rating: Float
  review_count: Int
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiGeoWithheldStatus`](http://go/sg.thrift/ApiGeoWithheldStatus)"
type ApiGeoWithheldStatus @thrift_type(name : "ApiGeoWithheldStatus", package : "com.twitter.strato.graphql") {
  status: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiGif`](http://go/sg.thrift/ApiGif)"
type ApiGif @thrift_type(name : "ApiGif", package : "com.twitter.strato.graphql") {
  alt_text: String
  aspect_ratio: AspectRatio!
  preview_image: ApiImage
  variants: [VideoVariant!]!
}

"Generated from type: [`com.twitter.strato.graphql.ApiImage`](http://go/sg.thrift/ApiImage)"
type ApiImage @thrift_type(name : "ApiImage", package : "com.twitter.strato.graphql") {
  alt_text: String
  color_info: MediaColorInfo
  original_img_height: Int53!
  original_img_url: String!
  original_img_width: Int53!
  salient_rect: ApiMediaRect
}

"Generated from Strato space: `ApiMedia`"
type ApiMedia @strato_space(name : "ApiMedia") {
  "Generated from Strato column: [graphql/cta.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/cta)"
  cta: MediaCallToActions @strato_column(path : "graphql/cta.ApiMedia") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "Generated from Strato column: [graphql/is360.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/is360)"
  is360: Boolean @strato_column(path : "graphql/is360.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/mediaAvailability.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/mediaAvailability)"
  media_availability: MediaAvailability @strato_column(path : "graphql/mediaAvailability.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/mediaAvailabilityV2.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/mediaAvailabilityV2)"
  media_availability_v2: ApiMediaAvailability @strato_column(path : "graphql/mediaAvailabilityV2.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/mediaId.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/mediaId)"
  media_id: NumericString @strato_column(path : "graphql/mediaId.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/mediaInfo.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/mediaInfo)"
  media_info: ApiMediaInfo @strato_column(path : "graphql/mediaInfo.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/mediaKey.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/mediaKey)"
  media_key: String @strato_column(path : "graphql/mediaKey.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/mediaOrigin.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/mediaOrigin)"
  media_origin: MediaOrigin @strato_column(path : "graphql/mediaOrigin.ApiMedia") @strato_op(value : Fetch)
  """
  Returns video view count associated with an ApiMedia.
  
  Generated from Strato column: [graphql/dataproducts/public_video_view_count.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/dataproducts/public_video_view_count)
  """
  public_video_view_count: Int53 @strato_column(path : "graphql/dataproducts/public_video_view_count.ApiMedia") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/sensitiveMediaWarning.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/sensitiveMediaWarning)"
  sensitive_media_warning: SensitiveMediaWarning @strato_column(path : "graphql/sensitiveMediaWarning.ApiMedia") @strato_op(value : Fetch)
  """
  Returns video name associated with ApiMedia.
  
  Generated from Strato column: [graphql/customer-experience-apps/videoMediaName.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/customer-experience-apps/videoMediaName)
  """
  video_media_name: String @strato_column(path : "graphql/customer-experience-apps/videoMediaName.ApiMedia") @strato_op(value : Fetch)
  """
  Returns video quartile view count associated with an ApiMedia.  The Media must be authored by the user in the call context.
  
  Generated from Strato column: [graphql/dataproducts/video_quartile_view_count.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/dataproducts/video_quartile_view_count)
  """
  video_quartile_view_count: VideoQuartileViewResult @strato_column(path : "graphql/dataproducts/video_quartile_view_count.ApiMedia") @strato_op(value : Fetch)
  """
  Returns video view count associated with an ApiMedia.  The Media must be authored by the user in the call context.
  
  Generated from Strato column: [graphql/dataproducts/video_view_count.ApiMedia](https://strato.twitter.biz/web/browse/ApiMedia/graphql/dataproducts/video_view_count)
  """
  video_view_count: VideoViewResult @strato_column(path : "graphql/dataproducts/video_view_count.ApiMedia") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.strato.graphql.MediaAvailability`](http://go/sg.thrift/MediaAvailability)"
type ApiMediaAvailability @thrift_type(name : "MediaAvailability", package : "com.twitter.strato.graphql") {
  reason: ApiMediaUnavailabilityReason
  status: ApiMediaAvailabilityStatus!
  unavailability_info: ApiMediaUnavailabilityInfo
}

type ApiMediaCandidateCropEntry {
  key: String!
  value: [ApiMediaCrop!]!
}

"Generated from type: [`com.twitter.strato.graphql.CandidateCropsResponse`](http://go/sg.thrift/CandidateCropsResponse)"
type ApiMediaCandidateCropsResponse @thrift_type(name : "CandidateCropsResponse", package : "com.twitter.strato.graphql") {
  candidate_crops: [ApiMediaCandidateCropEntry!]
  salient_point: [ApiMediaSalientPointEntry!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaColorExtension`](http://go/sg.thrift/ApiMediaColorExtension)"
type ApiMediaColorExtension @thrift_type(name : "ApiMediaColorExtension", package : "com.twitter.strato.graphql") {
  r: ApiMediaColorExtensionR
  ttl: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaColorExtensionR`](http://go/sg.thrift/ApiMediaColorExtensionR)"
type ApiMediaColorExtensionR @thrift_type(name : "ApiMediaColorExtensionR", package : "com.twitter.strato.graphql") {
  err: ApiExtensionErr
  missing: String
  ok: ApiMediaEntityColorPalette
}

"Generated from type: [`com.twitter.strato.graphql.ContentIdInfo`](http://go/sg.thrift/ContentIdInfo)"
type ApiMediaContentIdInfo @thrift_type(name : "ContentIdInfo", package : "com.twitter.strato.graphql") {
  broadcaster_whitelisted: Boolean
  copyright_content_name: String
  copyright_holder_name: String
  interstitial: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.Crop`](http://go/sg.thrift/Crop)"
type ApiMediaCrop @thrift_type(name : "Crop", package : "com.twitter.strato.graphql") {
  crop: ApiMediaRect
}

"Generated from type: [`com.twitter.strato.graphql.DomainRestrictions`](http://go/sg.thrift/DomainRestrictions)"
type ApiMediaDomainRestrictions @thrift_type(name : "DomainRestrictions", package : "com.twitter.strato.graphql") {
  whitelist: [String!]
}

"Generated from type: [`com.twitter.strato.graphql.EngagementInfo`](http://go/sg.thrift/EngagementInfo)"
type ApiMediaEngagementInfo @thrift_type(name : "EngagementInfo", package : "com.twitter.strato.graphql") {
  view_count: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntity`](http://go/sg.thrift/ApiMediaEntity)"
type ApiMediaEntity @thrift_type(name : "ApiMediaEntity", package : "com.twitter.strato.graphql") {
  additional_media_info: ApiMediaMetadata
  display_url: String
  expanded_url: String
  ext_alt_text: String
  ext_focus_rects: ApiMediaCandidateCropsResponse
  ext_info360: ApiMediaInfo360
  ext_master_playlist_only: [ApiMediaPlaylistEntry!]
  ext_media_availability: ApiMediaAvailability
  ext_media_color: ApiMediaEntityColorPalette
  ext_media_restrictions: ApiMediaRestrictions
  ext_media_stats: ApiMediaEngagementInfo
  ext_playlists: [ApiMediaPlaylistEntry!]
  ext_sticker_info: ApiMediaStickerInfo
  features: ApiMediaEntityFeatures
  id_str: String
  indices: [Int53!]
  media_key: String
  media_url_https: String
  original_info: ApiMediaEntityOriginalInfo
  possibly_sensitive: Boolean
  sensitive_media_warning: SensitiveMediaWarning @development
  sizes: ApiMediaEntitySizes
  source_status_id_str: String
  source_user_id_str: String
  type: String
  url: String
  video_info: ApiMediaEntityVideoInfo
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityColor`](http://go/sg.thrift/ApiMediaEntityColor)"
type ApiMediaEntityColor @thrift_type(name : "ApiMediaEntityColor", package : "com.twitter.strato.graphql") {
  blue: Short!
  green: Short!
  red: Short!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityColorPalette`](http://go/sg.thrift/ApiMediaEntityColorPalette)"
type ApiMediaEntityColorPalette @thrift_type(name : "ApiMediaEntityColorPalette", package : "com.twitter.strato.graphql") {
  palette: [ApiMediaEntityColorPaletteColor!]!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityColorPaletteColor`](http://go/sg.thrift/ApiMediaEntityColorPaletteColor)"
type ApiMediaEntityColorPaletteColor @thrift_type(name : "ApiMediaEntityColorPaletteColor", package : "com.twitter.strato.graphql") {
  "Percentage proportion of the palette"
  percentage: Float!
  rgb: ApiMediaEntityColor!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityFace`](http://go/sg.thrift/ApiMediaEntityFace)"
type ApiMediaEntityFace @thrift_type(name : "ApiMediaEntityFace", package : "com.twitter.strato.graphql") {
  h: Int53
  w: Int53
  x: Int53
  y: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityFaces`](http://go/sg.thrift/ApiMediaEntityFaces)"
type ApiMediaEntityFaces @thrift_type(name : "ApiMediaEntityFaces", package : "com.twitter.strato.graphql") {
  faces: [ApiMediaEntityFace!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityFeatures`](http://go/sg.thrift/ApiMediaEntityFeatures)"
type ApiMediaEntityFeatures @thrift_type(name : "ApiMediaEntityFeatures", package : "com.twitter.strato.graphql") {
  "MEDIA_TAGS client privilege required. Not viewable by contributors."
  all: ApiMediaEntityTags
  large: ApiMediaEntityFaces
  medium: ApiMediaEntityFaces
  orig: ApiMediaEntityFaces
  small: ApiMediaEntityFaces
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityFocusRect`](http://go/sg.thrift/ApiMediaEntityFocusRect)"
type ApiMediaEntityFocusRect @thrift_type(name : "ApiMediaEntityFocusRect", package : "com.twitter.strato.graphql") {
  h: Int!
  w: Int!
  x: Int!
  y: Int!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityOriginalInfo`](http://go/sg.thrift/ApiMediaEntityOriginalInfo)"
type ApiMediaEntityOriginalInfo @thrift_type(name : "ApiMediaEntityOriginalInfo", package : "com.twitter.strato.graphql") {
  focus_rects: [ApiMediaEntityFocusRect!]
  height: Int!
  width: Int!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntitySize`](http://go/sg.thrift/ApiMediaEntitySize)"
type ApiMediaEntitySize @thrift_type(name : "ApiMediaEntitySize", package : "com.twitter.strato.graphql") {
  h: Int53
  resize: String
  w: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntitySizes`](http://go/sg.thrift/ApiMediaEntitySizes)"
type ApiMediaEntitySizes @thrift_type(name : "ApiMediaEntitySizes", package : "com.twitter.strato.graphql") {
  large: ApiMediaEntitySize
  medium: ApiMediaEntitySize
  small: ApiMediaEntitySize
  thumb: ApiMediaEntitySize
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityTag`](http://go/sg.thrift/ApiMediaEntityTag)"
type ApiMediaEntityTag @thrift_type(name : "ApiMediaEntityTag", package : "com.twitter.strato.graphql") {
  name: String
  screen_name: String
  type: String
  user_id: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityTags`](http://go/sg.thrift/ApiMediaEntityTags)"
type ApiMediaEntityTags @thrift_type(name : "ApiMediaEntityTags", package : "com.twitter.strato.graphql") {
  tags: [ApiMediaEntityTag!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityVideoInfo`](http://go/sg.thrift/ApiMediaEntityVideoInfo)"
type ApiMediaEntityVideoInfo @thrift_type(name : "ApiMediaEntityVideoInfo", package : "com.twitter.strato.graphql") {
  aspect_ratio: [Int53!]
  duration_millis: Int53
  variants: [ApiMediaEntityVideoVariant!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaEntityVideoVariant`](http://go/sg.thrift/ApiMediaEntityVideoVariant)"
type ApiMediaEntityVideoVariant @thrift_type(name : "ApiMediaEntityVideoVariant", package : "com.twitter.strato.graphql") {
  bitrate: Int53
  content_type: String
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaExtensions`](http://go/sg.thrift/ApiMediaExtensions)"
type ApiMediaExtensions @thrift_type(name : "ApiMediaExtensions", package : "com.twitter.strato.graphql") {
  mediaColor: ApiMediaColorExtension
}

"Generated from type: [`com.twitter.strato.graphql.GeoRestrictions`](http://go/sg.thrift/GeoRestrictions)"
type ApiMediaGeoRestrictions @thrift_type(name : "GeoRestrictions", package : "com.twitter.strato.graphql") {
  blacklisted_country_codes: [String!]!
  whitelisted_country_codes: [String!]!
}

"Generated from type: [`com.twitter.strato.graphql.Info360`](http://go/sg.thrift/Info360)"
type ApiMediaInfo360 @thrift_type(name : "Info360", package : "com.twitter.strato.graphql") {
  is360: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaMetadata`](http://go/sg.thrift/ApiMediaMetadata)"
type ApiMediaMetadata @thrift_type(name : "ApiMediaMetadata", package : "com.twitter.strato.graphql") {
  call_to_actions: ApiCallToActions
  description: String
  embeddable: Boolean
  monetizable: Boolean
  source_user: ApiMediaSourceUser
  title: String
}

type ApiMediaPlaylistEntry {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.strato.graphql.Point`](http://go/sg.thrift/Point)"
type ApiMediaPoint @thrift_type(name : "Point", package : "com.twitter.strato.graphql") {
  x: Int!
  y: Int!
}

"Generated from type: [`com.twitter.strato.graphql.Rect`](http://go/sg.thrift/Rect)"
type ApiMediaRect @thrift_type(name : "Rect", package : "com.twitter.strato.graphql") {
  height: Int!
  left: Int!
  top: Int!
  width: Int!
}

"Generated from type: [`com.twitter.strato.graphql.Restrictions`](http://go/sg.thrift/Restrictions)"
type ApiMediaRestrictions @thrift_type(name : "Restrictions", package : "com.twitter.strato.graphql") {
  content_id_info: ApiMediaContentIdInfo
  domain_restrictions: ApiMediaDomainRestrictions
  geo_restrictions: ApiMediaGeoRestrictions
  is_dmca: Boolean!
}

type ApiMediaSalientPointEntry {
  key: String!
  value: ApiMediaPoint!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMediaSourceUser`](http://go/sg.thrift/ApiMediaSourceUser)"
type ApiMediaSourceUser @thrift_type(name : "ApiMediaSourceUser", package : "com.twitter.strato.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.strato.graphql.Sticker`](http://go/sg.thrift/Sticker)"
type ApiMediaSticker @thrift_type(name : "Sticker", package : "com.twitter.strato.graphql") {
  annotation_id: NumericString
  aspect_ratio: Float!
  group_annotation_id: NumericString
  id: NumericString!
  sticker_set_annotation_id: NumericString
  transform_a: Float!
  transform_b: Float!
  transform_c: Float!
  transform_d: Float!
  transform_tx: Float!
  transform_ty: Float!
}

"Generated from type: [`com.twitter.strato.graphql.StickerInfo`](http://go/sg.thrift/StickerInfo)"
type ApiMediaStickerInfo @thrift_type(name : "StickerInfo", package : "com.twitter.strato.graphql") {
  stickers: [ApiMediaSticker!]!
}

"Generated from type: [`com.twitter.strato.graphql.CopyrightViolation`](http://go/sg.thrift/CopyrightViolation)"
type ApiMediaUnavailabilityInfoCopyrightViolation @thrift_type(name : "CopyrightViolation", package : "com.twitter.strato.graphql") {
  copyright_holder_name: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMentionEntity`](http://go/sg.thrift/ApiMentionEntity)"
type ApiMentionEntity @thrift_type(name : "ApiMentionEntity", package : "com.twitter.strato.graphql") {
  id_str: String
  indices: [Int53!]
  is_unmentioned: Boolean @development
  name: String
  screen_name: String
  user: User @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults @development
}

"Generated from type: [`com.twitter.strato.graphql.ApiModel3d`](http://go/sg.thrift/ApiModel3d)"
type ApiModel3d @thrift_type(name : "ApiModel3d", package : "com.twitter.strato.graphql") {
  assets: [Model3dAsset!]!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMoment`](http://go/sg.thrift/ApiMoment)"
type ApiMoment @thrift_type(name : "ApiMoment", package : "com.twitter.strato.graphql") {
  author: ApiMomentAuthor
  camera_moment_thumbnail: ApiMomentCoverMedia
  can_subscribe: Boolean
  capsule_contents_version: String
  cover_media: ApiMomentCoverMedia
  cta: ApiMomentCta
  curation_metadata: ApiMomentCurationMetadata
  description: String
  duration_string: String
  event: ApiMomentEvent
  id: String
  is_liked: Boolean
  is_live: Boolean
  is_subscribed: Boolean
  last_publish_time: String
  moment_access: ApiMomentMomentAccess
  num_subscribers: Int53
  premade_moment_data: ApiMomentPremadeMomentData
  promoted_content: ApiMomentPromotedContent
  sensitive: Boolean
  sports_event_data: ApiMomentSportsEventData
  subcategory_favicon_url: String
  subcategory_string: String
  time_string: String
  title: String
  total_likes: Int53
  url: String
  users: [User!] @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!]
  visibility_mode: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentAuthor`](http://go/sg.thrift/ApiMomentAuthor)"
type ApiMomentAuthor @thrift_type(name : "ApiMomentAuthor", package : "com.twitter.strato.graphql") {
  favicon_url: String
  id: String
  name: String
  screen_name: String
  verified: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentBadge`](http://go/sg.thrift/ApiMomentBadge)"
type ApiMomentBadge @thrift_type(name : "ApiMomentBadge", package : "com.twitter.strato.graphql") {
  bg_color: Int53
  text: String
  text_color: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCoverMedia`](http://go/sg.thrift/ApiMomentCoverMedia)"
type ApiMomentCoverMedia @thrift_type(name : "ApiMomentCoverMedia", package : "com.twitter.strato.graphql") {
  media: ApiMomentMedia
  render: ApiMomentRender
  tweet_id: String
  type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCrop`](http://go/sg.thrift/ApiMomentCrop)"
type ApiMomentCrop @thrift_type(name : "ApiMomentCrop", package : "com.twitter.strato.graphql") {
  h: Int53
  w: Int53
  x: Int53
  y: Int53
}

type ApiMomentCropEntry {
  key: String!
  value: ApiMomentCrop!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCta`](http://go/sg.thrift/ApiMomentCta)"
type ApiMomentCta @thrift_type(name : "ApiMomentCta", package : "com.twitter.strato.graphql") {
  badge: ApiMomentBadge
  text: String
  uri: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationCoverMedia`](http://go/sg.thrift/ApiMomentCurationCoverMedia)"
type ApiMomentCurationCoverMedia @thrift_type(name : "ApiMomentCurationCoverMedia", package : "com.twitter.strato.graphql") {
  media_id: String
  tweet: Tweet @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationEvent`](http://go/sg.thrift/ApiMomentCurationEvent)"
type ApiMomentCurationEvent @thrift_type(name : "ApiMomentCurationEvent", package : "com.twitter.strato.graphql") {
  domain_id: String
  event_id: String
  event_type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationFollowableInjectionMetadata`](http://go/sg.thrift/ApiMomentCurationFollowableInjectionMetadata)"
type ApiMomentCurationFollowableInjectionMetadata @thrift_type(name : "ApiMomentCurationFollowableInjectionMetadata", package : "com.twitter.strato.graphql") {
  end_time: String
  start_time: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationFollowableMetadata`](http://go/sg.thrift/ApiMomentCurationFollowableMetadata)"
type ApiMomentCurationFollowableMetadata @thrift_type(name : "ApiMomentCurationFollowableMetadata", package : "com.twitter.strato.graphql") {
  injection: ApiMomentCurationFollowableInjectionMetadata
  moment_id: String
  source: ApiMomentCurationFollowableSource
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationFollowableSource`](http://go/sg.thrift/ApiMomentCurationFollowableSource)"
type ApiMomentCurationFollowableSource @thrift_type(name : "ApiMomentCurationFollowableSource", package : "com.twitter.strato.graphql") {
  channel_timeline_id: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationLiveVideoInfo`](http://go/sg.thrift/ApiMomentCurationLiveVideoInfo)"
type ApiMomentCurationLiveVideoInfo @thrift_type(name : "ApiMomentCurationLiveVideoInfo", package : "com.twitter.strato.graphql") {
  live_video_url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationMetadata`](http://go/sg.thrift/ApiMomentCurationMetadata)"
type ApiMomentCurationMetadata @thrift_type(name : "ApiMomentCurationMetadata", package : "com.twitter.strato.graphql") {
  author: User @deprecated(reason : "migrated to author_results")
  author_result: UserResult @deprecated(reason : "migrated to author_results; field will always be null")
  author_results: UserResults
  category_override: String
  cover: ApiMomentCurationCoverMedia
  curator: User @deprecated(reason : "migrated to curator_results")
  curator_result: UserResult @deprecated(reason : "migrated to curator_results; field will always be null")
  curator_results: UserResults
  description: String
  event: ApiMomentCurationEvent
  followable_metadata: ApiMomentCurationFollowableMetadata
  has_owner_granted_location_permission: Boolean
  id: String
  is_cover_set: Boolean
  is_creator_vit: Boolean!
  is_deleted: Boolean
  is_production_only: Boolean
  language: String
  last_modified_time: String
  last_published_time: String
  live_video_info: ApiMomentCurationLiveVideoInfo
  nsfw: Boolean
  nsfw_admin: Boolean
  official_tweet: Tweet @deprecated(reason : "migrated to official_tweet_results")
  official_tweet_result: TweetResult @deprecated(reason : "migrated to official_tweet_results; field will always be null")
  official_tweet_results: TweetResults
  owner: User @deprecated(reason : "migrated to owner_results")
  owner_result: UserResult @deprecated(reason : "migrated to owner_results; field will always be null")
  owner_results: UserResults
  scratch_buffer_timeline_id: String
  subcategory_id: String
  takedowns: [String!]
  targeting_metadata: ApiMomentCurationTargetingMetadata
  theme: ApiMomentCurationTheme
  title: String
  visibility_mode: String
  withheld_countries: [String!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingCritera`](http://go/sg.thrift/ApiMomentCurationTargetingCritera)"
type ApiMomentCurationTargetingCritera @thrift_type(name : "ApiMomentCurationTargetingCritera", package : "com.twitter.strato.graphql") {
  place_targeting: [String!]
  primary_place_targeting: [String!]
  push_timely_targeting: [String!]
  secondary_place_targeting: [String!]
  targeting_overrides: [ApiMomentCurationTargetingOveridesEntry!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingEventBreakoutMetadata`](http://go/sg.thrift/ApiMomentCurationTargetingEventBreakoutMetadata)"
type ApiMomentCurationTargetingEventBreakoutMetadata @thrift_type(name : "ApiMomentCurationTargetingEventBreakoutMetadata", package : "com.twitter.strato.graphql") {
  breakout_entity_domain_id: String
  breakout_for_entity_id: String
  relationship: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingEventMetadata`](http://go/sg.thrift/ApiMomentCurationTargetingEventMetadata)"
type ApiMomentCurationTargetingEventMetadata @thrift_type(name : "ApiMomentCurationTargetingEventMetadata", package : "com.twitter.strato.graphql") {
  breakout_metadata: ApiMomentCurationTargetingEventBreakoutMetadata
  domain_id: String
  entity_id: String
  event_origin: String
  is_happening_now_targeted: Boolean
  is_live: Boolean
  priority: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingMetadata`](http://go/sg.thrift/ApiMomentCurationTargetingMetadata)"
type ApiMomentCurationTargetingMetadata @thrift_type(name : "ApiMomentCurationTargetingMetadata", package : "com.twitter.strato.graphql") {
  event_metadata: ApiMomentCurationTargetingEventMetadata
  header_category_ids: [NumericString!]
  is_from_trusted_author: Boolean
  is_ugm_tracked: Boolean
  push_metadata: ApiMomentCurationTargetingPushMetadata
  score: Int53
  targeting_criteria: ApiMomentCurationTargetingCritera
  targeting_last_modified_time: String
  targeting_window: ApiMomentCurationTargetingWindow
  ttt_category_ids: [NumericString!]
}

type ApiMomentCurationTargetingOveridesEntry {
  key: String!
  value: ApiMomentCurationTargetingOverrides!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingOverrides`](http://go/sg.thrift/ApiMomentCurationTargetingOverrides)"
type ApiMomentCurationTargetingOverrides @thrift_type(name : "ApiMomentCurationTargetingOverrides", package : "com.twitter.strato.graphql") {
  priority: Int53
  score: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingPushMetadata`](http://go/sg.thrift/ApiMomentCurationTargetingPushMetadata)"
type ApiMomentCurationTargetingPushMetadata @thrift_type(name : "ApiMomentCurationTargetingPushMetadata", package : "com.twitter.strato.graphql") {
  has_been_pushed: Boolean
  place_push_metadata: [ApiMomentCurationTargetingPushStateEntry!]
  push_timely: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingPushState`](http://go/sg.thrift/ApiMomentCurationTargetingPushState)"
type ApiMomentCurationTargetingPushState @thrift_type(name : "ApiMomentCurationTargetingPushState", package : "com.twitter.strato.graphql") {
  has_been_pushed: Boolean!
}

type ApiMomentCurationTargetingPushStateEntry {
  key: String!
  value: ApiMomentCurationTargetingPushState!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTargetingWindow`](http://go/sg.thrift/ApiMomentCurationTargetingWindow)"
type ApiMomentCurationTargetingWindow @thrift_type(name : "ApiMomentCurationTargetingWindow", package : "com.twitter.strato.graphql") {
  from: String
  to: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentCurationTheme`](http://go/sg.thrift/ApiMomentCurationTheme)"
type ApiMomentCurationTheme @thrift_type(name : "ApiMomentCurationTheme", package : "com.twitter.strato.graphql") {
  bg_color: Int53
  fg_color: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentEvent`](http://go/sg.thrift/ApiMomentEvent)"
type ApiMomentEvent @thrift_type(name : "ApiMomentEvent", package : "com.twitter.strato.graphql") {
  id: String
  type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentMedia`](http://go/sg.thrift/ApiMomentMedia)"
type ApiMomentMedia @thrift_type(name : "ApiMomentMedia", package : "com.twitter.strato.graphql") {
  media_id: String
  size: ApiMomentMediaSize
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentMediaSize`](http://go/sg.thrift/ApiMomentMediaSize)"
type ApiMomentMediaSize @thrift_type(name : "ApiMomentMediaSize", package : "com.twitter.strato.graphql") {
  h: Int53
  w: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentMomentAccess`](http://go/sg.thrift/ApiMomentMomentAccess)"
type ApiMomentMomentAccess @thrift_type(name : "ApiMomentMomentAccess", package : "com.twitter.strato.graphql") {
  access_type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentPremadeMomentData`](http://go/sg.thrift/ApiMomentPremadeMomentData)"
type ApiMomentPremadeMomentData @thrift_type(name : "ApiMomentPremadeMomentData", package : "com.twitter.strato.graphql") {
  expiration_string: String
  moment_viewed_by_user: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentPromotedContent`](http://go/sg.thrift/ApiMomentPromotedContent)"
type ApiMomentPromotedContent @thrift_type(name : "ApiMomentPromotedContent", package : "com.twitter.strato.graphql") {
  advertiser: User @deprecated(reason : "migrated to advertiser_results")
  advertiser_name: String
  advertiser_result: UserResult @deprecated(reason : "migrated to advertiser_results; field will always be null")
  advertiser_results: UserResults
  disclosure_type: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentRender`](http://go/sg.thrift/ApiMomentRender)"
type ApiMomentRender @thrift_type(name : "ApiMomentRender", package : "com.twitter.strato.graphql") {
  crops: [ApiMomentCropEntry!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentSportsEventData`](http://go/sg.thrift/ApiMomentSportsEventData)"
type ApiMomentSportsEventData @thrift_type(name : "ApiMomentSportsEventData", package : "com.twitter.strato.graphql") {
  "Composite string of the form `domainId:eventId` represents a SemanticCoreEntity."
  id: String!
  participant_scores: [ApiMomentSportsParticipantScore!]
  progress_strings: [String!]
  status: ApiMomentSportsEventStatus!
  ts_ms: String
  ttl_ms: String
  winner_id: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentSportsEventParticipant`](http://go/sg.thrift/ApiMomentSportsEventParticipant)"
type ApiMomentSportsEventParticipant @thrift_type(name : "ApiMomentSportsEventParticipant", package : "com.twitter.strato.graphql") {
  id: String!
  media: ApiMomentSportsParticipantMedia!
  name: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentSportsParticipantMedia`](http://go/sg.thrift/ApiMomentSportsParticipantMedia)"
type ApiMomentSportsParticipantMedia @thrift_type(name : "ApiMomentSportsParticipantMedia", package : "com.twitter.strato.graphql") {
  url: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentSportsParticipantScore`](http://go/sg.thrift/ApiMomentSportsParticipantScore)"
type ApiMomentSportsParticipantScore @thrift_type(name : "ApiMomentSportsParticipantScore", package : "com.twitter.strato.graphql") {
  participant: ApiMomentSportsEventParticipant!
  score: String
}

type ApiPlace {
  attributes: ApiGeoAttributes
  bounding_box_polygon: ApiGeoPolygon
  centroid: [Float!]
  contained_within: [ApiPlace!]
  country: String
  country_code: String
  full_name: String
  id: String
  name: String
  place_type: String
  polylines: [String!]
  url: String
  username: String
  vendor_info: ApiGeoVendorInfo
  withheld: ApiGeoWithheldStatus
}

"Generated from type: [`com.twitter.strato.graphql.ApiScopes`](http://go/sg.thrift/ApiScopes)"
type ApiScopes @thrift_type(name : "ApiScopes", package : "com.twitter.strato.graphql") {
  followers: Boolean
  place_ids: [String!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiSelfThreadMetadata`](http://go/sg.thrift/ApiSelfThreadMetadata)"
type ApiSelfThreadMetadata @thrift_type(name : "ApiSelfThreadMetadata", package : "com.twitter.strato.graphql") {
  id_str: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiShortenedUrl`](http://go/sg.thrift/ApiShortenedUrl)"
type ApiShortenedUrl @thrift_type(name : "ApiShortenedUrl", package : "com.twitter.strato.graphql") {
  display: String
  expanded: String
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiTagEntity`](http://go/sg.thrift/ApiTagEntity)"
type ApiTagEntity @thrift_type(name : "ApiTagEntity", package : "com.twitter.strato.graphql") {
  indices: [Int53!]
  text: String
}

"Generated from type: [`com.twitter.trusted_friends.ApiTrustedFriendsInfo`](http://go/sg.thrift/ApiTrustedFriendsInfo)"
type ApiTrustedFriendsInfo @thrift_type(name : "ApiTrustedFriendsInfo", package : "com.twitter.trusted_friends") {
  owner: User! @deprecated(reason : "migrated to owner_results")
  owner_result: UserResult @deprecated(reason : "migrated to owner_results; field will always be null")
  owner_results: UserResults!
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetAnnotation`](http://go/sg.thrift/ApiTweetAnnotation)"
type ApiTweetAnnotation @thrift_type(name : "ApiTweetAnnotation", package : "com.twitter.strato.graphql") {
  domain_id: NumericString
  entity_id: NumericString
  group_id: NumericString
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetCollection`](http://go/sg.thrift/ApiTweetCollection)"
type ApiTweetCollection @thrift_type(name : "ApiTweetCollection", package : "com.twitter.strato.graphql") {
  id_str: String
  items: [ApiTweetCollectionItem!]
  url: String
  version: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetCollectionTweetItem`](http://go/sg.thrift/ApiTweetCollectionTweetItem)"
type ApiTweetCollectionTweetItem @thrift_type(name : "ApiTweetCollectionTweetItem", package : "com.twitter.strato.graphql") {
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetContributor`](http://go/sg.thrift/ApiTweetContributor)"
type ApiTweetContributor @thrift_type(name : "ApiTweetContributor", package : "com.twitter.strato.graphql") {
  id_str: String
  screen_name: String
}

"""
Information about which device was used when creating a Tweet

Generated from type: [`com.twitter.strato.graphql.ApiTweetDeviceSource`](http://go/sg.thrift/ApiTweetDeviceSource)
"""
type ApiTweetDeviceSource @thrift_type(name : "ApiTweetDeviceSource", package : "com.twitter.strato.graphql") {
  name: String
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetMediaEntity`](http://go/sg.thrift/ApiTweetMediaEntity)"
type ApiTweetMediaEntity @thrift_type(name : "ApiTweetMediaEntity", package : "com.twitter.strato.graphql") {
  media: ApiMedia!
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetPromotedContent`](http://go/sg.thrift/ApiTweetPromotedContent)"
type ApiTweetPromotedContent @thrift_type(name : "ApiTweetPromotedContent", package : "com.twitter.strato.graphql") {
  advertiser: ApiUser
  advertiser_name: String
  dedupe_ids: [String!]
  disclosure_text: String
  disclosure_type: String
  experiment_values: [ApiTweetPromotedContentExperimentValueEntry!]
  impression_id: String
  promoted_context: ApiTweetPromotedContext
  promoted_trend: ApiTweetPromotedTrend
  social_context: [ApiUser!]
}

type ApiTweetPromotedContentExperimentValueEntry {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetPromotedContext`](http://go/sg.thrift/ApiTweetPromotedContext)"
type ApiTweetPromotedContext @thrift_type(name : "ApiTweetPromotedContext", package : "com.twitter.strato.graphql") {
  animations: [Int53!]
  impression_id: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweetPromotedTrend`](http://go/sg.thrift/ApiTweetPromotedTrend)"
type ApiTweetPromotedTrend @thrift_type(name : "ApiTweetPromotedTrend", package : "com.twitter.strato.graphql") {
  id: NumericString
  name: String
  query_term: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiUser`](http://go/sg.thrift/ApiUser)"
type ApiUser @thrift_type(name : "ApiUser", package : "com.twitter.strato.graphql") {
  "Some of: dso, mms, smb, reseller, analytics, partner_managed, subscription. Viewable only by owner."
  advertiser_account_service_levels: [String!]
  advertiser_account_type: String
  "Viewable only by owner. Not viewable by contributors."
  allow_ads_personalization: Boolean
  "Viewable only by owner. Not viewable by contributors."
  allow_location_history_personalization: Boolean
  "Viewable only by owner. Not viewable by contributors."
  allow_logged_out_device_personalization: Boolean
  "Viewable only by owner. Not viewable by contributors."
  allow_sharing_data_for_third_party_personalization: Boolean
  "One of: enabled, disabled."
  analytics_type: String
  blocked_by: Boolean
  blocking: Boolean
  "Deprecated( This should always be None, as of Feb 2018)"
  business_profile_state: String @deprecated(reason : "This should always be None, as of Feb 2018")
  can_dm: Boolean
  "Viewable only by owner. Redacted if the client does not support media tagging, or if the user is a contributor."
  can_media_tag: Boolean
  "Currently unavailable. Viewable only by owner."
  counts: ApiUserCounts
  created_at: String
  created_at_ms: Int53
  customer_service_state: String
  default_profile: Boolean
  default_profile_image: Boolean
  description: String
  entities: UserEntities
  ext: ApiUserExtensions
  fast_followers_count: Int53
  favourites_count: Int53
  follow_request_received: Boolean
  follow_request_sent: Boolean
  followed_by: Boolean
  followers_count: Int53
  following: Boolean
  friends_count: Int53
  geo_enabled: Boolean
  has_custom_timelines: Boolean
  has_extended_profile: Boolean
  has_no_screen_name: Boolean
  id_str: String!
  is_lifeline_institution: Boolean
  is_translation_enabled: Boolean
  is_translator: Boolean
  "Deprecated(2019-07-16 This field is always null. https://twittercommunity.com/t/upcoming-changes-to-user-object-and-get-users-suggestions-endpoints/124732)"
  lang: String @deprecated(reason : "2019-07-16 This field is always null. https://twittercommunity.com/t/upcoming-changes-to-user-object-and-get-users-suggestions-endpoints/124732")
  listed_count: Int53
  live_following: Boolean
  location: String
  media_count: Int53
  muting: Boolean
  name: String
  "Viewable only by owner. Viewable by contributors."
  needs_phone_verification: Boolean
  normal_followers_count: Int53
  notifications: Boolean
  nsfw_user: Boolean
  "Deprecated( Moved to `Viewer.phone`)"
  phone: ApiUserPhone @deprecated(reason : "Moved to `Viewer.phone`")
  pinned_tweet_ids_str: [String!]
  pinned_tweets: [Tweet!] @deprecated(reason : "migrated to pinned_tweets_results")
  pinned_tweets_result: [TweetResult] @deprecated(reason : "migrated to pinned_tweets_results; field will always be null")
  pinned_tweets_results: [TweetResults!] @development
  profile_background_color: String
  profile_background_image_url_https: String
  profile_background_tile: Boolean
  "Comes from Media Info Service."
  profile_banner_extensions: ApiMediaExtensions
  profile_banner_url: String
  "Comes from Media Info Service."
  profile_image_extensions: ApiMediaExtensions
  profile_image_url_https: String
  "One of: timeout, offensive_profile_content, sensitive_media, fake_account. PROFILE_INTERSTITIAL_TYPE required."
  profile_interstitial_type: String
  profile_link_color: String
  "Deprecated( This was mis-typed as String. You probably want profile_location_place)"
  profile_location: String @deprecated(reason : "This was mis-typed as String. You probably want profile_location_place")
  profile_location_place: ApiPlace
  profile_sidebar_border_color: String
  profile_sidebar_fill_color: String
  profile_text_color: String
  profile_use_background_image: Boolean
  promoted_content: ApiUserPromotedContent
  protected: Boolean
  "Only available to official clients."
  require_some_consent: Boolean
  screen_name: String
  statuses_count: Int53
  "Viewable only by owner. Viewable by contributors."
  suspended: Boolean
  time_zone: String
  "Deprecated( This was mis-typed as String. You probably want translator_type_enum)"
  translator_type: String @deprecated(reason : "This was mis-typed as String. You probably want translator_type_enum")
  translator_type_enum: TranslatorType
  url: String
  use_cookie_personalization: Boolean
  utc_offset: Int53
  verified: Boolean
  verified_type: ApiVerifiedType
  want_retweets: Boolean
  withheld_copyright: Boolean
  withheld_description: String
  withheld_entities: UserEntities
  withheld_in_countries: [String!]
  withheld_scope: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiUserCounts`](http://go/sg.thrift/ApiUserCounts)"
type ApiUserCounts @thrift_type(name : "ApiUserCounts", package : "com.twitter.strato.graphql") {
  lists: ApiUserCountsLists
  saved_searches: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiUserCountsLists`](http://go/sg.thrift/ApiUserCountsLists)"
type ApiUserCountsLists @thrift_type(name : "ApiUserCountsLists", package : "com.twitter.strato.graphql") {
  owned: Int53
  subscribed: Int53
}

"Generated from type: [`com.twitter.strato.graphql.ApiUserExtensions`](http://go/sg.thrift/ApiUserExtensions)"
type ApiUserExtensions @thrift_type(name : "ApiUserExtensions", package : "com.twitter.strato.graphql") {
  "Deprecated( as of 2/2021, ads subscriptions has been deprecated)"
  adsSubscription: ApiAdsSubscriptionExtension @deprecated(reason : "as of 2/2021, ads subscriptions has been deprecated")
}

"Generated from type: [`com.twitter.strato.graphql.ApiUserPhone`](http://go/sg.thrift/ApiUserPhone)"
type ApiUserPhone @thrift_type(name : "ApiUserPhone", package : "com.twitter.strato.graphql") {
  address: String
  address_for_sms: String
  carrier: String
  country_code: String
  country_name: String
  created_at: String
  device_type: String
  enabled_for: String
  truncated_address: String
  verified: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.ApiUserPromotedContent`](http://go/sg.thrift/ApiUserPromotedContent)"
type ApiUserPromotedContent @thrift_type(name : "ApiUserPromotedContent", package : "com.twitter.strato.graphql") {
  advertiser: User @deprecated(reason : "migrated to advertiser_results")
  advertiser_result: UserResult @deprecated(reason : "migrated to advertiser_results; field will always be null")
  advertiser_results: UserResults
  disclosure_text: String
  disclosure_type: String
  impression_id: String
  social_context: [ApiUserPromotedContentSocialContextItem!]
}

"Generated from type: [`com.twitter.strato.graphql.ApiUserPromotedContentSocialContextItem`](http://go/sg.thrift/ApiUserPromotedContentSocialContextItem)"
type ApiUserPromotedContentSocialContextItem @thrift_type(name : "ApiUserPromotedContentSocialContextItem", package : "com.twitter.strato.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.strato.graphql.ApiVideo`](http://go/sg.thrift/ApiVideo)"
type ApiVideo @thrift_type(name : "ApiVideo", package : "com.twitter.strato.graphql") {
  aspect_ratio: AspectRatio!
  duration_millis: Int53!
  embeddable: Boolean
  preview_image: ApiImage
  variants: [VideoVariant!]!
  view_count: NumericString
}

"Generated from type: [`com.twitter.strato.graphql.ApiVisitSiteCallToAction`](http://go/sg.thrift/ApiVisitSiteCallToAction)"
type ApiVisitSiteCallToAction @thrift_type(name : "ApiVisitSiteCallToAction", package : "com.twitter.strato.graphql") {
  url: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiWatchNowCallToAction`](http://go/sg.thrift/ApiWatchNowCallToAction)"
type ApiWatchNowCallToAction @thrift_type(name : "ApiWatchNowCallToAction", package : "com.twitter.strato.graphql") {
  url: String!
}

"Generated from Strato space: `Article`"
type Article @strato_space(name : "Article") {
  "A globally unique identifier"
  id: ID!
  """
  Returns metadata for Article queried by ID
  
  Generated from Strato column: [graphql/longform/metadata.Article](https://strato.twitter.biz/web/browse/Article/graphql/longform/metadata)
  """
  metadata: ArticleMetadata @strato_column(path : "graphql/longform/metadata.Article") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: Int!
  """
  Returns an article-mixer getUrtResponse timeline for the Article Tweets product.
  
  Generated from Strato column: [graphql/longform/tweetsTimeline.Article](https://strato.twitter.biz/web/browse/Article/graphql/longform/tweetsTimeline)
  """
  tweets_timeline: Timeline @strato_column(path : "graphql/longform/tweetsTimeline.Article") @strato_op(value : Fetch)
}

type ArticleMetadata {
  article_url: String!
  description: String
  domain: String
  domain_url: String!
  image_url: String
  publish_date: String
  raw_url: String
  title: String
}

"Generated from type: [`com.twitter.mediaservices.commons.tweetmedia.AspectRatio`](http://go/sg.thrift/AspectRatio)"
type AspectRatio @thrift_type(name : "AspectRatio", package : "com.twitter.mediaservices.commons.tweetmedia") {
  denominator: Short!
  numerator: Short!
}

"Generated from type: [`com.twitter.audience_rewards.StratoAwardCount`](http://go/sg.thrift/StratoAwardCount)"
type AudienceAwardCount @thrift_type(name : "StratoAwardCount", package : "com.twitter.audience_rewards") {
  count: Int!
  product_id: String!
}

"Generated from type: [`com.twitter.audience_rewards.StratoSuperLikeMetadata`](http://go/sg.thrift/StratoSuperLikeMetadata)"
type AudienceAwardMetadata @thrift_type(name : "StratoSuperLikeMetadata", package : "com.twitter.audience_rewards") {
  super_like_count: [AudienceAwardCount!]!
  super_like_count_by_viewer: [AudienceAwardCount!]!
  super_liked: Boolean!
  total_super_likes: Int!
}

"Generated from type: [`com.twitter.audience_rewards.BenefitInfo`](http://go/sg.thrift/BenefitInfo)"
type AudienceRewardsBenefitInfo @thrift_type(name : "BenefitInfo", package : "com.twitter.audience_rewards") {
  benefit_type: AudienceRewardsBenefitFeature!
  description: String
  title: String
}

"Generated from type: [`com.twitter.audience_rewards.BenefitsData`](http://go/sg.thrift/BenefitsData)"
type AudienceRewardsBenefitsData @thrift_type(name : "BenefitsData", package : "com.twitter.audience_rewards") {
  benefits_data: [AudienceRewardsBenefitInfo!]
  creator_intro: String
}

"""
Information about the exclusivity applied to the Tweet

Generated from type: [`com.twitter.strato.graphql.ApiExclusiveTweetControl`](http://go/sg.thrift/ApiExclusiveTweetControl)
"""
type AudienceRewardsExclusiveTweetInfo @thrift_type(name : "ApiExclusiveTweetControl", package : "com.twitter.strato.graphql") {
  creator: User! @deprecated(reason : "migrated to creator_results")
  creator_result: UserResult @deprecated(reason : "migrated to creator_results; field will always be null")
  creator_results: UserResults!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AudienceRewardsProduct`](http://go/sg.thrift/AudienceRewardsProduct)"
type AudienceRewardsProduct @thrift_type(name : "AudienceRewardsProduct", package : "com.twitter.audiencerewards.productcatalog") {
  apple_app_store_id: String
  coin_value: Int
  currency: String!
  description: String!
  google_play_store_id: String
  id: String!
  name: String!
  price: Int53!
  status: AudienceRewardsProductStatus!
  thumbnail_url: String
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.ProductMetadata`](http://go/sg.thrift/ProductMetadata)"
type AudienceRewardsProductMetadata @thrift_type(name : "ProductMetadata", package : "com.twitter.audiencerewards.productcatalog") {
  amount: Int53
  currency_code: WebSubscriptionsCurrencyCode
  product_id: String
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AudienceRewardsProductsSlice`](http://go/sg.thrift/AudienceRewardsProductsSlice)"
type AudienceRewardsProductsSlice @thrift_type(name : "AudienceRewardsProductsSlice", package : "com.twitter.audiencerewards.productcatalog") {
  items: [AudienceRewardsProduct!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.audience_rewards.UnSuperLikeStratoResponse`](http://go/sg.thrift/UnSuperLikeStratoResponse)"
type AudienceRewardsUnSuperLikeResponse @thrift_type(name : "UnSuperLikeStratoResponse", package : "com.twitter.audience_rewards") {
  response_code: AudienceRewardsResponseCode!
  un_super_liked_count: Int
}

"Generated from Strato space: `AudioSpace`"
type AudioSpace @strato_space(name : "AudioSpace") {
  """
  Users with admin privileges in an audio space.
  
  Generated from Strato column: [graphql/audiospace/admins.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/admins)
  """
  admins: [User!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/admins.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; Users with admin privileges in an audio space.
  
  Generated from Strato column: [graphql/audiospace/admins.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/admins)
  """
  admins_result: [UserResult] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/admins.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; Users with admin privileges in an audio space.
  
  Generated from Strato column: [graphql/audiospace/admins.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/admins)
  """
  admins_results: [UserResults!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/admins.AudioSpace") @strato_op(value : Fetch)
  """
  Conversation controls dictating who may automatically join an audio space as a speaker.
  
  Generated from Strato column: [graphql/audiospace/conversationControls.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/conversationControls)
  """
  conversation_controls: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/conversationControls.AudioSpace") @strato_op(value : Fetch)
  """
  Copyright violation claims made on an audio space.
  
  Generated from Strato column: [graphql/audiospace/copyrightViolations.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/copyrightViolations)
  """
  copyright_violations: [LiveCopyrightViolation!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/copyrightViolations.AudioSpace") @strato_op(value : Fetch)
  """
  Time when audio space was created.
  
  Generated from Strato column: [graphql/audiospace/createdAt.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/createdAt)
  """
  created_at: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/createdAt.AudioSpace") @strato_op(value : Fetch)
  """
  User ID of the audio space creator.
  
  Generated from Strato column: [graphql/audiospace/creator.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/creator)
  """
  creator: User @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/creator.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; User ID of the audio space creator.
  
  Generated from Strato column: [graphql/audiospace/creator.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/creator)
  """
  creator_result: UserResult @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/creator.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; User ID of the audio space creator.
  
  Generated from Strato column: [graphql/audiospace/creator.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/creator)
  """
  creator_results: UserResults @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/creator.AudioSpace") @strato_op(value : Fetch)
  """
  User objects for guests in an audio space
  
  Generated from Strato column: [graphql/audiospace/guestUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/guestUsers)
  """
  guest_users: [User!] @deprecated(reason : "migrated to guest_users_results") @strato_column(path : "graphql/audiospace/guestUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; User objects for guests in an audio space
  
  Generated from Strato column: [graphql/audiospace/guestUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/guestUsers)
  """
  guest_users_result: [UserResult] @deprecated(reason : "migrated to guest_users_results; field will always be null") @strato_column(path : "graphql/audiospace/guestUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; User objects for guests in an audio space
  
  Generated from Strato column: [graphql/audiospace/guestUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/guestUsers)
  """
  guest_users_results: [UserResults!] @development @strato_column(path : "graphql/audiospace/guestUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Active speakers in an audio space.
  
  Generated from Strato column: [graphql/audiospace/guests.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/guests)
  """
  guests: [HydraGuest!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/guests.AudioSpace") @strato_op(value : Fetch)
  """
  Query ticket existence for combination of calling user and audiospace
  
  Generated from Strato column: [graphql/audiospace/hasTicket.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/hasTicket)
  """
  has_ticket: Boolean @strato_column(path : "graphql/audiospace/hasTicket.AudioSpace") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Whether an audio space is employee-only.
  
  Generated from Strato column: [graphql/audiospace/isEmployeeOnly.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/isEmployeeOnly)
  """
  is_employee_only: Boolean @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/isEmployeeOnly.AudioSpace") @strato_op(value : Fetch)
  """
  Whether an audio space is private.
  
  Generated from Strato column: [graphql/audiospace/isLocked.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/isLocked)
  """
  is_locked: Boolean @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/isLocked.AudioSpace") @strato_op(value : Fetch)
  """
  Whether a Space-wide mute has been applied to an Audio Space.
  
  Generated from Strato column: [graphql/audiospace/isMuted.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/isMuted)
  """
  is_muted: Boolean @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/isMuted.AudioSpace") @strato_op(value : Fetch)
  """
  Whether the creator of an Audio Space is muted.
  
  Generated from Strato column: [graphql/audiospace/isSpaceCreatorMuted.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/isSpaceCreatorMuted)
  """
  is_space_creator_muted: Boolean @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/isSpaceCreatorMuted.AudioSpace") @strato_op(value : Fetch)
  """
  Is subscribed to a scheduled audio space.
  
  Generated from Strato column: [graphql/audiospace/isSubscribed.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/isSubscribed)
  """
  is_subscribed: Boolean @strato_column(path : "graphql/audiospace/isSubscribed.AudioSpace") @strato_op(value : Fetch)
  """
  The guessed language of the Audio Space.
  
  Generated from Strato column: [graphql/audiospace/language.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/language)
  """
  language: String @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/language.AudioSpace") @strato_op(value : Fetch)
  """
  Max number of admins (co-hosts) allowed in Audio Space.
  
  Generated from Strato column: [graphql/audiospace/maxAdminCapacity.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/maxAdminCapacity)
  """
  max_admin_capacity: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/maxAdminCapacity.AudioSpace") @strato_op(value : Fetch)
  """
  Max number of guests allowed in Audio Space.
  
  Generated from Strato column: [graphql/audiospace/maxGuests.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/maxGuests)
  """
  max_guests: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/maxGuests.AudioSpace") @strato_op(value : Fetch)
  """
  The identifier for this an audio space, kept by media info service.
  
  Generated from Strato column: [graphql/audiospace/mediaKey.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/mediaKey)
  """
  media_key: String @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/mediaKey.AudioSpace") @strato_op(value : Fetch)
  """
  Users who are allowed to join the space as a speaker automatically
  
  Generated from Strato column: [graphql/audiospace/mentionedUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/mentionedUsers)
  """
  mentioned_users: [User!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/mentionedUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; Users who are allowed to join the space as a speaker automatically
  
  Generated from Strato column: [graphql/audiospace/mentionedUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/mentionedUsers)
  """
  mentioned_users_result: [UserResult] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/mentionedUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; Users who are allowed to join the space as a speaker automatically
  
  Generated from Strato column: [graphql/audiospace/mentionedUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/mentionedUsers)
  """
  mentioned_users_results: [UserResults!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/mentionedUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Core metadata of Audio Space exposed to GraphQL
  
  Generated from Strato column: [graphql/audiospace/metadata.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/metadata)
  """
  metadata: AudioSpaceMetadata @strato_column(path : "graphql/audiospace/metadata.AudioSpace") @strato_op(value : Fetch)
  """
  Participants in an audio space.
  
  Generated from Strato column: [graphql/audiospace/participants.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/participants)
  """
  participants: Participants @safety_level(value : "FilterNone") @strato_column(path : "graphql/audiospace/participants.AudioSpace") @strato_op(value : Fetch)
  """
  User objects for guests in an audio space
  
  Generated from Strato column: [graphql/audiospace/periscopeGraphqlGuestUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/periscopeGraphqlGuestUsers)
  """
  periscope_graphql_guest_users: [User!] @deprecated(reason : "migrated to periscope_graphql_guest_users_results") @strato_column(path : "graphql/audiospace/periscopeGraphqlGuestUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; User objects for guests in an audio space
  
  Generated from Strato column: [graphql/audiospace/periscopeGraphqlGuestUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/periscopeGraphqlGuestUsers)
  """
  periscope_graphql_guest_users_result: [UserResult] @deprecated(reason : "migrated to periscope_graphql_guest_users_results; field will always be null") @strato_column(path : "graphql/audiospace/periscopeGraphqlGuestUsers.AudioSpace") @strato_op(value : Fetch)
  """
  Result field; User objects for guests in an audio space
  
  Generated from Strato column: [graphql/audiospace/periscopeGraphqlGuestUsers.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/periscopeGraphqlGuestUsers)
  """
  periscope_graphql_guest_users_results: [UserResults!] @development @strato_column(path : "graphql/audiospace/periscopeGraphqlGuestUsers.AudioSpace") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  A set of rules for Audio Space set by an Space admin.
  
  Generated from Strato column: [graphql/audiospace/rules.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/rules)
  """
  rules: [String!] @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/rules.AudioSpace") @strato_op(value : Fetch)
  """
  Time at which the user has scheduled to start the Space.
  
  Generated from Strato column: [graphql/audiospace/scheduledStart.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/scheduledStart)
  """
  scheduled_start: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/scheduledStart.AudioSpace") @strato_op(value : Fetch)
  """
  Fetch sharing state and contents in Audio Space
  
  Generated from Strato column: [graphql/audiospace/sharings.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/sharings)
  """
  sharings(cursor: String): AudioSpaceSharingsSlice @deprecated(reason : "Superseded by graphql/sharingsResult.AudioSpace") @strato_column(path : "graphql/audiospace/sharings.AudioSpace") @strato_op(value : Fetch)
  """
  Fetch sharing state and contents in Audio Space
  
  Generated from Strato column: [graphql/audiospace/sharingsResult.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/sharingsResult)
  """
  sharings_result(count: Int, cursor: String): AudioSpaceSharingsSliceResult @strato_column(path : "graphql/audiospace/sharingsResult.AudioSpace") @strato_op(value : Fetch)
  """
  Fetch tickets sold for particular space
  
  Generated from Strato column: [graphql/audiospace/soldTicketsResultSlice.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/soldTicketsResultSlice)
  """
  sold_tickets_result_slice(cursor: String, limit: Int): AudioSpaceSoldTicketsResult @strato_column(path : "graphql/audiospace/soldTicketsResultSlice.AudioSpace") @strato_op(value : Fetch)
  """
  Fetch tickets sold for particular space
  
  Generated from Strato column: [graphql/audiospace/soldTicketsSlice.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/soldTicketsSlice)
  """
  sold_tickets_slice(cursor: String, limit: Int): AudioSpaceTicketSlice @deprecated(reason : "Superseded by periscope/graphql/soldTicketsResult.AudioSpace") @strato_column(path : "graphql/audiospace/soldTicketsSlice.AudioSpace") @strato_op(value : Fetch)
  """
  Time when the audio space was published.
  
  Generated from Strato column: [graphql/audiospace/startedAt.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/startedAt)
  """
  started_at: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/startedAt.AudioSpace") @strato_op(value : Fetch)
  """
  The current state of the audio space.
  
  Generated from Strato column: [graphql/audiospace/state.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/state)
  """
  state: BroadcastState @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/state.AudioSpace") @strato_op(value : Fetch)
  """
  Subscriber count to a scheduled audio space.
  
  Generated from Strato column: [graphql/audiospace/subscriberCount.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/subscriberCount)
  """
  subscriber_count(for_creator_only: Boolean): Int53 @development @strato_column(path : "graphql/audiospace/subscriberCount.AudioSpace") @strato_op(value : Fetch)
  """
  Description of Audio Space.
  
  Generated from Strato column: [graphql/audiospace/title.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/title)
  """
  title: String @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/title.AudioSpace") @strato_op(value : Fetch)
  """
  A topic for an Audio Space set by an Space admin.
  
  Generated from Strato column: [graphql/audiospace/topic.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/topic)
  """
  topic: [AudioSpaceTopic!] @strato_column(path : "graphql/audiospace/topic.AudioSpace") @strato_op(value : Fetch)
  """
  Time when the audio space was last updated.
  
  Generated from Strato column: [graphql/audiospace/updatedAt.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/updatedAt)
  """
  updated_at: Int53 @deprecated(reason : "Superseded by graphql/metadata.AudioSpace") @strato_column(path : "graphql/audiospace/updatedAt.AudioSpace") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceItem`](http://go/sg.thrift/AudioSpaceItem)"
type AudioSpaceItem @thrift_type(name : "AudioSpaceItem", package : "com.twitter.periscope.audio_space") {
  followed_participants_results: [UserResults!]
  kind: AudioSpaceItemKind
  social_proof: AudioSpaceSocialProof
  space: AudioSpace
}

"Generated from type: [`com.twitter.ubs.AudioSpace`](http://go/sg.thrift/AudioSpace)"
type AudioSpaceMetadata @thrift_type(name : "AudioSpace", package : "com.twitter.ubs") {
  "Users with admin privileges in the space"
  admin_user_ids: [String!]
  "Twitter users with admin privileges in the space"
  admins: [User!] @deprecated(reason : "migrated to admins_results")
  "Result field; Twitter users with admin privileges in the space"
  admins_result: [UserResult] @deprecated(reason : "migrated to admins_results; field will always be null")
  "Result field; Twitter users with admin privileges in the space"
  admins_results: [UserResults!]
  "The broadcast id of a space"
  broadcast_id: String
  "Time at which the user has canceled the scheduled space"
  canceled_at: Int53
  "Conversation controls dictating who may automatically join the space as a speaker"
  conversation_controls: Int53
  "Copyright violations detected on the space"
  copyright_violations: [LiveCopyrightViolation!]
  "Time when broadcast was created"
  created_at: Int53
  "The twitter user who created the space"
  creator: User @deprecated(reason : "migrated to creator_results")
  "Result field; The twitter user who created the space"
  creator_result: UserResult @deprecated(reason : "migrated to creator_results; field will always be null")
  "Result field; The twitter user who created the space"
  creator_results: UserResults
  "The user who created the space"
  creator_user_id: String
  "Indicates that the user does not have access to join the space"
  disallow_join: Boolean
  "Flag indicating the use of server-side transcriptions"
  enable_server_audio_transcription: Boolean
  "Time when the space ended"
  end_time: NumericString
  "Time when the space ended"
  ended_at: Int53
  "Timeout represents the estimated timeout time for the Space"
  expected_timeout: Int53
  "Active speakers in the space when live, and all speakers when ended"
  guests: [HydraGuest!]
  "Host of the space"
  host: HydraGuest
  "Space background image"
  image_url: String
  "Whether a space is employee-only"
  is_employee_only: Boolean
  "Whether a space is private"
  is_locked: Boolean
  "Flag indicating a space-wide mute"
  is_muted: Boolean
  "Indicates that a space is available for clipping"
  is_space_available_for_clipping: Boolean
  "Flag indicating the space is available for replay"
  is_space_available_for_replay: Boolean
  "Flag indicating that the space creator is muted"
  is_space_creator_muted: Boolean
  "Is the space trending"
  is_trending: Boolean
  "Guessed language of the space based on signals such as user locale and description"
  language: String
  "List of twitter users who are listening to the space"
  listeners: [User!] @deprecated(reason : "migrated to listeners_results")
  "Result field; List of twitter users who are listening to the space"
  listeners_result: [UserResult] @deprecated(reason : "migrated to listeners_results; field will always be null")
  "Result field; List of twitter users who are listening to the space"
  listeners_results: [UserResults!]
  "Maximum number of admins (co-hosts) accepted in the space"
  max_admin_capacity: Int53
  "Maximum number of speakers accepted in the space"
  max_guest_sessions: Int53
  "The identifier for this broadcast, kept by media info service"
  media_key: String
  "Twitter users who are allowed to join the space as a speaker automatically"
  mentioned_users: [User!] @deprecated(reason : "migrated to mentioned_users_results")
  "Result field; Twitter users who are allowed to join the space as a speaker automatically"
  mentioned_users_result: [UserResult] @deprecated(reason : "migrated to mentioned_users_results; field will always be null")
  "Result field; Twitter users who are allowed to join the space as a speaker automatically"
  mentioned_users_results: [UserResults!]
  "Indicates the intended audience of the space"
  narrow_cast_space_type: Int53
  "Total number of participants who recently joined"
  num_participants_recently_joined: Int53
  "Total number of tweets with space link"
  num_tweets_with_space_link: Int53
  "Participants of a space, grouped by admins, speakers, and listeners"
  participants: Participants
  "Twitter users requesting admin privileges in the space"
  pending_admin_twitter_user_ids: [User!] @deprecated(reason : "migrated to pending_admin_twitter_user_ids_results")
  "Result field; Twitter users requesting admin privileges in the space"
  pending_admin_twitter_user_ids_result: [UserResult] @deprecated(reason : "migrated to pending_admin_twitter_user_ids_results; field will always be null")
  "Result field; Twitter users requesting admin privileges in the space"
  pending_admin_twitter_user_ids_results: [UserResults!]
  "Users requesting admin privileges in the space"
  pending_admin_user_ids: [String!]
  "User with primary admin privileges in the space"
  primary_admin_user_id: String
  "Time when the broadcast object was replayed"
  replay_start_time: Int53
  "List of rules for the space set by the user"
  rules: [String!]
  "Time at which the user has scheduled to start the space"
  scheduled_start: Int53
  "List of speakers who shared space link"
  speakers_who_shared_tweet: [User!] @deprecated(reason : "migrated to speakers_who_shared_tweet_results")
  "Result field; List of speakers who shared space link"
  speakers_who_shared_tweet_result: [UserResult] @deprecated(reason : "migrated to speakers_who_shared_tweet_results; field will always be null")
  "Result field; List of speakers who shared space link"
  speakers_who_shared_tweet_results: [UserResults!]
  "Time when the broadcast object was published"
  start: Int53
  "The state of a space"
  state: BroadcastState
  "Id of a ticket group provided by product catalog metadata"
  ticket_group_id: String
  "Deprecated( please use ticket_group_id)"
  ticket_product_id: String @deprecated(reason : "please use ticket_group_id")
  "Number of tickets that has been sold for this ticketed space"
  tickets_sold: Int53
  "Number of tickets available in total for this ticketed space"
  tickets_total: Int53
  "Description of the space set by the user"
  title: String
  "Top recently joined followed listener"
  top_recently_joined_followed_listener: User @deprecated(reason : "migrated to top_recently_joined_followed_listener_results")
  "Result field; Top recently joined followed listener"
  top_recently_joined_followed_listener_result: UserResult @deprecated(reason : "migrated to top_recently_joined_followed_listener_results; field will always be null")
  "Result field; Top recently joined followed listener"
  top_recently_joined_followed_listener_results: UserResults
  "The topics that an admin or host has added to their space"
  topics: [AudioSpaceTopic!]
  "Total number of users who listened to the space live, including speakers and host"
  total_live_listeners: Int53
  "Total number of logged out users who listend to the space live"
  total_live_listeners_public: Int53
  "Total number of users who listened, spoke or hosted in this space at any point"
  total_participated: Int53
  "Total number of logout users who listened in this space at any point. total_participated includes total_participated_public"
  total_participated_public: Int53
  "Total number of users who are currently listening, speaking or hosting in this space"
  total_participating: Int53
  "Total number of logged out users who are currently listening, speaking or hosting in this space. total_participating includes total_participating_public"
  total_participating_public: Int53
  "Total number of users who replayed this space"
  total_replay_watched: Int53
  "Total number of logged out users who replayed this space"
  total_replay_watched_public: Int53
  "Tweet id associated by the host"
  tweet: Tweet @deprecated(reason : "migrated to tweet_results")
  "Result field; Tweet id associated by the host"
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  "Result field; Tweet id associated by the host"
  tweet_results: TweetResults
  "Time when the broadcast object was last updated"
  updated_at: Int53
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceSection`](http://go/sg.thrift/AudioSpaceSection)"
type AudioSpaceSection @thrift_type(name : "AudioSpaceSection", package : "com.twitter.periscope.audio_space") {
  destination: AudioSpacesSearchFilter
  items: [AudioSpaceItem!]
  name: String
  social_proof: AudioSpaceSocialProof
  total_num_items: Int
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharedTweet`](http://go/sg.thrift/AudioSpaceSharedTweet)"
type AudioSpaceSharedTweet @thrift_type(name : "AudioSpaceSharedTweet", package : "com.twitter.strato.graphql") {
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharing`](http://go/sg.thrift/AudioSpaceSharing)"
type AudioSpaceSharing @thrift_type(name : "AudioSpaceSharing", package : "com.twitter.strato.graphql") {
  created_at_ms: Int53!
  shared_item: AudioSpaceSharedItem!
  sharing_id: NumericString!
  updated_at_ms: Int53!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharingsSlice`](http://go/sg.thrift/AudioSpaceSharingsSlice)"
type AudioSpaceSharingsSlice @thrift_type(name : "AudioSpaceSharingsSlice", package : "com.twitter.strato.graphql") {
  items: [AudioSpaceSharing!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharingsSliceUnavailable`](http://go/sg.thrift/AudioSpaceSharingsSliceUnavailable)"
type AudioSpaceSharingsSliceUnavailable @thrift_type(name : "AudioSpaceSharingsSliceUnavailable", package : "com.twitter.strato.graphql") {
  message: String
  unavailable_reason: AudioSpaceSharingsFailureReason!
}

type AudioSpaceSlice {
  items: [AudioSpace!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceSocialProof`](http://go/sg.thrift/AudioSpaceSocialProof)"
type AudioSpaceSocialProof @thrift_type(name : "AudioSpaceSocialProof", package : "com.twitter.periscope.audio_space") {
  icon: String
  label: String
  rounded: Boolean
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSoldTicketsUnavailable`](http://go/sg.thrift/AudioSpaceSoldTicketsUnavailable)"
type AudioSpaceSoldTicketsUnavailable @thrift_type(name : "AudioSpaceSoldTicketsUnavailable", package : "com.twitter.strato.graphql") {
  audio_space_sold_tickets_failure_reason: AudioSpaceSoldTicketsFailureReason!
  message: String
}

"Generated from type: [`com.twitter.ubs.AudioSpaceTicket`](http://go/sg.thrift/AudioSpaceTicket)"
type AudioSpaceTicket @thrift_type(name : "AudioSpaceTicket", package : "com.twitter.ubs") {
  audio_space: AudioSpace!
  buyer: User! @deprecated(reason : "migrated to buyer_results")
  buyer_result: UserResult @deprecated(reason : "migrated to buyer_results; field will always be null")
  buyer_results: UserResults!
  created_at: Int53!
  group_id: String!
  platform: AudioSpaceTicketPlatform!
  refunded_at: Int53
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceTicketsSlice`](http://go/sg.thrift/AudioSpaceTicketsSlice)"
type AudioSpaceTicketSlice @thrift_type(name : "AudioSpaceTicketsSlice", package : "com.twitter.periscope.audio_space") {
  items: [AudioSpaceTicket!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.ubs.AudioSpaceTopic`](http://go/sg.thrift/AudioSpaceTopic)"
type AudioSpaceTopic @thrift_type(name : "AudioSpaceTopic", package : "com.twitter.ubs") {
  topic: Topic!
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceSearchResult`](http://go/sg.thrift/AudioSpaceSearchResult)"
type AudioSpacesSearchResult @thrift_type(name : "AudioSpaceSearchResult", package : "com.twitter.periscope.audio_space") {
  sections: [AudioSpaceSection!]
}

"Generated from type: [`com.twitter.kujaku.AutoTranslateSettings`](http://go/sg.thrift/AutoTranslateSettings)"
type AutoTranslateSettings @thrift_type(name : "AutoTranslateSettings", package : "com.twitter.kujaku") {
  disabled_languages: [String!]!
  enabled: Boolean!
}

type AutoTranslateTweetResponse {
  entities: EntitySet
  localized_source_language: String
  translation: String
  translation_source: String
  translation_state: String!
}

"Generated from type: [`com.twitter.strato.graphql.FleetsData`](http://go/sg.thrift/FleetsData)"
type AvatarFleetsData @thrift_type(name : "FleetsData", package : "com.twitter.strato.graphql") {
  fleet_thread: FleetThread!
  fully_read: Boolean!
}

"Generated from type: [`com.twitter.strato.graphql.SpacesData`](http://go/sg.thrift/SpacesData)"
type AvatarSpacesData @thrift_type(name : "SpacesData", package : "com.twitter.strato.graphql") {
  audio_space: AudioSpace!
  participants: [User!]! @deprecated(reason : "migrated to participants_results")
  participants_result: [UserResult] @deprecated(reason : "migrated to participants_results; field will always be null")
  participants_results: [UserResults!]!
}

"Generated from type: [`com.twitter.tweb3.graphql.result.AvatarUpdateSuccessResult`](http://go/sg.thrift/AvatarUpdateSuccessResult)"
type AvatarUpdateSuccessResult @thrift_type(name : "AvatarUpdateSuccessResult", package : "com.twitter.tweb3.graphql.result") {
  media_url: String
  success: Boolean!
}

"Generated from type: [`com.twitter.strato.graphql.AvatarUserData`](http://go/sg.thrift/AvatarUserData)"
type AvatarUserData @thrift_type(name : "AvatarUserData", package : "com.twitter.strato.graphql") {
  fleets: AvatarFleetsData
  spaces: AvatarSpacesData
}

"Generated from type: [`com.twitter.strato.graphql.AvatarUserDataStruct`](http://go/sg.thrift/AvatarUserDataStruct)"
type AvatarUserDataResponse @thrift_type(name : "AvatarUserDataStruct", package : "com.twitter.strato.graphql") {
  avatar_user_data: AvatarUserData!
  refresh_delay_secs: Float!
}

"Generated from type: [`com.twitter.affiliates.BadgeInfo`](http://go/sg.thrift/BadgeInfo)"
type BadgeInfo @thrift_type(name : "BadgeInfo", package : "com.twitter.affiliates") {
  url: String!
}

type BetaSampleMixerSlice {
  items: [BetaMixerSliceItem!]!
  slice_info: SliceInfo!
}

type BetaSampleMixerValidationError {
  message: String!
}

type BetaSampleMixerValidationErrors {
  errors: [BetaSampleMixerValidationError!]!
}

"Generated from type: [`com.twitter.ads.suggestions.BidGoalSuggestionResponse`](http://go/sg.thrift/BidGoalSuggestionResponse)"
type BidGoalSuggestionResponse @thrift_type(name : "BidGoalSuggestionResponse", package : "com.twitter.ads.suggestions") {
  available_goals: [String!]!
  default_goal: String!
}

"Generated from type: [`com.twitter.ads.suggestions.BidPayBySuggestionResponse`](http://go/sg.thrift/BidPayBySuggestionResponse)"
type BidPayBySuggestionResponse @thrift_type(name : "BidPayBySuggestionResponse", package : "com.twitter.ads.suggestions") {
  available_pay_bys: [String!]!
  default_pay_by: String!
}

"Generated from type: [`com.twitter.ads.suggestions.BidStrategy`](http://go/sg.thrift/BidStrategy)"
type BidStrategy @thrift_type(name : "BidStrategy", package : "com.twitter.ads.suggestions") {
  bid_strategy: String!
  max_bid: Int53
  min_bid: Int53
}

"Generated from type: [`com.twitter.ads.suggestions.BidStrategySuggestionResponse`](http://go/sg.thrift/BidStrategySuggestionResponse)"
type BidStrategySuggestionResponse @thrift_type(name : "BidStrategySuggestionResponse", package : "com.twitter.ads.suggestions") {
  available_bid_strategies: [BidStrategy!]!
  default_bid_strategy: BidStrategy!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchAggregateRating`](http://go/sg.thrift/BirdwatchAggregateRating)"
type BirdwatchAggregateRating @thrift_type(name : "BirdwatchAggregateRating", package : "com.twitter.strato.graphql") {
  helpful: Int53
  not_helpful: Int53
  somewhat_helpful: Int53
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchAliasSelfSelectOptions`](http://go/sg.thrift/BirdwatchAliasSelfSelectOptions)"
type BirdwatchAliasSelfSelectOptions @thrift_type(name : "BirdwatchAliasSelfSelectOptions", package : "com.twitter.strato.graphql") {
  options: [String!]
  retry_in_millis: Int
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchAliasSelfSelectStatus`](http://go/sg.thrift/BirdwatchAliasSelfSelectStatus)"
type BirdwatchAliasSelfSelectStatus @thrift_type(name : "BirdwatchAliasSelfSelectStatus", package : "com.twitter.strato.graphql") {
  can_select: Boolean!
  has_selected: Boolean!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchError`](http://go/sg.thrift/BirdwatchError)"
type BirdwatchError @thrift_type(name : "BirdwatchError", package : "com.twitter.strato.graphql") {
  reason: String
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchMiniSurvey`](http://go/sg.thrift/BirdwatchMiniSurvey)"
type BirdwatchMiniSurvey @thrift_type(name : "BirdwatchMiniSurvey", package : "com.twitter.strato.graphql") {
  prompt: String!
  survey_url: String!
  title: String!
}

"Generated from Strato space: `BirdwatchNote`"
type BirdwatchNote @strato_space(name : "BirdwatchNote") {
  """
  Returns the appeal status of the authenticated user for a Birdwatch note.
  
  Generated from Strato column: [graphql/birdwatch/appealStatus.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/appealStatus)
  """
  appeal_status: BirdwatchNoteAppealStatus @strato_column(path : "graphql/birdwatch/appealStatus.BirdwatchNote") @strato_op(value : Fetch)
  """
  Birdwatch profile of the author of the note
  
  Generated from Strato column: [graphql/birdwatch/birdwatchProfile.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/birdwatchProfile)
  """
  birdwatch_profile: BirdwatchProfile @strato_column(path : "graphql/birdwatch/birdwatchProfile.BirdwatchNote") @strato_op(value : Fetch)
  """
  Returns if the authenticated user can appeal to a Birdwatch note.
  
  Generated from Strato column: [graphql/birdwatch/canAppeal.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/canAppeal)
  """
  can_appeal: Boolean @strato_column(path : "graphql/birdwatch/canAppeal.BirdwatchNote") @strato_op(value : Fetch)
  """
  Note classification type
  
  Generated from Strato column: [graphql/birdwatch/classification.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/classification)
  """
  classification: BirdwatchNoteClassification @strato_column(path : "graphql/birdwatch/classification.BirdwatchNote") @strato_op(value : Fetch)
  """
  Note creation timestamp in epoch time
  
  Generated from Strato column: [graphql/birdwatch/createdAt.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/createdAt)
  """
  created_at: Int53 @strato_column(path : "graphql/birdwatch/createdAt.BirdwatchNote") @strato_op(value : Fetch)
  """
  User's answers to Birdwatch note contribution questions (version 1).
  
  Generated from Strato column: [graphql/birdwatch/dataV1.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/dataV1)
  """
  data_v1: BirdwatchNoteDataV1 @strato_column(path : "graphql/birdwatch/dataV1.BirdwatchNote") @strato_op(value : Fetch)
  """
  returns true if this note was deleted but is retained before erasure, and requesting user has permissions to still see the note (e.g. agents)
  
  Generated from Strato column: [graphql/birdwatch/deleted.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/deleted)
  """
  deleted: Boolean @strato_column(path : "graphql/birdwatch/deleted.BirdwatchNote") @strato_op(value : Fetch)
  """
  returns the helpful tags for this note if it is rated helpful.
  
  Generated from Strato column: [graphql/birdwatch/helpfulTags.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/helpfulTags)
  """
  helpful_tags: [BirdwatchNoteRatingHelpfulTags!] @development @strato_column(path : "graphql/birdwatch/helpfulTags.BirdwatchNote") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  returns the number of times this note is viewed, rounded to the nearest 100.
  
  Generated from Strato column: [graphql/birdwatch/impressionCount.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/impressionCount)
  """
  impression_count: Int53 @development @strato_column(path : "graphql/birdwatch/impressionCount.BirdwatchNote") @strato_op(value : Fetch)
  """
  returns the not helpful tags for this note if it is rated not helpful.
  
  Generated from Strato column: [graphql/birdwatch/notHelpfulTags.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/notHelpfulTags)
  """
  not_helpful_tags: [BirdwatchNoteRatingNotHelpfulTags!] @development @strato_column(path : "graphql/birdwatch/notHelpfulTags.BirdwatchNote") @strato_op(value : Fetch)
  """
  returns true if this note was rated helpful by community.
  
  Generated from Strato column: [graphql/birdwatch/ratedHelpful.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/ratedHelpful)
  """
  rated_helpful: Boolean @deprecated(reason : "use rating_status instead") @strato_column(path : "graphql/birdwatch/ratedHelpful.BirdwatchNote") @strato_op(value : Fetch)
  """
  User's rating on a note.
  
  Generated from Strato column: [graphql/birdwatch/rating.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/rating)
  """
  rating: BirdwatchNoteRating @strato_column(path : "graphql/birdwatch/rating.BirdwatchNote") @strato_op(value : Fetch)
  """
  A Birdwatch Rating form, if one should be enabled.
  
  Generated from Strato column: [graphql/birdwatch/ratingForm.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/ratingForm)
  """
  rating_form(origin: BirdwatchNoteRatingOriginInput): BirdwatchNoteRatingForm @development @strato_column(path : "graphql/birdwatch/ratingForm.BirdwatchNote") @strato_op(value : Fetch)
  """
  returns the rating status of this note.
  
  Generated from Strato column: [graphql/birdwatch/ratingStatus.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/ratingStatus)
  """
  rating_status: BirdwatchNoteRatingStatus @development @strato_column(path : "graphql/birdwatch/ratingStatus.BirdwatchNote") @strato_op(value : Fetch)
  """
  Post-rating survey for this note, customized for each user and note
  
  Generated from Strato column: [graphql/birdwatch/ratingSurvey.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/ratingSurvey)
  """
  rating_survey: TimelineUrl @strato_column(path : "graphql/birdwatch/ratingSurvey.BirdwatchNote") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Explanation of why a Tweet is misleading or not
  
  Generated from Strato column: [graphql/birdwatch/summary.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/summary)
  """
  summary: TimelineRichText @strato_column(path : "graphql/birdwatch/summary.BirdwatchNote") @strato_op(value : Fetch)
  """
  The tweet note is written for
  
  Generated from Strato column: [graphql/birdwatch/tweet.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/tweet)
  """
  tweet: Tweet @deprecated(reason : "migrated to tweet_results") @strato_column(path : "graphql/birdwatch/tweet.BirdwatchNote") @strato_op(value : Fetch)
  """
  Result field; The tweet note is written for
  
  Generated from Strato column: [graphql/birdwatch/tweet.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/tweet)
  """
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null") @strato_column(path : "graphql/birdwatch/tweet.BirdwatchNote") @strato_op(value : Fetch)
  """
  Result field; The tweet note is written for
  
  Generated from Strato column: [graphql/birdwatch/tweet.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/tweet)
  """
  tweet_results: TweetResults @strato_column(path : "graphql/birdwatch/tweet.BirdwatchNote") @strato_op(value : Fetch)
  """
  Author of the note
  
  Generated from Strato column: [graphql/birdwatch/user.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/user)
  """
  user: User @deprecated(reason : "use `profile` instead") @strato_column(path : "graphql/birdwatch/user.BirdwatchNote") @strato_op(value : Fetch)
  """
  Result field; Author of the note
  
  Generated from Strato column: [graphql/birdwatch/user.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/user)
  """
  user_result: UserResult @deprecated(reason : "use `profile` instead") @strato_column(path : "graphql/birdwatch/user.BirdwatchNote") @strato_op(value : Fetch)
  """
  Result field; Author of the note
  
  Generated from Strato column: [graphql/birdwatch/user.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/user)
  """
  user_results: UserResults @deprecated(reason : "use `profile` instead") @strato_column(path : "graphql/birdwatch/user.BirdwatchNote") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteDataV1`](http://go/sg.thrift/BirdwatchNoteDataV1)"
type BirdwatchNoteDataV1 @thrift_type(name : "BirdwatchNoteDataV1", package : "com.twitter.strato.graphql") {
  believable: BirdwatchNoteBelievableTag
  classification: BirdwatchNoteClassification
  harmful: BirdwatchNoteHarmfulTag
  misleading_tags: [BirdwatchNoteMisleadingTag!]
  not_misleading_tags: [BirdwatchNoteNotMisleadingTag!]
  summary: TimelineRichText
  trustworthy_sources: Boolean
  validation: BirdwatchNoteEaseOfValidationTag
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRating`](http://go/sg.thrift/BirdwatchNoteRating)"
type BirdwatchNoteRating @thrift_type(name : "BirdwatchNoteRating", package : "com.twitter.strato.graphql") {
  data_v1: BirdwatchNoteRatingDataV1
  data_v2: BirdwatchNoteRatingDataV2
  user_response: BirdwatchNoteRatingUserResponse
  version: Int53
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingCreateResult`](http://go/sg.thrift/BirdwatchNoteRatingCreateResult)"
type BirdwatchNoteRatingCreateResult @thrift_type(name : "BirdwatchNoteRatingCreateResult", package : "com.twitter.strato.graphql") {
  display_message: BirdwatchNoteRatingDisplayMessage
  rating: BirdwatchNoteRating!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingDataV1`](http://go/sg.thrift/BirdwatchNoteRatingDataV1)"
type BirdwatchNoteRatingDataV1 @thrift_type(name : "BirdwatchNoteRatingDataV1", package : "com.twitter.strato.graphql") {
  agree: Boolean
  helpful: Boolean
  helpful_tags: [BirdwatchNoteRatingHelpfulTags!]
  not_helpful_tags: [BirdwatchNoteRatingNotHelpfulTags!]
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingDataV2`](http://go/sg.thrift/BirdwatchNoteRatingDataV2)"
type BirdwatchNoteRatingDataV2 @thrift_type(name : "BirdwatchNoteRatingDataV2", package : "com.twitter.strato.graphql") {
  helpful_tags: [BirdwatchNoteRatingHelpfulTags!]
  helpfulness_level: BirdwatchNoteRatingHelpfulnessLevel
  not_helpful_tags: [BirdwatchNoteRatingNotHelpfulTags!]
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingDisplayMessage`](http://go/sg.thrift/BirdwatchNoteRatingDisplayMessage)"
type BirdwatchNoteRatingDisplayMessage @thrift_type(name : "BirdwatchNoteRatingDisplayMessage", package : "com.twitter.strato.graphql") {
  response_cta: BirdwatchPivotCallToAction!
  survey: BirdwatchMiniSurvey
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingForm`](http://go/sg.thrift/BirdwatchNoteRatingForm)"
type BirdwatchNoteRatingForm @thrift_type(name : "BirdwatchNoteRatingForm", package : "com.twitter.strato.graphql") {
  conditional_questions: [BirdwatchNoteRatingFormConditionalQuestionEntry!]
  existing_user_response: BirdwatchNoteRatingUserResponse
  initial_question: BirdwatchNoteRatingFormQuestion!
  passthrough_token: String!
  show_data_privacy_notice: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingFormAnswerChoice`](http://go/sg.thrift/BirdwatchNoteRatingFormAnswerChoice)"
type BirdwatchNoteRatingFormAnswerChoice @thrift_type(name : "BirdwatchNoteRatingFormAnswerChoice", package : "com.twitter.strato.graphql") {
  answer_id: Int!
  answer_prompt: String!
}

type BirdwatchNoteRatingFormConditionalQuestionEntry {
  key: Int!
  value: [BirdwatchNoteRatingFormQuestion!]!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingFormQuestion`](http://go/sg.thrift/BirdwatchNoteRatingFormQuestion)"
type BirdwatchNoteRatingFormQuestion @thrift_type(name : "BirdwatchNoteRatingFormQuestion", package : "com.twitter.strato.graphql") {
  is_required: Boolean
  question_details: BirdwatchNoteRatingQuestionDetails!
  question_id: Int!
  question_prompt: String!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingMultipleChoiceQuestion`](http://go/sg.thrift/BirdwatchNoteRatingMultipleChoiceQuestion)"
type BirdwatchNoteRatingMultipleChoiceQuestion @thrift_type(name : "BirdwatchNoteRatingMultipleChoiceQuestion", package : "com.twitter.strato.graphql") {
  answer_choices: [BirdwatchNoteRatingFormAnswerChoice!]!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingSingleChoiceQuestion`](http://go/sg.thrift/BirdwatchNoteRatingSingleChoiceQuestion)"
type BirdwatchNoteRatingSingleChoiceQuestion @thrift_type(name : "BirdwatchNoteRatingSingleChoiceQuestion", package : "com.twitter.strato.graphql") {
  answer_choices: [BirdwatchNoteRatingFormAnswerChoice!]!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingUserResponse`](http://go/sg.thrift/BirdwatchNoteRatingUserResponse)"
type BirdwatchNoteRatingUserResponse @thrift_type(name : "BirdwatchNoteRatingUserResponse", package : "com.twitter.strato.graphql") {
  answers: [BirdwatchNoteRatingUserResponseAnswerEntry!]!
  passthrough_token: String!
}

type BirdwatchNoteRatingUserResponseAnswerEntry {
  key: Int!
  value: [Int!]!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNotesSlice`](http://go/sg.thrift/BirdwatchNotesSlice)"
type BirdwatchNotesSlice @thrift_type(name : "BirdwatchNotesSlice", package : "com.twitter.strato.graphql") {
  notes: [BirdwatchNote!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchPivot`](http://go/sg.thrift/BirdwatchPivot)"
type BirdwatchPivot @thrift_type(name : "BirdwatchPivot", package : "com.twitter.strato.graphql") {
  birdwatch_rating_form: BirdwatchNoteRatingForm
  call_to_action: BirdwatchPivotCallToAction
  destination_url: String!
  footer: TimelineRichText
  icon_type: BirdwatchPivotIconType
  note: BirdwatchNote
  subtitle: TimelineRichText
  title: String!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchPivotCallToAction`](http://go/sg.thrift/BirdwatchPivotCallToAction)"
type BirdwatchPivotCallToAction @thrift_type(name : "BirdwatchPivotCallToAction", package : "com.twitter.strato.graphql") {
  birdwatch_pivot_action_type: BirdwatchPivotActionType
  destination_url: String
  prompt: String!
  title: String!
}

"Generated from Strato space: `BirdwatchProfile`"
type BirdwatchProfile @strato_space(name : "BirdwatchProfile") {
  """
  Birdwatch Alias of the authenticated user (same as the BirdwatchProfile rest_id, can be used interchangably).
  
  Generated from Strato column: [graphql/birdwatch/alias.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/alias)
  """
  alias: String @strato_column(path : "graphql/birdwatch/alias.BirdwatchProfile") @strato_op(value : Fetch)
  """
  Badges that the Birdwatch contributor has received.
  
  Generated from Strato column: [graphql/birdwatch/badges.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/badges)
  """
  badges: [BirdwatchBadge!] @development @strato_column(path : "graphql/birdwatch/badges.BirdwatchProfile") @strato_op(value : Fetch)
  """
  Returns true if the contributor has written any Birdwatch notes.
  
  Generated from Strato column: [graphql/birdwatch/hasNotes.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/hasNotes)
  """
  has_notes: Boolean @strato_column(path : "graphql/birdwatch/hasNotes.BirdwatchProfile") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Birdwatch notes written by the contributor, ordered by recency.
  
  Generated from Strato column: [graphql/birdwatch/notesSlice.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/notesSlice)
  """
  notes_slice(count: Int, cursor: String): BirdwatchNotesSlice @strato_column(path : "graphql/birdwatch/notesSlice.BirdwatchProfile") @strato_op(value : Fetch)
  """
  Number of helpful ratings the Birdwatch contributor has received.
  
  Generated from Strato column: [graphql/birdwatch/ratingsReceivedHelpfulCount.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/ratingsReceivedHelpfulCount)
  """
  ratings_received_helpful_count: Int53 @strato_column(path : "graphql/birdwatch/ratingsReceivedHelpfulCount.BirdwatchProfile") @strato_op(value : Fetch)
  """
  Number of not helpful ratings the Birdwatch contributor has received.
  
  Generated from Strato column: [graphql/birdwatch/ratingsReceivedNotHelpfulCount.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/ratingsReceivedNotHelpfulCount)
  """
  ratings_received_not_helpful_count: Int53 @strato_column(path : "graphql/birdwatch/ratingsReceivedNotHelpfulCount.BirdwatchProfile") @strato_op(value : Fetch)
  """
  Number of somewhat helpful ratings the Birdwatch contributor has received.
  
  Generated from Strato column: [graphql/birdwatch/ratingsReceivedSomewhatHelpfulCount.BirdwatchProfile](https://strato.twitter.biz/web/browse/BirdwatchProfile/graphql/birdwatch/ratingsReceivedSomewhatHelpfulCount)
  """
  ratings_received_somewhat_helpful_count: Int53 @strato_column(path : "graphql/birdwatch/ratingsReceivedSomewhatHelpfulCount.BirdwatchProfile") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchPublicDataFileBundle`](http://go/sg.thrift/BirdwatchPublicDataFileBundle)"
type BirdwatchPublicDataFileBundle @thrift_type(name : "BirdwatchPublicDataFileBundle", package : "com.twitter.strato.graphql") {
  notes: BirdwatchPublicDataFileInfo
  ratings: BirdwatchPublicDataFileInfo
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchPublicDataFileInfo`](http://go/sg.thrift/BirdwatchPublicDataFileInfo)"
type BirdwatchPublicDataFileInfo @thrift_type(name : "BirdwatchPublicDataFileInfo", package : "com.twitter.strato.graphql") {
  created_at: Int53!
  urls: [String!]!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockFailedResult`](http://go/sg.thrift/BlockFailedResult)"
type BlockFailedResult @thrift_type(name : "BlockFailedResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  block_failed_reason: BlockFailedReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockInvalidRequestResult`](http://go/sg.thrift/BlockInvalidRequestResult)"
type BlockInvalidRequestResult @thrift_type(name : "BlockInvalidRequestResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  block_invalid_request_reason: BlockInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockSuccessResult`](http://go/sg.thrift/BlockSuccessResult)"
type BlockSuccessResult @thrift_type(name : "BlockSuccessResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  block_success_reason: BlockSuccessReason!
}

type BookmarkCollection {
  contains_requested_tweet: Boolean
  id: NumericString!
  media: ApiMedia
  name: String!
}

type BookmarkCollectionsSlice {
  items: [BookmarkCollection!]!
  slice_info: SliceInfo!
}

"Generated from Strato space: `Broadcast`"
type Broadcast @strato_space(name : "Broadcast") {
  """
  Whether the broadcaster accepts gifts.
  
  Generated from Strato column: [graphql/broadcast/acceptGifts.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/acceptGifts)
  """
  accept_gifts: Boolean @strato_column(path : "graphql/broadcast/acceptGifts.Broadcast") @strato_op(value : Fetch)
  """
  Whether the broadcaster accepts guests.
  
  Generated from Strato column: [graphql/broadcast/acceptGuests.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/acceptGuests)
  """
  accept_guests: Boolean @strato_column(path : "graphql/broadcast/acceptGuests.Broadcast") @strato_op(value : Fetch)
  """
  Whether the broadcast is available for replay.
  
  Generated from Strato column: [graphql/broadcast/availableForReplay.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/availableForReplay)
  """
  available_for_replay: Boolean @strato_column(path : "graphql/broadcast/availableForReplay.Broadcast") @strato_op(value : Fetch)
  """
  Broadcast ID of the broadcast. This is to disambiguate between rest_id which might be a share token.
  
  Generated from Strato column: [graphql/broadcast/broadcastId.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/broadcastId)
  """
  broadcast_id: String @strato_column(path : "graphql/broadcast/broadcastId.Broadcast") @strato_op(value : Fetch)
  """
  Whether calling into the broadcast is disabled.
  
  Generated from Strato column: [graphql/broadcast/callInDisabled.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/callInDisabled)
  """
  call_in_disabled: Boolean @strato_column(path : "graphql/broadcast/callInDisabled.Broadcast") @strato_op(value : Fetch)
  """
  Rotation of the camera.
  
  Generated from Strato column: [graphql/broadcast/cameraRotation.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/cameraRotation)
  """
  camera_rotation: Int53 @strato_column(path : "graphql/broadcast/cameraRotation.Broadcast") @strato_op(value : Fetch)
  """
  The copyright violation details of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/copyrightViolation.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/copyrightViolation)
  """
  copyright_violation: BroadcastCopyrightViolation @strato_column(path : "graphql/broadcast/copyrightViolation.Broadcast") @strato_op(value : Fetch)
  """
  The edited replay details of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/editedReplay.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/editedReplay)
  """
  edited_replay: BroadcastEditedReplay @strato_column(path : "graphql/broadcast/editedReplay.Broadcast") @strato_op(value : Fetch)
  """
  The end time of the broadcast, measured in ms since the epoch.
  
  Generated from Strato column: [graphql/broadcast/endTime.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/endTime)
  """
  end_time: Int53 @strato_column(path : "graphql/broadcast/endTime.Broadcast") @strato_op(value : Fetch)
  """
  The heart themes of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/heartTheme.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/heartTheme)
  """
  heart_theme: [String!] @strato_column(path : "graphql/broadcast/heartTheme.Broadcast") @strato_op(value : Fetch)
  """
  The height of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/height.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/height)
  """
  height: Int53 @strato_column(path : "graphql/broadcast/height.Broadcast") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The image of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/imageUrl.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/imageUrl)
  """
  image_url: String @strato_column(path : "graphql/broadcast/imageUrl.Broadcast") @strato_op(value : Fetch)
  """
  The medium sized image of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/imageUrlMedium.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/imageUrlMedium)
  """
  image_url_medium: String @strato_column(path : "graphql/broadcast/imageUrlMedium.Broadcast") @strato_op(value : Fetch)
  """
  The small image of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/imageUrlSmall.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/imageUrlSmall)
  """
  image_url_small: String @strato_column(path : "graphql/broadcast/imageUrlSmall.Broadcast") @strato_op(value : Fetch)
  """
  Whether the broadcast is high latency.
  
  Generated from Strato column: [graphql/broadcast/isHighLatency.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/isHighLatency)
  """
  is_high_latency: Boolean @strato_column(path : "graphql/broadcast/isHighLatency.Broadcast") @strato_op(value : Fetch)
  """
  The location of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/location.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/location)
  """
  location: BroadcastLocation @strato_column(path : "graphql/broadcast/location.Broadcast") @strato_op(value : Fetch)
  """
  The media key the broadcast.
  
  Generated from Strato column: [graphql/broadcast/mediaKey.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/mediaKey)
  """
  media_key: String @strato_column(path : "graphql/broadcast/mediaKey.Broadcast") @strato_op(value : Fetch)
  """
  The moderator channel of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/moderatorChannel.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/moderatorChannel)
  """
  moderator_channel: String @strato_column(path : "graphql/broadcast/moderatorChannel.Broadcast") @strato_op(value : Fetch)
  """
  The broadcaster's Perisope user.
  
  Generated from Strato column: [graphql/broadcast/periscopeUser.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/periscopeUser)
  """
  periscope_user: PeriscopeUser @strato_column(path : "graphql/broadcast/periscopeUser.Broadcast") @strato_op(value : Fetch)
  """
  The time of last ping of the broadcast, measured in ms since the epoch.
  
  Generated from Strato column: [graphql/broadcast/pingTime.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/pingTime)
  """
  ping_time: Int53 @strato_column(path : "graphql/broadcast/pingTime.Broadcast") @strato_op(value : Fetch)
  """
  The pre-live slate of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/preLiveSlateUrl.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/preLiveSlateUrl)
  """
  pre_live_slate_url: String @strato_column(path : "graphql/broadcast/preLiveSlateUrl.Broadcast") @strato_op(value : Fetch)
  """
  Whether the broadcast has private chat.
  
  Generated from Strato column: [graphql/broadcast/privateChat.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/privateChat)
  """
  private_chat: Boolean @strato_column(path : "graphql/broadcast/privateChat.Broadcast") @strato_op(value : Fetch)
  """
  Whether the broadcast requires fine grain geoblocking.
  
  Generated from Strato column: [graphql/broadcast/requiresFineGrainGeoblocking.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/requiresFineGrainGeoblocking)
  """
  requires_fine_grain_geoblocking: Boolean @strato_column(path : "graphql/broadcast/requiresFineGrainGeoblocking.Broadcast") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  The scheduled start time of the broadcast, measured in ms since the epoch.
  
  Generated from Strato column: [graphql/broadcast/scheduledStartTime.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/scheduledStartTime)
  """
  scheduled_start_time: Int53 @strato_column(path : "graphql/broadcast/scheduledStartTime.Broadcast") @strato_op(value : Fetch)
  """
  The source of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/source.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/source)
  """
  source: BroadcastSource @strato_column(path : "graphql/broadcast/source.Broadcast") @strato_op(value : Fetch)
  """
  The start time of the broadcast, measured in ms since the epoch.
  
  Generated from Strato column: [graphql/broadcast/startTime.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/startTime)
  """
  start_time: Int53 @strato_column(path : "graphql/broadcast/startTime.Broadcast") @strato_op(value : Fetch)
  """
  The state of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/state.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/state)
  """
  state: BroadcastState @strato_column(path : "graphql/broadcast/state.Broadcast") @strato_op(value : Fetch)
  """
  Status message of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/status.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/status)
  """
  status: String @strato_column(path : "graphql/broadcast/status.Broadcast") @strato_op(value : Fetch)
  """
  The time the broadcast timed out, measured in ms since the epoch.
  
  Generated from Strato column: [graphql/broadcast/timedoutTime.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/timedoutTime)
  """
  timedout_time: Int53 @strato_column(path : "graphql/broadcast/timedoutTime.Broadcast") @strato_op(value : Fetch)
  """
  The number of watchers of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/totalWatched.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/totalWatched)
  """
  total_watched: Int53 @strato_column(path : "graphql/broadcast/totalWatched.Broadcast") @strato_op(value : Fetch)
  """
  The current number of watchers of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/totalWatching.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/totalWatching)
  """
  total_watching: Int53 @strato_column(path : "graphql/broadcast/totalWatching.Broadcast") @strato_op(value : Fetch)
  """
  The Tweet associated with the broadcast.
  
  Generated from Strato column: [graphql/broadcast/tweet.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/tweet)
  """
  tweet: Tweet @deprecated(reason : "migrated to tweet_results") @strato_column(path : "graphql/broadcast/tweet.Broadcast") @strato_op(value : Fetch)
  """
  Result field; The Tweet associated with the broadcast.
  
  Generated from Strato column: [graphql/broadcast/tweet.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/tweet)
  """
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null") @strato_column(path : "graphql/broadcast/tweet.Broadcast") @strato_op(value : Fetch)
  """
  Result field; The Tweet associated with the broadcast.
  
  Generated from Strato column: [graphql/broadcast/tweet.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/tweet)
  """
  tweet_results: TweetResults @strato_column(path : "graphql/broadcast/tweet.Broadcast") @strato_op(value : Fetch)
  """
  Whether the broadcast is unavailable on Periscope.
  
  Generated from Strato column: [graphql/broadcast/unavailableInPeriscope.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/unavailableInPeriscope)
  """
  unavailable_in_periscope: Boolean @strato_column(path : "graphql/broadcast/unavailableInPeriscope.Broadcast") @strato_op(value : Fetch)
  """
  The broadcaster's Twitter user.
  
  Generated from Strato column: [graphql/broadcast/user.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/user)
  """
  user: User @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/broadcast/user.Broadcast") @strato_op(value : Fetch)
  """
  Result field; The broadcaster's Twitter user.
  
  Generated from Strato column: [graphql/broadcast/user.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/user)
  """
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/broadcast/user.Broadcast") @strato_op(value : Fetch)
  """
  Result field; The broadcaster's Twitter user.
  
  Generated from Strato column: [graphql/broadcast/user.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/user)
  """
  user_results: UserResults @strato_column(path : "graphql/broadcast/user.Broadcast") @strato_op(value : Fetch)
  """
  The version of the broadcast, incremented every time the broadcast is updated.
  
  Generated from Strato column: [graphql/broadcast/version.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/version)
  """
  version: Int53 @strato_column(path : "graphql/broadcast/version.Broadcast") @strato_op(value : Fetch)
  """
  The width of the broadcast.
  
  Generated from Strato column: [graphql/broadcast/width.Broadcast](https://strato.twitter.biz/web/browse/Broadcast/graphql/broadcast/width)
  """
  width: Int53 @strato_column(path : "graphql/broadcast/width.Broadcast") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.strato.graphql.BroadcastCopyrightViolation`](http://go/sg.thrift/BroadcastCopyrightViolation)"
type BroadcastCopyrightViolation @thrift_type(name : "BroadcastCopyrightViolation", package : "com.twitter.strato.graphql") {
  "Whether the broadcaster is whitelisted for copyright violation."
  broadcaster_whitelisted: Boolean
  "The name of the copyright content."
  copyright_content_name: String
  "The name of the copyright copyright holder"
  copyright_holder_name: String
  "Whether there should be a copyright violation interstitial."
  interstitial: Boolean
  "Whether the copyright violation match has been accepted."
  match_accepted: Boolean
  "Whether the copyright violation match has been disputed"
  match_disputed: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.BroadcastEditedReplay`](http://go/sg.thrift/BroadcastEditedReplay)"
type BroadcastEditedReplay @thrift_type(name : "BroadcastEditedReplay", package : "com.twitter.strato.graphql") {
  "The updated offset start time of the broadcast in replay in seconds."
  start_time: Int53
  "The updated replay thumbnail in seconds."
  thumbnail_time: Float
  "Whether the title of the broadcast in replay has been edited."
  title_edited: Boolean
  "Whether editing the title of the broadcast in replay is disabled."
  title_editing_disabled: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.BroadcastLocation`](http://go/sg.thrift/BroadcastLocation)"
type BroadcastLocation @thrift_type(name : "BroadcastLocation", package : "com.twitter.strato.graphql") {
  "The city of the broadcast."
  city: String
  "The country of the broadcast."
  country: String
  "The ISO country code of the broadcast."
  country_code: String
  "The latitude of the broadcast."
  lat: Float
  "The longitude of the broadcast."
  lng: Float
  "The country state of the broadcast."
  state: String
}

"Generated from type: [`com.twitter.periscope.api.BrowseTopicsResponse`](http://go/sg.thrift/BrowseTopicsResponse)"
type BrowseTopicsResponse @thrift_type(name : "BrowseTopicsResponse", package : "com.twitter.periscope.api") {
  categories: [TopicCategory!]
}

"Generated from Strato space: `Business`"
type Business @strato_space(name : "Business") {
  """
  The hidden status of a business
  
  Generated from Strato column: [graphql/bizprofiles/hidden.Business](https://strato.twitter.biz/web/browse/Business/graphql/bizprofiles/hidden)
  """
  hidden: Boolean @strato_column(path : "graphql/bizprofiles/hidden.Business") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The name of a business
  
  Generated from Strato column: [graphql/bizprofiles/name.Business](https://strato.twitter.biz/web/browse/Business/graphql/bizprofiles/name)
  """
  name: String @strato_column(path : "graphql/bizprofiles/name.Business") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.BusinessAddressResponse`](http://go/sg.thrift/BusinessAddressResponse)"
type BusinessAddressResponse @thrift_type(name : "BusinessAddressResponse", package : "com.twitter.bizprofiles.graphql") {
  address_line1: String
  administrative_area: String
  city: String
  country: String
  formatted_address: String
  geo: GeoPoint
  postal_code: String
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessCategory`](http://go/sg.thrift/BusinessCategory)"
type BusinessCategory @thrift_type(name : "BusinessCategory", package : "com.twitter.bizprofiles.manhattan") {
  display: Boolean
  id: Int
  name: String
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessContact`](http://go/sg.thrift/BusinessContact)"
type BusinessContact @thrift_type(name : "BusinessContact", package : "com.twitter.bizprofiles.manhattan") {
  email: BusinessContactEmail
  phone: BusinessContactPhone
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessContactEmail`](http://go/sg.thrift/BusinessContactEmail)"
type BusinessContactEmail @thrift_type(name : "BusinessContactEmail", package : "com.twitter.bizprofiles.manhattan") {
  email_address: String!
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessContactPhone`](http://go/sg.thrift/BusinessContactPhone)"
type BusinessContactPhone @thrift_type(name : "BusinessContactPhone", package : "com.twitter.bizprofiles.manhattan") {
  "International calling prefix"
  country_code: String
  "2 digits ISO code of the country"
  country_iso_code: String
  number: String
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimesRegular`](http://go/sg.thrift/BusinessOpenTimesRegular)"
type BusinessOpenTimesRegular @thrift_type(name : "BusinessOpenTimesRegular", package : "com.twitter.bizprofiles.manhattan") {
  slots: [BusinessOpenTimesRegularSlot!]
  weekday: Weekday
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimesRegularSlot`](http://go/sg.thrift/BusinessOpenTimesRegularSlot)"
type BusinessOpenTimesRegularSlot @thrift_type(name : "BusinessOpenTimesRegularSlot", package : "com.twitter.bizprofiles.manhattan") {
  close: HourMinute
  open: HourMinute
}

"Generated from type: [`com.twitter.bizprofiles.graphql.BusinessOpenTimesResponse`](http://go/sg.thrift/BusinessOpenTimesResponse)"
type BusinessOpenTimesResponse @thrift_type(name : "BusinessOpenTimesResponse", package : "com.twitter.bizprofiles.graphql") {
  closes: OpenCloseTimeNext
  is_open: Boolean
  open_times_type: BusinessOpenTimesType
  opens: OpenCloseTimeNext
  regular: [BusinessOpenTimesRegular!]
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessTimezone`](http://go/sg.thrift/BusinessTimezone)"
type BusinessTimezone @thrift_type(name : "BusinessTimezone", package : "com.twitter.bizprofiles.manhattan") {
  name: String!
}

"Generated from type: [`com.twitter.moments.model.camera.Color`](http://go/sg.thrift/Color)"
type CameraColor @thrift_type(name : "Color", package : "com.twitter.moments.model.camera") {
  blue: Int!
  green: Int!
  opacity: Int!
  red: Int!
}

type CameraMoment {
  moment: Moment!
  "Deprecated(Replaced by `moment`; Use moment { rest_id } instead.)"
  moment_id: NumericString! @deprecated(reason : "Replaced by `moment`; Use moment { rest_id } instead.")
  original_post_time_ms: NumericString
  palette: CameraPalette
  tweets: [Tweet!] @deprecated(reason : "migrated to tweets_results")
  tweets_result: [TweetResult] @deprecated(reason : "migrated to tweets_results; field will always be null")
  tweets_results: [TweetResults!]
}

"Generated from type: [`com.twitter.moments.model.camera.Palette`](http://go/sg.thrift/Palette)"
type CameraPalette @thrift_type(name : "Palette", package : "com.twitter.moments.model.camera") {
  badge_color: CameraColor
  chyron_color: CameraColor
  id: String!
  indicator_active_color: CameraColor
}

"Generated from Strato space: `Campaign`"
type Campaign @strato_space(name : "Campaign") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.cearecommendations.CampaignFollower`](http://go/sg.thrift/CampaignFollower)"
type CampaignFollower @thrift_type(name : "CampaignFollower", package : "com.twitter.cearecommendations") {
  similar_to_user: User! @deprecated(reason : "migrated to similar_to_user_results")
  similar_to_user_result: UserResult @deprecated(reason : "migrated to similar_to_user_results; field will always be null")
  similar_to_user_results: UserResults!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

type CampaignSlice {
  items: [AdCampaign!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.ceatweetlookup.CampaignTweetLookupResponse`](http://go/sg.thrift/CampaignTweetLookupResponse)"
type CampaignTweetLookupResponse @thrift_type(name : "CampaignTweetLookupResponse", package : "com.twitter.ceatweetlookup") {
  scheduled_tweets: [ScheduledTweet!]
  tweets: [Tweet!] @deprecated(reason : "migrated to tweets_results")
  tweets_result: [TweetResult] @deprecated(reason : "migrated to tweets_results; field will always be null")
  tweets_results: [TweetResults!]
}

"Generated from type: [`com.twitter.ceatweetsearch.CampaignTweetSearchSlice`](http://go/sg.thrift/CampaignTweetSearchSlice)"
type CampaignTweetSearchSlice @thrift_type(name : "CampaignTweetSearchSlice", package : "com.twitter.ceatweetsearch") {
  items: [CampaignTweetSearchSliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [CampaignTweetSearchSliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [CampaignTweetSearchSliceItemResults]!
  slice_info: SliceInfo
}

"Generated from Strato space: `CampaignView`"
type CampaignView @strato_space(name : "CampaignView") {
  "A globally unique identifier"
  id: ID!
  """
  Fetch metrics for a Campaign View
  
  Generated from Strato column: [graphql/ads/hubble/campaign-view/metricsTotal.CampaignView](https://strato.twitter.biz/web/browse/CampaignView/graphql/ads/hubble/campaign-view/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/campaign-view/metricsTotal.CampaignView") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: HubbleCampaignViewKey!
  """
  Get filtered Campaigns associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/campaign-view/slice.CampaignView](https://strato.twitter.biz/web/browse/CampaignView/graphql/ads/hubble/campaign-view/slice)
  """
  slice(cursor: String, next: Int): CampaignSlice @development @strato_column(path : "graphql/ads/hubble/campaign-view/slice.CampaignView") @strato_op(value : Fetch)
}

"Generated from Strato space: `Card`"
type Card @strato_space(name : "Card") {
  """
  Returns the ads card label associated with Card.
  
  Generated from Strato column: [graphql/customer-experience-apps/adsLabel.Card](https://strato.twitter.biz/web/browse/Card/graphql/customer-experience-apps/adsLabel)
  """
  ads_label: String @strato_column(path : "graphql/customer-experience-apps/adsLabel.Card") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  LegacyCard support; Returns a REST Api shaped Card response for a given card uri
  Access policy: all requests will be subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/weaverbird/legacy.Card](https://strato.twitter.biz/web/browse/Card/graphql/weaverbird/legacy)
  """
  legacy: LegacyCard @strato_column(path : "graphql/weaverbird/legacy.Card") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.AppRatingsElement`](http://go/sg.thrift/AppRatingsElement)"
type CardAppRatingsElement @thrift_type(name : "AppRatingsElement", package : "com.twitter.strato.graphql.unified_cards") {
  count: NumericString
  star: Float
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.AppStoreData`](http://go/sg.thrift/AppStoreData)"
type CardAppStoreData @thrift_type(name : "AppStoreData", package : "com.twitter.strato.graphql.unified_cards") {
  app_icon_media: ApiMedia
  category: CardDirectionalStringElement
  country_code: String
  description: CardDirectionalStringElement
  has_in_app_ads: Boolean
  has_in_app_purchases: Boolean
  id: String!
  is_editors_choice: Boolean
  is_free: Boolean
  num_installs: NumericString
  ratings: CardAppRatingsElement
  size_bytes: NumericString
  title: CardDirectionalStringElement
  type: CardAppType!
  url: String
  url_resolved: String
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.AppStoreDestination`](http://go/sg.thrift/AppStoreDestination)"
type CardAppStoreDestination @thrift_type(name : "AppStoreDestination", package : "com.twitter.strato.graphql.unified_cards") {
  app_store_data: [CardAppStoreData!]!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.AppStoreDetailsComponent`](http://go/sg.thrift/AppStoreDetailsComponent)"
type CardAppStoreDetailsComponent @thrift_type(name : "AppStoreDetailsComponent", package : "com.twitter.strato.graphql.unified_cards") {
  app_store_data: [CardAppStoreData!]!
  destination_obj: CardDestination
  use_dominant_color: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.AppStoreWithDockedMediaDestination`](http://go/sg.thrift/AppStoreWithDockedMediaDestination)"
type CardAppStoreWithDockedMediaDestination @thrift_type(name : "AppStoreWithDockedMediaDestination", package : "com.twitter.strato.graphql.unified_cards") {
  app_store_data: [CardAppStoreData!]!
  media: ApiMedia!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.BrowserDestination`](http://go/sg.thrift/BrowserDestination)"
type CardBrowserDestination @thrift_type(name : "BrowserDestination", package : "com.twitter.strato.graphql.unified_cards") {
  url_data: CardUrlElement!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.BrowserWithDockedMediaDestination`](http://go/sg.thrift/BrowserWithDockedMediaDestination)"
type CardBrowserWithDockedMediaDestination @thrift_type(name : "BrowserWithDockedMediaDestination", package : "com.twitter.strato.graphql.unified_cards") {
  media: ApiMedia!
  url_data: CardUrlElement!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ButtonElement`](http://go/sg.thrift/ButtonElement)"
type CardButtonElement @thrift_type(name : "ButtonElement", package : "com.twitter.strato.graphql.unified_cards") {
  action: CardButtonCta
  button_type: CardButtonElementType!
  destination_obj: CardDestination
  icon_type: CardIconType
  style: CardButtonStyle
  text: CardDirectionalStringElement
  use_dominant_color: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ButtonGroupComponent`](http://go/sg.thrift/ButtonGroupComponent)"
type CardButtonGroupComponent @thrift_type(name : "ButtonGroupComponent", package : "com.twitter.strato.graphql.unified_cards") {
  buttons: [CardButtonElement!]!
  use_dominant_color: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.DetailsComponent`](http://go/sg.thrift/DetailsComponent)"
type CardDetailsComponent @thrift_type(name : "DetailsComponent", package : "com.twitter.strato.graphql.unified_cards") {
  destination_obj: CardDestination
  subtitle: CardDirectionalStringElement!
  title: CardDirectionalStringElement!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.DirectionalStringElement`](http://go/sg.thrift/DirectionalStringElement)"
type CardDirectionalStringElement @thrift_type(name : "DirectionalStringElement", package : "com.twitter.strato.graphql.unified_cards") {
  content: String!
  is_rtl: Boolean!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.DisplayOptions`](http://go/sg.thrift/DisplayOptions)"
type CardDisplayOptions @thrift_type(name : "DisplayOptions", package : "com.twitter.strato.graphql.unified_cards") {
  hide_border: Boolean
  hide_bottom_padding: Boolean
  should_auto_advance: Boolean
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ExperimentSignals`](http://go/sg.thrift/ExperimentSignals)"
type CardExperimentSignals @thrift_type(name : "ExperimentSignals", package : "com.twitter.strato.graphql.unified_cards") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.MediaComponent`](http://go/sg.thrift/MediaComponent)"
type CardMediaComponent @thrift_type(name : "MediaComponent", package : "com.twitter.strato.graphql.unified_cards") {
  destination_obj: CardDestination
  media: ApiMedia!
  media_button: CardButtonElement
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.MediaWithDetailsHorizontal`](http://go/sg.thrift/MediaWithDetailsHorizontal)"
type CardMediaWithDetailsHorizontal @thrift_type(name : "MediaWithDetailsHorizontal", package : "com.twitter.strato.graphql.unified_cards") {
  destination_obj: CardDestination
  media: ApiMedia!
  topic_detail: CardTopicDetail
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ModelExplorerLayout`](http://go/sg.thrift/ModelExplorerLayout)"
type CardModelExplorerLayout @thrift_type(name : "ModelExplorerLayout", package : "com.twitter.strato.graphql.unified_cards") {
  first_slide: CardVerticalStackLayout!
  full_slides: [CardVerticalStackLayout!]
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.PlayableDestination`](http://go/sg.thrift/PlayableDestination)"
type CardPlayableDestination @thrift_type(name : "PlayableDestination", package : "com.twitter.strato.graphql.unified_cards") {
  app_store_data: [CardAppStoreData!]!
  button_destination: CardPlayableSecondaryDestination
  url_data: CardUrlElement
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ProfileComponent`](http://go/sg.thrift/ProfileComponent)"
type CardProfileComponent @thrift_type(name : "ProfileComponent", package : "com.twitter.strato.graphql.unified_cards") {
  destination_obj: CardDestination
  social_context: String
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.SwipeableLayout`](http://go/sg.thrift/SwipeableLayout)"
type CardSwipeableLayout @thrift_type(name : "SwipeableLayout", package : "com.twitter.strato.graphql.unified_cards") {
  first_slide: CardVerticalStackLayout!
  full_slides: [CardVerticalStackLayout!]
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.SwipeableMediaComponent`](http://go/sg.thrift/SwipeableMediaComponent)"
type CardSwipeableMediaComponent @thrift_type(name : "SwipeableMediaComponent", package : "com.twitter.strato.graphql.unified_cards") {
  first_media: CardMediaComponent!
  full_media_list: [CardMediaComponent!]
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.TopicDetail`](http://go/sg.thrift/TopicDetail)"
type CardTopicDetail @thrift_type(name : "TopicDetail", package : "com.twitter.strato.graphql.unified_cards") {
  subtitle: CardDirectionalStringElement
  title: CardDirectionalStringElement!
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.TweetComposerDestination`](http://go/sg.thrift/TweetComposerDestination)"
type CardTweetComposerDestination @thrift_type(name : "TweetComposerDestination", package : "com.twitter.strato.graphql.unified_cards") {
  is_prefix: Boolean
  media: ApiMedia
  text: String
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.TwitterListDetailsComponent`](http://go/sg.thrift/TwitterListDetailsComponent)"
type CardTwitterListDetailsComponent @thrift_type(name : "TwitterListDetailsComponent", package : "com.twitter.strato.graphql.unified_cards") {
  destination_obj: CardDestination
  member_count: Int
  name: CardDirectionalStringElement
  subscriber_count: Int
  user: User @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.UrlElement`](http://go/sg.thrift/UrlElement)"
type CardUrlElement @thrift_type(name : "UrlElement", package : "com.twitter.strato.graphql.unified_cards") {
  full_url: String!
  vanity_url: String
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.VerticalStackLayout`](http://go/sg.thrift/VerticalStackLayout)"
type CardVerticalStackLayout @thrift_type(name : "VerticalStackLayout", package : "com.twitter.strato.graphql.unified_cards") {
  components: [CardComponent!]!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CatalogAuthorizationError`](http://go/sg.thrift/CatalogAuthorizationError)"
type CatalogAuthorizationError @thrift_type(name : "CatalogAuthorizationError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CatalogCoreData`](http://go/sg.thrift/CatalogCoreData)"
type CatalogCoreData @thrift_type(name : "CatalogCoreData", package : "com.twitter.commerce.catalog.api.graphql") {
  author: User! @deprecated(reason : "migrated to author_results")
  author_result: UserResult @deprecated(reason : "migrated to author_results; field will always be null")
  author_results: UserResults!
  catalog_name: String!
  catalog_type: CommerceCatalogType!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CatalogNameInvalidError`](http://go/sg.thrift/CatalogNameInvalidError)"
type CatalogNameInvalidError @thrift_type(name : "CatalogNameInvalidError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from Strato space: `Claim`"
type Claim @strato_space(name : "Claim") {
  """
  Returns expiresAt for the fetched claim.
  
  Generated from Strato column: [graphql/subscription-services/expiresAt.Claim](https://strato.twitter.biz/web/browse/Claim/graphql/subscription-services/expiresAt)
  """
  expires_at: NumericString @strato_column(path : "graphql/subscription-services/expiresAt.Claim") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns Principal for the fetched claim.
  
  Generated from Strato column: [graphql/subscription-services/principal.Claim](https://strato.twitter.biz/web/browse/Claim/graphql/subscription-services/principal)
  """
  principal: Principal @strato_column(path : "graphql/subscription-services/principal.Claim") @strato_op(value : Fetch)
  """
  Returns SubscriptionProduct for the fetched claim.
  
  Generated from Strato column: [graphql/subscription-services/product.Claim](https://strato.twitter.biz/web/browse/Claim/graphql/subscription-services/product)
  """
  product: SubscriptionProduct @strato_column(path : "graphql/subscription-services/product.Claim") @strato_op(value : Fetch)
  """
  Returns resources for the fetched claim.
  
  Generated from Strato column: [graphql/subscription-services/resources.Claim](https://strato.twitter.biz/web/browse/Claim/graphql/subscription-services/resources)
  """
  resources: [ProductResource!] @strato_column(path : "graphql/subscription-services/resources.Claim") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.timelines.render.ClickTrackingInfo`](http://go/sg.thrift/ClickTrackingInfo)"
type ClickTrackingInfo @thrift_type(name : "ClickTrackingInfo", package : "com.twitter.timelines.render") {
  url_override: String
  url_override_type: UrlOverrideType
  url_params: [UrlParams!]!
}

"Generated from type: [`com.twitter.strato.graphql.ClientEducationFlagWithTimestamp`](http://go/sg.thrift/ClientEducationFlagWithTimestamp)"
type ClientEducationFlagWithTimestamp @thrift_type(name : "ClientEducationFlagWithTimestamp", package : "com.twitter.strato.graphql") {
  flag: ClientEducationFlagType!
  timestamp: Int53!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsMetadata`](http://go/sg.thrift/CoinsMetadata)"
type CoinsMetadata @thrift_type(name : "CoinsMetadata", package : "com.twitter.audiencerewards.productcatalog") {
  coin_value: Int
  thumbnail_url: String
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsProduct`](http://go/sg.thrift/CoinsProduct)"
type CoinsProduct @thrift_type(name : "CoinsProduct", package : "com.twitter.audiencerewards.productcatalog") {
  assets: [CoinsProductAsset!]
  description: String!
  id: String!
  name: String!
  price: Int!
  status: CoinsProductStatus!
  "Deprecated( read from assets instead)"
  thumbnail_url: String @deprecated(reason : "read from assets instead")
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsProductsSlice`](http://go/sg.thrift/CoinsProductsSlice)"
type CoinsProductsSlice @thrift_type(name : "CoinsProductsSlice", package : "com.twitter.audiencerewards.productcatalog") {
  items: [CoinsProduct!]!
  slice_info: SliceInfo!
}

"""
List of collaborators invited on a tweet

Generated from type: [`com.twitter.strato.graphql.CollabInvitation`](http://go/sg.thrift/CollabInvitation)
"""
type CollabInvitation @thrift_type(name : "CollabInvitation", package : "com.twitter.strato.graphql") {
  invited_collaborators: [InvitedCollaborator!]!
}

"""
List of collaborators accepted on a tweet

Generated from type: [`com.twitter.strato.graphql.CollabTweet`](http://go/sg.thrift/CollabTweet)
"""
type CollabTweet @thrift_type(name : "CollabTweet", package : "com.twitter.strato.graphql") {
  collaborators: [User!]! @deprecated(reason : "migrated to collaborators_results")
  collaborators_result: [UserResult] @deprecated(reason : "migrated to collaborators_results; field will always be null")
  collaborators_results: [UserResults!]!
}

type ColumnQuerySlice {
  items: [AdvertiserMetricColumn!]!
  slice_info: SliceInfo!
}

"Generated from Strato space: `CommerceCatalog`"
type CommerceCatalog @strato_space(name : "CommerceCatalog") {
  """
  Fetches catalog data from manhattan and transforms it into CatalogCoreData
  
  Generated from Strato column: [graphql/commerce/catalog/operations/catalogCoreData.CommerceCatalog](https://strato.twitter.biz/web/browse/CommerceCatalog/graphql/commerce/catalog/operations/catalogCoreData)
  """
  catalog_core_data: CatalogCoreData @strato_column(path : "graphql/commerce/catalog/operations/catalogCoreData.CommerceCatalog") @strato_op(value : Fetch)
  """
  Fetches a Commerce Product from manhattan for a given catalog id if the user owns the catalog
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductByProductId.CommerceCatalog](https://strato.twitter.biz/web/browse/CommerceCatalog/graphql/commerce/catalog/operations/commerceProductByProductId)
  """
  commerce_product_by_product_id(product_id: String!): CommerceProduct @deprecated(reason : "migrated to commerce_product_by_product_id_results") @strato_column(path : "graphql/commerce/catalog/operations/commerceProductByProductId.CommerceCatalog") @strato_op(value : Fetch)
  """
  Result field; Fetches a Commerce Product from manhattan for a given catalog id if the user owns the catalog
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductByProductId.CommerceCatalog](https://strato.twitter.biz/web/browse/CommerceCatalog/graphql/commerce/catalog/operations/commerceProductByProductId)
  """
  commerce_product_by_product_id_results(product_id: String!): CommerceProductResults @strato_column(path : "graphql/commerce/catalog/operations/commerceProductByProductId.CommerceCatalog") @strato_op(value : Fetch)
  """
  Fetches Commerce Product Sets from manhattan for a given catalog id if the user owns the catalog
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductSets.CommerceCatalog](https://strato.twitter.biz/web/browse/CommerceCatalog/graphql/commerce/catalog/operations/commerceProductSets)
  """
  commerce_product_sets: [CommerceProductSet!] @strato_column(path : "graphql/commerce/catalog/operations/commerceProductSets.CommerceCatalog") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Fetches Shopify metadata for a given commerce catalog
  
  Generated from Strato column: [graphql/commerce/shopify/shopifyMetadata.CommerceCatalog](https://strato.twitter.biz/web/browse/CommerceCatalog/graphql/commerce/shopify/shopifyMetadata)
  """
  shopify_metadata: ShopifyMetadata @development @strato_column(path : "graphql/commerce/shopify/shopifyMetadata.CommerceCatalog") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceItemSlice`](http://go/sg.thrift/CommerceItemSlice)"
type CommerceItemSlice @thrift_type(name : "CommerceItemSlice", package : "com.twitter.commerce.catalog.api.graphql") {
  items: [CommerceItem!]! @deprecated(reason : "migrated to items_results")
  items_results: [CommerceItemResults]!
  slice_info: SliceInfo!
}

"Generated from Strato space: `CommerceProduct`"
type CommerceProduct @strato_space(name : "CommerceProduct") {
  "A globally unique identifier"
  id: ID!
  """
  Fetches ProductCoreData from manhattan and transforms it into an common.ProductCoreData
  
  Generated from Strato column: [graphql/commerce/catalog/operations/productCoreData.CommerceProduct](https://strato.twitter.biz/web/browse/CommerceProduct/graphql/commerce/catalog/operations/productCoreData)
  """
  product_core_data: ProductCoreData @strato_column(path : "graphql/commerce/catalog/operations/productCoreData.CommerceProduct") @strato_op(value : Fetch)
  """
  Returns the publicly available validity of the product based on various signals (contexts). Note some signals may not be public, e.g. ad quality silent rejection
  
  Generated from Strato column: [graphql/commerce/catalog/validity/productValidity.CommerceProduct](https://strato.twitter.biz/web/browse/CommerceProduct/graphql/commerce/catalog/validity/productValidity)
  """
  product_validity: ProductValidity @strato_column(path : "graphql/commerce/catalog/validity/productValidity.CommerceProduct") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `CommerceProductGroup`"
type CommerceProductGroup @strato_space(name : "CommerceProductGroup") {
  """
  Fetches Commerce Products from manhattan for a given product group key
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProducts.CommerceProductGroup](https://strato.twitter.biz/web/browse/CommerceProductGroup/graphql/commerce/catalog/operations/commerceProducts)
  """
  commerce_products(limit: Int): [CommerceProduct!] @deprecated(reason : "migrated to commerce_products_results") @strato_column(path : "graphql/commerce/catalog/operations/commerceProducts.CommerceProductGroup") @strato_op(value : Fetch)
  """
  Result field; Fetches Commerce Products from manhattan for a given product group key
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProducts.CommerceProductGroup](https://strato.twitter.biz/web/browse/CommerceProductGroup/graphql/commerce/catalog/operations/commerceProducts)
  """
  commerce_products_results(limit: Int): [CommerceProductResults!] @strato_column(path : "graphql/commerce/catalog/operations/commerceProducts.CommerceProductGroup") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Fetches product group core data from manhattan and transforms it into ProductGroupCoreData
  
  Generated from Strato column: [graphql/commerce/catalog/operations/productGroupCoreData.CommerceProductGroup](https://strato.twitter.biz/web/browse/CommerceProductGroup/graphql/commerce/catalog/operations/productGroupCoreData)
  """
  product_group_core_data: ProductGroupCoreData @strato_column(path : "graphql/commerce/catalog/operations/productGroupCoreData.CommerceProductGroup") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `CommerceProductGroupResults`"
type CommerceProductGroupResults @strato_space(name : "CommerceProductGroupResults") {
  "Generated from Strato column: [graphql/results/_result.CommerceProductGroup](https://strato.twitter.biz/web/browse/CommerceProductGroup/graphql/results/_result)"
  result: CommerceProductGroupResult @development @strato_column(path : "graphql/results/_result.CommerceProductGroup") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceProductGroupUnavailable`](http://go/sg.thrift/CommerceProductGroupUnavailable)"
type CommerceProductGroupUnavailable @thrift_type(name : "CommerceProductGroupUnavailable", package : "com.twitter.commerce.catalog.api.graphql") {
  unavailable_reason: CommerceProductGroupUnavailableReason!
}

"Generated from Strato space: `CommerceProductResults`"
type CommerceProductResults @strato_space(name : "CommerceProductResults") {
  "Generated from Strato column: [graphql/results/_result.CommerceProduct](https://strato.twitter.biz/web/browse/CommerceProduct/graphql/results/_result)"
  result: CommerceProductResult @development @strato_column(path : "graphql/results/_result.CommerceProduct") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from Strato space: `CommerceProductSet`"
type CommerceProductSet @strato_space(name : "CommerceProductSet") {
  """
  Returns commerce items slice in a product set
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceItemsSlice.CommerceProductSet](https://strato.twitter.biz/web/browse/CommerceProductSet/graphql/commerce/catalog/operations/commerceItemsSlice)
  """
  commerce_items_slice(cursor: String, limit: Int): CommerceItemSlice @strato_column(path : "graphql/commerce/catalog/operations/commerceItemsSlice.CommerceProductSet") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Fetches product set core data from manhattan and transforms it into api.graphql.ProductSetCoreData
  
  Generated from Strato column: [graphql/commerce/catalog/operations/productSetCoreData.CommerceProductSet](https://strato.twitter.biz/web/browse/CommerceProductSet/graphql/commerce/catalog/operations/productSetCoreData)
  """
  product_set_core_data: ProductSetCoreData @strato_column(path : "graphql/commerce/catalog/operations/productSetCoreData.CommerceProductSet") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `CommerceProductSetDrop`"
type CommerceProductSetDrop @strato_space(name : "CommerceProductSetDrop") {
  """
  Fetch CommerceItems Associated with a Drop
  
  Generated from Strato column: [graphql/commerce/drops/commerceItemSlice.CommerceProductSetDrop](https://strato.twitter.biz/web/browse/CommerceProductSetDrop/graphql/commerce/drops/commerceItemSlice)
  """
  commerce_item_slice(cursor: String, limit: Int): CommerceItemSlice @development @strato_column(path : "graphql/commerce/drops/commerceItemSlice.CommerceProductSetDrop") @strato_op(value : Fetch)
  """
  Performs Read, and Delete Operations on Product Set Drops.
  
  Generated from Strato column: [graphql/commerce/drops/coreData.CommerceProductSetDrop](https://strato.twitter.biz/web/browse/CommerceProductSetDrop/graphql/commerce/drops/coreData)
  """
  core_data: ProductSetDropData @development @strato_column(path : "graphql/commerce/drops/coreData.CommerceProductSetDrop") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Number of subscribers for the given drop
  
  Generated from Strato column: [graphql/commerce/drops/numberOfSubscribers.CommerceProductSetDrop](https://strato.twitter.biz/web/browse/CommerceProductSetDrop/graphql/commerce/drops/numberOfSubscribers)
  """
  number_of_subscribers: Int53 @development @strato_column(path : "graphql/commerce/drops/numberOfSubscribers.CommerceProductSetDrop") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Returns whether the viewing user is subscribed to the current drop
  
  Generated from Strato column: [graphql/commerce/drops/viewingUserSubscriptionConfig.CommerceProductSetDrop](https://strato.twitter.biz/web/browse/CommerceProductSetDrop/graphql/commerce/drops/viewingUserSubscriptionConfig)
  """
  viewing_user_subscription_config: UserDropSubscriptionConfig @development @strato_column(path : "graphql/commerce/drops/viewingUserSubscriptionConfig.CommerceProductSetDrop") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceProductUnavailable`](http://go/sg.thrift/CommerceProductUnavailable)"
type CommerceProductUnavailable @thrift_type(name : "CommerceProductUnavailable", package : "com.twitter.commerce.catalog.api.graphql") {
  unavailable_reason: CommerceProductUnavailableReason!
}

"Generated from Strato space: `Community`"
type Community @strato_space(name : "Community") {
  """
  Timeline of information about the community.
  
  Generated from Strato column: [graphql/communities/aboutTimeline.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/aboutTimeline)
  """
  about_timeline: Timeline! @development @strato_column(path : "graphql/communities/aboutTimeline.Community") @strato_op(value : Fetch)
  """
  Access mode of the community.
  
  Generated from Strato column: [graphql/communities/access.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/access)
  """
  access: CommunityAccess! @deprecated(reason : "Replaced by joinPolicy.Community and invitesPolicy.Community columns.") @strato_column(path : "graphql/communities/access.Community") @strato_op(value : Fetch)
  """
  Collection of actions' availability in the community, for the viewer.
  
  Generated from Strato column: [graphql/communities/actions.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/actions)
  """
  actions: CommunityActions! @strato_column(path : "graphql/communities/actions.Community") @strato_op(value : Fetch)
  """
  Community admin.
  
  Generated from Strato column: [graphql/communities/admin.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/admin)
  """
  admin: User! @deprecated(reason : "migrated to admin_results") @strato_column(path : "graphql/communities/admin.Community") @strato_op(value : Fetch)
  """
  Result field; Community admin.
  
  Generated from Strato column: [graphql/communities/admin.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/admin)
  """
  admin_result: UserResult @deprecated(reason : "migrated to admin_results; field will always be null") @strato_column(path : "graphql/communities/admin.Community") @strato_op(value : Fetch)
  """
  Result field; Community admin.
  
  Generated from Strato column: [graphql/communities/admin.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/admin)
  """
  admin_results: UserResults! @strato_column(path : "graphql/communities/admin.Community") @strato_op(value : Fetch)
  """
  Timeline of tweets in the community in reverse chronological order.
  
  Generated from Strato column: [graphql/communities/communityTimeline.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/communityTimeline)
  """
  community_timeline: Timeline! @strato_column(path : "graphql/communities/communityTimeline.Community") @strato_op(value : Fetch)
  """
  Community creation time.
  
  Generated from Strato column: [graphql/communities/createdAt.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/createdAt)
  """
  created_at: Int53! @strato_column(path : "graphql/communities/createdAt.Community") @strato_op(value : Fetch)
  """
  Community creator.
  
  Generated from Strato column: [graphql/communities/creator.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/creator)
  """
  creator: User! @deprecated(reason : "migrated to creator_results") @strato_column(path : "graphql/communities/creator.Community") @strato_op(value : Fetch)
  """
  Result field; Community creator.
  
  Generated from Strato column: [graphql/communities/creator.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/creator)
  """
  creator_result: UserResult @deprecated(reason : "migrated to creator_results; field will always be null") @strato_column(path : "graphql/communities/creator.Community") @strato_op(value : Fetch)
  """
  Result field; Community creator.
  
  Generated from Strato column: [graphql/communities/creator.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/creator)
  """
  creator_results: UserResults! @strato_column(path : "graphql/communities/creator.Community") @strato_op(value : Fetch)
  """
  Community custom banner media.
  
  Generated from Strato column: [graphql/communities/customBannerMedia.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/customBannerMedia)
  """
  custom_banner_media: ApiMedia @strato_column(path : "graphql/communities/customBannerMedia.Community") @strato_op(value : Fetch)
  """
  Community custom theme.
  
  Generated from Strato column: [graphql/communities/customTheme.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/customTheme)
  """
  custom_theme: CommunityTheme @strato_column(path : "graphql/communities/customTheme.Community") @strato_op(value : Fetch)
  """
  Community default banner media.
  
  Generated from Strato column: [graphql/communities/defaultBannerMedia.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/defaultBannerMedia)
  """
  default_banner_media: ApiMedia! @strato_column(path : "graphql/communities/defaultBannerMedia.Community") @strato_op(value : Fetch)
  """
  Community default theme.
  
  Generated from Strato column: [graphql/communities/defaultTheme.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/defaultTheme)
  """
  default_theme: CommunityTheme! @strato_column(path : "graphql/communities/defaultTheme.Community") @strato_op(value : Fetch)
  """
  Community description.
  
  Generated from Strato column: [graphql/communities/description.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/description)
  """
  description: String @strato_column(path : "graphql/communities/description.Community") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Invites policy of the community.
  
  Generated from Strato column: [graphql/communities/invitesPolicy.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/invitesPolicy)
  """
  invites_policy: CommunityInvitesPolicy! @strato_column(path : "graphql/communities/invitesPolicy.Community") @strato_op(value : Fetch)
  """
  CommunityInvites of the community, if available to the viewer.
  
  Generated from Strato column: [graphql/communities/invitesResult.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/invitesResult)
  """
  invites_result: CommunityInvitesResult! @strato_column(path : "graphql/communities/invitesResult.Community") @strato_op(value : Fetch)
  """
  Whether or not the viewer is a member of the community.
  
  Generated from Strato column: [graphql/communities/isMember.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/isMember)
  """
  is_member: Boolean @deprecated(reason : "Superseded by Community.viewer_relationship.role.") @strato_column(path : "graphql/communities/isMember.Community") @strato_op(value : Fetch)
  """
  Join policy of the community.
  
  Generated from Strato column: [graphql/communities/joinPolicy.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/joinPolicy)
  """
  join_policy: CommunityJoinPolicy! @strato_column(path : "graphql/communities/joinPolicy.Community") @strato_op(value : Fetch)
  """
  CommunityJoinRequests of the community, if available to the viewer.
  
  Generated from Strato column: [graphql/communities/joinRequestsResult.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/joinRequestsResult)
  """
  join_requests_result: CommunityJoinRequestsResult! @strato_column(path : "graphql/communities/joinRequestsResult.Community") @strato_op(value : Fetch)
  """
  Community member count.
  
  Generated from Strato column: [graphql/communities/memberCount.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/memberCount)
  """
  member_count: Int! @strato_column(path : "graphql/communities/memberCount.Community") @strato_op(value : Fetch)
  """
  User typeahead search for UserCommunityRelationships of members in the community.
  
  Generated from Strato column: [graphql/communities/memberRelationshipTypeahead.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/memberRelationshipTypeahead)
  """
  member_relationship_typeahead(prefix: String!): [UserCommunityRelationship!]! @strato_column(path : "graphql/communities/memberRelationshipTypeahead.Community") @strato_op(value : Fetch)
  """
  Members of the community to render within a facepile.
  
  Generated from Strato column: [graphql/communities/membersFacepile.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/membersFacepile)
  """
  members_facepile: [User!]! @deprecated(reason : "migrated to members_facepile_results") @strato_column(path : "graphql/communities/membersFacepile.Community") @strato_op(value : Fetch)
  """
  Result field; Members of the community to render within a facepile.
  
  Generated from Strato column: [graphql/communities/membersFacepile.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/membersFacepile)
  """
  members_facepile_result: [UserResult] @deprecated(reason : "migrated to members_facepile_results; field will always be null") @strato_column(path : "graphql/communities/membersFacepile.Community") @strato_op(value : Fetch)
  """
  Result field; Members of the community to render within a facepile.
  
  Generated from Strato column: [graphql/communities/membersFacepile.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/membersFacepile)
  """
  members_facepile_results: [UserResults!]! @strato_column(path : "graphql/communities/membersFacepile.Community") @strato_op(value : Fetch)
  """
  Slice of members of the community.
  
  Generated from Strato column: [graphql/communities/membersSlice.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/membersSlice)
  """
  members_slice(count: Int, cursor: String): UserSlice! @strato_column(path : "graphql/communities/membersSlice.Community") @strato_op(value : Fetch)
  """
  Timeline of members of the community.
  
  Generated from Strato column: [graphql/communities/membersTimeline.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/membersTimeline)
  """
  members_timeline: Timeline! @development @strato_column(path : "graphql/communities/membersTimeline.Community") @strato_op(value : Fetch)
  """
  Membership settings of a community.
  
  Generated from Strato column: [graphql/communities/membershipSettings.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/membershipSettings)
  """
  membership_settings: CommunityMembershipSettings! @deprecated(reason : "Replaced by joinPolicy.Community and invitesPolicy.Community columns.") @strato_column(path : "graphql/communities/membershipSettings.Community") @strato_op(value : Fetch)
  """
  Moderation fields of a community. Access is limited to community moderators.
  
  Generated from Strato column: [graphql/communities/moderation.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/moderation)
  """
  moderation: CommunityModeration @strato_column(path : "graphql/communities/moderation.Community") @strato_op(value : Fetch)
  """
  Community moderator count.
  
  Generated from Strato column: [graphql/communities/moderatorCount.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/moderatorCount)
  """
  moderator_count: Int! @strato_column(path : "graphql/communities/moderatorCount.Community") @strato_op(value : Fetch)
  """
  Slice of moderators of the community.
  
  Generated from Strato column: [graphql/communities/moderatorsSlice.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/moderatorsSlice)
  """
  moderators_slice(count: Int, cursor: String): UserSlice! @strato_column(path : "graphql/communities/moderatorsSlice.Community") @strato_op(value : Fetch)
  """
  Timeline of moderators of the community.
  
  Generated from Strato column: [graphql/communities/moderatorsTimeline.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/moderatorsTimeline)
  """
  moderators_timeline: Timeline! @development @strato_column(path : "graphql/communities/moderatorsTimeline.Community") @strato_op(value : Fetch)
  """
  Retrieves community name.
  
  Generated from Strato column: [graphql/communities/name.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/name)
  """
  name: String! @strato_column(path : "graphql/communities/name.Community") @strato_op(value : Fetch)
  """
  Timeline of tweets in the community, ranked by relevance.
  
  Generated from Strato column: [graphql/communities/rankedCommunityTimeline.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/rankedCommunityTimeline)
  """
  ranked_community_timeline: Timeline! @strato_column(path : "graphql/communities/rankedCommunityTimeline.Community") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Role of the viewer in the community.
  
  Generated from Strato column: [graphql/communities/role.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/role)
  """
  role: CommunityRole! @deprecated(reason : "Superseded by Community.viewer_relationship.role.") @strato_column(path : "graphql/communities/role.Community") @strato_op(value : Fetch)
  """
  Community rules.
  
  Generated from Strato column: [graphql/communities/rules.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/rules)
  """
  rules: [CommunityRule!]! @strato_column(path : "graphql/communities/rules.Community") @strato_op(value : Fetch)
  """
  Relationship between a user and the community.
  
  Generated from Strato column: [graphql/communities/userRelationship.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/userRelationship)
  """
  user_relationship(user_id: NumericString!): UserCommunityRelationship! @strato_column(path : "graphql/communities/userRelationship.Community") @strato_op(value : Fetch)
  """
  User typeahead search for UserCommunityRelationships of users to invite to a community.
  
  Generated from Strato column: [graphql/communities/userRelationshipTypeahead.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/userRelationshipTypeahead)
  """
  user_relationship_typeahead(prefix: String!): [UserCommunityRelationship!]! @strato_column(path : "graphql/communities/userRelationshipTypeahead.Community") @strato_op(value : Fetch)
  """
  Relationship between the viewer and the community.
  
  Generated from Strato column: [graphql/communities/viewerRelationship.Community](https://strato.twitter.biz/web/browse/Community/graphql/communities/viewerRelationship)
  """
  viewer_relationship: UserCommunityRelationship @strato_column(path : "graphql/communities/viewerRelationship.Community") @strato_op(value : Fetch)
}

"Generated from Strato space: `CommunityActions`"
type CommunityActions @strato_space(name : "CommunityActions") {
  "A globally unique identifier"
  id: ID!
  """
  Join Action availability in the community, for the viewer.
  
  Generated from Strato column: [graphql/communities/joinActionResult.CommunityActions](https://strato.twitter.biz/web/browse/CommunityActions/graphql/communities/joinActionResult)
  """
  join_action_result: CommunityJoinActionResult! @strato_column(path : "graphql/communities/joinActionResult.CommunityActions") @strato_op(value : Fetch)
  """
  Leave Action availability in the community, for the viewer.
  
  Generated from Strato column: [graphql/communities/leaveActionResult.CommunityActions](https://strato.twitter.biz/web/browse/CommunityActions/graphql/communities/leaveActionResult)
  """
  leave_action_result: CommunityLeaveActionResult! @strato_column(path : "graphql/communities/leaveActionResult.CommunityActions") @strato_op(value : Fetch)
  """
  Community membership settings put action availability.
  
  Generated from Strato column: [graphql/communities/membershipSettingsPutActionResult.CommunityActions](https://strato.twitter.biz/web/browse/CommunityActions/graphql/communities/membershipSettingsPutActionResult)
  """
  membership_settings_put_action_result: CommunityMembershipSettingsPutActionResult! @strato_column(path : "graphql/communities/membershipSettingsPutActionResult.CommunityActions") @strato_op(value : Fetch)
  """
  Membership settings update action availability in the community, for the viewer.
  
  Generated from Strato column: [graphql/communities/membershipSettingsUpdateActionResult.CommunityActions](https://strato.twitter.biz/web/browse/CommunityActions/graphql/communities/membershipSettingsUpdateActionResult)
  """
  membership_settings_update_action_result: CommunityMembershipSettingsUpdateActionResult! @deprecated(reason : "Replaced by membershipSettingsPutActionResult.CommunityActions column.") @strato_column(path : "graphql/communities/membershipSettingsUpdateActionResult.CommunityActions") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.communities.actions.CommunityCreateAction`](http://go/sg.thrift/CommunityCreateAction)"
type CommunityCreateAction @thrift_type(name : "CommunityCreateAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityCreateActionUnavailable`](http://go/sg.thrift/CommunityCreateActionUnavailable)"
type CommunityCreateActionUnavailable @thrift_type(name : "CommunityCreateActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityCreateActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityCreateError`](http://go/sg.thrift/CommunityCreateError)"
type CommunityCreateError @thrift_type(name : "CommunityCreateError", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityCreateErrorReason!
}

"Generated from Strato space: `CommunityInvites`"
type CommunityInvites @strato_space(name : "CommunityInvites") {
  "A globally unique identifier"
  id: ID!
  """
  Count of remaining invites this viewer has within the community.
  
  Generated from Strato column: [graphql/communities/remainingInviteCount.CommunityInvites](https://strato.twitter.biz/web/browse/CommunityInvites/graphql/communities/remainingInviteCount)
  """
  remaining_invite_count: Int! @strato_column(path : "graphql/communities/remainingInviteCount.CommunityInvites") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Slice of recommended users to invite.
  
  Generated from Strato column: [graphql/communities/usersToInviteSlice.CommunityInvites](https://strato.twitter.biz/web/browse/CommunityInvites/graphql/communities/usersToInviteSlice)
  """
  users_to_invite_slice(count: Int, cursor: String): UserCommunityRelationshipSlice! @strato_column(path : "graphql/communities/usersToInviteSlice.CommunityInvites") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.communities.invites.CommunityInvitesUnavailable`](http://go/sg.thrift/CommunityInvitesUnavailable)"
type CommunityInvitesUnavailable @thrift_type(name : "CommunityInvitesUnavailable", package : "com.twitter.communities.invites") {
  message: String
  reason: CommunityInvitesUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinAction`](http://go/sg.thrift/CommunityJoinAction)"
type CommunityJoinAction @thrift_type(name : "CommunityJoinAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinActionUnavailable`](http://go/sg.thrift/CommunityJoinActionUnavailable)"
type CommunityJoinActionUnavailable @thrift_type(name : "CommunityJoinActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinActionUnavailableReason!
}

"Generated from Strato space: `CommunityJoinRequest`"
type CommunityJoinRequest @strato_space(name : "CommunityJoinRequest") {
  """
  Availability of actions the viewer can take on a community join request from the target user to the target community.
  
  Generated from Strato column: [graphql/communities/actions.CommunityJoinRequest](https://strato.twitter.biz/web/browse/CommunityJoinRequest/graphql/communities/actions)
  """
  actions: CommunityJoinRequestActions! @strato_column(path : "graphql/communities/actions.CommunityJoinRequest") @strato_op(value : Fetch)
  """
  Creation timestamp of the community join request.
  
  Generated from Strato column: [graphql/communities/createdAt.CommunityJoinRequest](https://strato.twitter.biz/web/browse/CommunityJoinRequest/graphql/communities/createdAt)
  """
  created_at: Int53! @strato_column(path : "graphql/communities/createdAt.CommunityJoinRequest") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Response timestamp of the community join request.
  
  Generated from Strato column: [graphql/communities/respondedAt.CommunityJoinRequest](https://strato.twitter.biz/web/browse/CommunityJoinRequest/graphql/communities/respondedAt)
  """
  responded_at: Int53 @strato_column(path : "graphql/communities/respondedAt.CommunityJoinRequest") @strato_op(value : Fetch)
  """
  State associated with the community join request.
  
  Generated from Strato column: [graphql/communities/state.CommunityJoinRequest](https://strato.twitter.biz/web/browse/CommunityJoinRequest/graphql/communities/state)
  """
  state: CommunityJoinRequestState! @strato_column(path : "graphql/communities/state.CommunityJoinRequest") @strato_op(value : Fetch)
  """
  Relationship between a user and the community for a join request.
  
  Generated from Strato column: [graphql/communities/userRelationship.CommunityJoinRequest](https://strato.twitter.biz/web/browse/CommunityJoinRequest/graphql/communities/userRelationship)
  """
  user_relationship: UserCommunityRelationship! @strato_column(path : "graphql/communities/userRelationship.CommunityJoinRequest") @strato_op(value : Fetch)
}

"Generated from Strato space: `CommunityJoinRequestActions`"
type CommunityJoinRequestActions @strato_space(name : "CommunityJoinRequestActions") {
  "A globally unique identifier"
  id: ID!
  """
  Join Request Approve Action availability on a user/community pair, for the viewer.
  
  Generated from Strato column: [graphql/communities/joinRequestApproveActionResult.CommunityJoinRequestActions](https://strato.twitter.biz/web/browse/CommunityJoinRequestActions/graphql/communities/joinRequestApproveActionResult)
  """
  join_request_approve_action_result: CommunityJoinRequestApproveActionResult @strato_column(path : "graphql/communities/joinRequestApproveActionResult.CommunityJoinRequestActions") @strato_op(value : Fetch)
  """
  Join Request Deny Action availability on a user/community pair, for the viewer.
  
  Generated from Strato column: [graphql/communities/joinRequestDenyActionResult.CommunityJoinRequestActions](https://strato.twitter.biz/web/browse/CommunityJoinRequestActions/graphql/communities/joinRequestDenyActionResult)
  """
  join_request_deny_action_result: CommunityJoinRequestDenyActionResult @strato_column(path : "graphql/communities/joinRequestDenyActionResult.CommunityJoinRequestActions") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveAction`](http://go/sg.thrift/CommunityJoinRequestApproveAction)"
type CommunityJoinRequestApproveAction @thrift_type(name : "CommunityJoinRequestApproveAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveActionUnavailable`](http://go/sg.thrift/CommunityJoinRequestApproveActionUnavailable)"
type CommunityJoinRequestApproveActionUnavailable @thrift_type(name : "CommunityJoinRequestApproveActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinRequestApproveActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveError`](http://go/sg.thrift/CommunityJoinRequestApproveError)"
type CommunityJoinRequestApproveError @thrift_type(name : "CommunityJoinRequestApproveError", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinRequestApproveErrorReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestCreateActionUnavailable`](http://go/sg.thrift/CommunityJoinRequestCreateActionUnavailable)"
type CommunityJoinRequestCreateActionUnavailable @thrift_type(name : "CommunityJoinRequestCreateActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinRequestCreateActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestCreateError`](http://go/sg.thrift/CommunityJoinRequestCreateError)"
type CommunityJoinRequestCreateError @thrift_type(name : "CommunityJoinRequestCreateError", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinRequestCreateErrorReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyAction`](http://go/sg.thrift/CommunityJoinRequestDenyAction)"
type CommunityJoinRequestDenyAction @thrift_type(name : "CommunityJoinRequestDenyAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyActionUnavailable`](http://go/sg.thrift/CommunityJoinRequestDenyActionUnavailable)"
type CommunityJoinRequestDenyActionUnavailable @thrift_type(name : "CommunityJoinRequestDenyActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinRequestDenyActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyError`](http://go/sg.thrift/CommunityJoinRequestDenyError)"
type CommunityJoinRequestDenyError @thrift_type(name : "CommunityJoinRequestDenyError", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityJoinRequestDenyErrorReason!
}

"Generated from Strato space: `CommunityJoinRequests`"
type CommunityJoinRequests @strato_space(name : "CommunityJoinRequests") {
  "A globally unique identifier"
  id: ID!
  """
  Number of requests to join a community.
  
  Generated from Strato column: [graphql/communities/pendingJoinRequestCount.CommunityJoinRequests](https://strato.twitter.biz/web/browse/CommunityJoinRequests/graphql/communities/pendingJoinRequestCount)
  """
  pending_join_request_count: Int! @strato_column(path : "graphql/communities/pendingJoinRequestCount.CommunityJoinRequests") @strato_op(value : Fetch)
  """
  Slice of community join requests.
  
  Generated from Strato column: [graphql/communities/pendingJoinRequestsSlice.CommunityJoinRequests](https://strato.twitter.biz/web/browse/CommunityJoinRequests/graphql/communities/pendingJoinRequestsSlice)
  """
  pending_join_requests_slice(count: Int, cursor: String): CommunityJoinRequestsSlice! @strato_column(path : "graphql/communities/pendingJoinRequestsSlice.CommunityJoinRequests") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

type CommunityJoinRequestsSlice {
  items: [CommunityJoinRequest!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.communities.join_requests.CommunityJoinRequestsUnavailable`](http://go/sg.thrift/CommunityJoinRequestsUnavailable)"
type CommunityJoinRequestsUnavailable @thrift_type(name : "CommunityJoinRequestsUnavailable", package : "com.twitter.communities.join_requests") {
  message: String
  reason: CommunityJoinRequestsUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityLeaveAction`](http://go/sg.thrift/CommunityLeaveAction)"
type CommunityLeaveAction @thrift_type(name : "CommunityLeaveAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityLeaveActionUnavailable`](http://go/sg.thrift/CommunityLeaveActionUnavailable)"
type CommunityLeaveActionUnavailable @thrift_type(name : "CommunityLeaveActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityLeaveActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityMemberRemoveAction`](http://go/sg.thrift/CommunityMemberRemoveAction)"
type CommunityMemberRemoveAction @thrift_type(name : "CommunityMemberRemoveAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityMemberRemoveActionUnavailable`](http://go/sg.thrift/CommunityMemberRemoveActionUnavailable)"
type CommunityMemberRemoveActionUnavailable @thrift_type(name : "CommunityMemberRemoveActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityMemberRemoveActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutAction`](http://go/sg.thrift/CommunityMembershipSettingsPutAction)"
type CommunityMembershipSettingsPutAction @thrift_type(name : "CommunityMembershipSettingsPutAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutActionUnavailable`](http://go/sg.thrift/CommunityMembershipSettingsPutActionUnavailable)"
type CommunityMembershipSettingsPutActionUnavailable @thrift_type(name : "CommunityMembershipSettingsPutActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityMembershipSettingsPutActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutError`](http://go/sg.thrift/CommunityMembershipSettingsPutError)"
type CommunityMembershipSettingsPutError @thrift_type(name : "CommunityMembershipSettingsPutError", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityMembershipSettingsPutErrorReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateAction`](http://go/sg.thrift/CommunityMembershipSettingsUpdateAction)"
type CommunityMembershipSettingsUpdateAction @thrift_type(name : "CommunityMembershipSettingsUpdateAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateActionUnavailable`](http://go/sg.thrift/CommunityMembershipSettingsUpdateActionUnavailable)"
type CommunityMembershipSettingsUpdateActionUnavailable @thrift_type(name : "CommunityMembershipSettingsUpdateActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityMembershipSettingsUpdateUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateError`](http://go/sg.thrift/CommunityMembershipSettingsUpdateError)"
type CommunityMembershipSettingsUpdateError @thrift_type(name : "CommunityMembershipSettingsUpdateError", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityMembershipSettingsUpdateErrorReason!
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateActionUnavailable`](http://go/sg.thrift/CommunityMembershipSettingsUpdateActionUnavailable)"
type CommunityMembershipSettingsUpdateUnavailable @thrift_type(name : "CommunityMembershipSettingsUpdateActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: CommunityMembershipSettingsUpdateUnavailableReason!
}

"Generated from Strato space: `CommunityModeration`"
type CommunityModeration @strato_space(name : "CommunityModeration") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Number of active community moderation tweet cases.
  
  Generated from Strato column: [graphql/communities/tweetCaseCount.CommunityModeration](https://strato.twitter.biz/web/browse/CommunityModeration/graphql/communities/tweetCaseCount)
  """
  tweet_case_count: Int! @strato_column(path : "graphql/communities/tweetCaseCount.CommunityModeration") @strato_op(value : Fetch)
  """
  Slice of active community moderation tweet cases.
  
  Generated from Strato column: [graphql/communities/tweetCasesSlice.CommunityModeration](https://strato.twitter.biz/web/browse/CommunityModeration/graphql/communities/tweetCasesSlice)
  """
  tweet_cases_slice(count: Int, cursor: String): CommunityModerationTweetCaseSlice! @strato_column(path : "graphql/communities/tweetCasesSlice.CommunityModeration") @strato_op(value : Fetch)
}

"Generated from Strato space: `CommunityModerationTweetCase`"
type CommunityModerationTweetCase @strato_space(name : "CommunityModerationTweetCase") {
  "A globally unique identifier"
  id: ID!
  """
  Number of reports associated with the community moderation tweet case.
  
  Generated from Strato column: [graphql/communities/reportCount.CommunityModerationTweetCase](https://strato.twitter.biz/web/browse/CommunityModerationTweetCase/graphql/communities/reportCount)
  """
  report_count: Int! @strato_column(path : "graphql/communities/reportCount.CommunityModerationTweetCase") @strato_op(value : Fetch)
  """
  Maximum creation time of all reports associated with the community moderation tweet case.
  
  Generated from Strato column: [graphql/communities/reportCreatedAtMax.CommunityModerationTweetCase](https://strato.twitter.biz/web/browse/CommunityModerationTweetCase/graphql/communities/reportCreatedAtMax)
  """
  report_created_at_max: Int53! @strato_column(path : "graphql/communities/reportCreatedAtMax.CommunityModerationTweetCase") @strato_op(value : Fetch)
  """
  Slice of reports associated with a community moderation tweet case.
  
  Generated from Strato column: [graphql/communities/reportsSlice.CommunityModerationTweetCase](https://strato.twitter.biz/web/browse/CommunityModerationTweetCase/graphql/communities/reportsSlice)
  """
  reports_slice(count: Int, cursor: String): CommunityTweetReportSlice! @strato_column(path : "graphql/communities/reportsSlice.CommunityModerationTweetCase") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Tweet associated with a community moderation tweet case.
  
  Generated from Strato column: [graphql/communities/tweet.CommunityModerationTweetCase](https://strato.twitter.biz/web/browse/CommunityModerationTweetCase/graphql/communities/tweet)
  """
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results") @strato_column(path : "graphql/communities/tweet.CommunityModerationTweetCase") @strato_op(value : Fetch)
  """
  Result field; Tweet associated with a community moderation tweet case.
  
  Generated from Strato column: [graphql/communities/tweet.CommunityModerationTweetCase](https://strato.twitter.biz/web/browse/CommunityModerationTweetCase/graphql/communities/tweet)
  """
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null") @strato_column(path : "graphql/communities/tweet.CommunityModerationTweetCase") @strato_op(value : Fetch)
  """
  Result field; Tweet associated with a community moderation tweet case.
  
  Generated from Strato column: [graphql/communities/tweet.CommunityModerationTweetCase](https://strato.twitter.biz/web/browse/CommunityModerationTweetCase/graphql/communities/tweet)
  """
  tweet_results: TweetResults! @strato_column(path : "graphql/communities/tweet.CommunityModerationTweetCase") @strato_op(value : Fetch)
}

type CommunityModerationTweetCaseSlice {
  items: [CommunityModerationTweetCase!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.communities.membership.CommunityOpenMembershipSettings`](http://go/sg.thrift/CommunityOpenMembershipSettings)"
type CommunityOpenMembershipSettings @thrift_type(name : "CommunityOpenMembershipSettings", package : "com.twitter.communities.membership") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.membership.CommunityRestrictedMembershipSettings`](http://go/sg.thrift/CommunityRestrictedMembershipSettings)"
type CommunityRestrictedMembershipSettings @thrift_type(name : "CommunityRestrictedMembershipSettings", package : "com.twitter.communities.membership") {
  invites_policy: CommunityInvitesPolicy!
  join_approval_policy: CommunityJoinApprovalPolicy!
}

"Generated from Strato space: `CommunityRule`"
type CommunityRule @strato_space(name : "CommunityRule") {
  """
  Retrieves community rule description.
  
  Generated from Strato column: [graphql/communities/description.CommunityRule](https://strato.twitter.biz/web/browse/CommunityRule/graphql/communities/description)
  """
  description: String @strato_column(path : "graphql/communities/description.CommunityRule") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Retrieves community rule name.
  
  Generated from Strato column: [graphql/communities/name.CommunityRule](https://strato.twitter.biz/web/browse/CommunityRule/graphql/communities/name)
  """
  name: String! @strato_column(path : "graphql/communities/name.CommunityRule") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

type CommunitySearchSlice {
  items: [Community!]!
  slice_info: SliceInfo!
}

type CommunitySlice {
  items: [Community!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.communities.moderation.CommunityTweetDefaultModerationState`](http://go/sg.thrift/CommunityTweetDefaultModerationState)"
type CommunityTweetDefaultModerationState @thrift_type(name : "CommunityTweetDefaultModerationState", package : "com.twitter.communities.moderation") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.moderation.CommunityTweetHiddenModerationState`](http://go/sg.thrift/CommunityTweetHiddenModerationState)"
type CommunityTweetHiddenModerationState @thrift_type(name : "CommunityTweetHiddenModerationState", package : "com.twitter.communities.moderation") {
  rule: CommunityRule!
}

"Generated from Strato space: `CommunityTweetReport`"
type CommunityTweetReport @strato_space(name : "CommunityTweetReport") {
  """
  Creation time of a community tweet report.
  
  Generated from Strato column: [graphql/communities/createdAt.CommunityTweetReport](https://strato.twitter.biz/web/browse/CommunityTweetReport/graphql/communities/createdAt)
  """
  created_at: Int53! @strato_column(path : "graphql/communities/createdAt.CommunityTweetReport") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Relationship of the reporter and the community of the reported tweet.
  
  Generated from Strato column: [graphql/communities/reporterRelationship.CommunityTweetReport](https://strato.twitter.biz/web/browse/CommunityTweetReport/graphql/communities/reporterRelationship)
  """
  reporter_relationship: UserCommunityRelationship! @strato_column(path : "graphql/communities/reporterRelationship.CommunityTweetReport") @strato_op(value : Fetch)
  """
  Rule associated with a community tweet report.
  
  Generated from Strato column: [graphql/communities/rule.CommunityTweetReport](https://strato.twitter.biz/web/browse/CommunityTweetReport/graphql/communities/rule)
  """
  rule: CommunityRule! @strato_column(path : "graphql/communities/rule.CommunityTweetReport") @strato_op(value : Fetch)
  """
  Tweet associated with a community tweet report.
  
  Generated from Strato column: [graphql/communities/tweet.CommunityTweetReport](https://strato.twitter.biz/web/browse/CommunityTweetReport/graphql/communities/tweet)
  """
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results") @strato_column(path : "graphql/communities/tweet.CommunityTweetReport") @strato_op(value : Fetch)
  """
  Result field; Tweet associated with a community tweet report.
  
  Generated from Strato column: [graphql/communities/tweet.CommunityTweetReport](https://strato.twitter.biz/web/browse/CommunityTweetReport/graphql/communities/tweet)
  """
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null") @strato_column(path : "graphql/communities/tweet.CommunityTweetReport") @strato_op(value : Fetch)
  """
  Result field; Tweet associated with a community tweet report.
  
  Generated from Strato column: [graphql/communities/tweet.CommunityTweetReport](https://strato.twitter.biz/web/browse/CommunityTweetReport/graphql/communities/tweet)
  """
  tweet_results: TweetResults! @strato_column(path : "graphql/communities/tweet.CommunityTweetReport") @strato_op(value : Fetch)
}

type CommunityTweetReportSlice {
  items: [CommunityTweetReport!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.communities.moderation.CommunityUserDefaultModerationState`](http://go/sg.thrift/CommunityUserDefaultModerationState)"
type CommunityUserDefaultModerationState @thrift_type(name : "CommunityUserDefaultModerationState", package : "com.twitter.communities.moderation") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.moderation.CommunityUserRemovedModerationState`](http://go/sg.thrift/CommunityUserRemovedModerationState)"
type CommunityUserRemovedModerationState @thrift_type(name : "CommunityUserRemovedModerationState", package : "com.twitter.communities.moderation") {
  rule: CommunityRule!
}

"Generated from Strato space: `ComplianceJob`"
type ComplianceJob @strato_space(name : "ComplianceJob") {
  """
  Returns created time for a compliance job
  
  Generated from Strato column: [graphql/dataproducts/created.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/created)
  """
  created: NumericString @development @strato_column(path : "graphql/dataproducts/created.ComplianceJob") @strato_op(value : Fetch)
  """
  Returns download expiration time for a compliance job.
  
  Generated from Strato column: [graphql/dataproducts/downloadExpiration.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/downloadExpiration)
  """
  download_expiration: NumericString @development @strato_column(path : "graphql/dataproducts/downloadExpiration.ComplianceJob") @strato_op(value : Fetch)
  """
  Returns download URL for a compliance job.
  
  Generated from Strato column: [graphql/dataproducts/downloadUrl.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/downloadUrl)
  """
  download_url: String @development @strato_column(path : "graphql/dataproducts/downloadUrl.ComplianceJob") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns the customer provided name of a compliance job
  
  Generated from Strato column: [graphql/dataproducts/jobName.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/jobName)
  """
  job_name: String @development @strato_column(path : "graphql/dataproducts/jobName.ComplianceJob") @strato_op(value : Fetch)
  """
  Returns the status of a compliance job
  
  Generated from Strato column: [graphql/dataproducts/jobStatus.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/jobStatus)
  """
  job_status: ContentComplianceJobStatus @development @strato_column(path : "graphql/dataproducts/jobStatus.ComplianceJob") @strato_op(value : Fetch)
  """
  Returns the job type (tweets or users) of a compliance job
  
  Generated from Strato column: [graphql/dataproducts/jobType.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/jobType)
  """
  job_type: ContentComplianceJobType @development @strato_column(path : "graphql/dataproducts/jobType.ComplianceJob") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Returns true if compliance job is resumable, false if not
  
  Generated from Strato column: [graphql/dataproducts/resumable.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/resumable)
  """
  resumable: Boolean @development @strato_column(path : "graphql/dataproducts/resumable.ComplianceJob") @strato_op(value : Fetch)
  """
  Returns upload expiration time for a compliance job.
  
  Generated from Strato column: [graphql/dataproducts/uploadExpiration.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/uploadExpiration)
  """
  upload_expiration: NumericString @development @strato_column(path : "graphql/dataproducts/uploadExpiration.ComplianceJob") @strato_op(value : Fetch)
  """
  Returns upload url of a compliance job
  
  Generated from Strato column: [graphql/dataproducts/uploadUrl.ComplianceJob](https://strato.twitter.biz/web/browse/ComplianceJob/graphql/dataproducts/uploadUrl)
  """
  upload_url: String @development @strato_column(path : "graphql/dataproducts/uploadUrl.ComplianceJob") @strato_op(value : Fetch)
}

"Generated from Strato space: `ContentCompliance`"
type ContentCompliance @strato_space(name : "ContentCompliance") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

type ContentFilterRulesCollectionSlice {
  items: [DeveloperContentFilterRule!]!
  slice_info: SliceInfo!
}

type ContextMap {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.strato.graphql.ContextualTweetInterstitial`](http://go/sg.thrift/ContextualTweetInterstitial)"
type ContextualTweetInterstitial @thrift_type(name : "ContextualTweetInterstitial", package : "com.twitter.strato.graphql") {
  display_type: TweetInterstitialDisplayType!
  reveal_text: TimelineRichText!
  text: TimelineRichText!
}

"Generated from type: [`com.twitter.collaborate.Contributor`](http://go/sg.thrift/Contributor)"
type Contributor @thrift_type(name : "Contributor", package : "com.twitter.collaborate") {
  has_accepted: Boolean
  id: NumericString!
  is_active: Boolean
  is_admin: Boolean
  joined: NumericString
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from Strato space: `Conversation`"
type Conversation @strato_space(name : "Conversation") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Check if user(s) are unmentioned from a given conversation.
  
  Generated from Strato column: [graphql/consumer-privacy/unmentionedUsers.Conversation](https://strato.twitter.biz/web/browse/Conversation/graphql/consumer-privacy/unmentionedUsers)
  """
  unmentioned_users(user_ids: [NumericString!]): [User!] @deprecated(reason : "migrated to unmentioned_users_results") @strato_column(path : "graphql/consumer-privacy/unmentionedUsers.Conversation") @strato_op(value : Fetch)
  """
  Result field; Check if user(s) are unmentioned from a given conversation.
  
  Generated from Strato column: [graphql/consumer-privacy/unmentionedUsers.Conversation](https://strato.twitter.biz/web/browse/Conversation/graphql/consumer-privacy/unmentionedUsers)
  """
  unmentioned_users_result(user_ids: [NumericString!]): [UserResult] @deprecated(reason : "migrated to unmentioned_users_results; field will always be null") @strato_column(path : "graphql/consumer-privacy/unmentionedUsers.Conversation") @strato_op(value : Fetch)
  """
  Result field; Check if user(s) are unmentioned from a given conversation.
  
  Generated from Strato column: [graphql/consumer-privacy/unmentionedUsers.Conversation](https://strato.twitter.biz/web/browse/Conversation/graphql/consumer-privacy/unmentionedUsers)
  """
  unmentioned_users_results(user_ids: [NumericString!]): [UserResults!] @strato_column(path : "graphql/consumer-privacy/unmentionedUsers.Conversation") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.convosvc.strato.ConversationInfo`](http://go/sg.thrift/ConversationInfo)"
type ConversationInfo @thrift_type(name : "ConversationInfo", package : "com.twitter.convosvc.strato") {
  conversation_id: String!
  last_readable_event_id: NumericString
  metadata: ConversationMetadata
  participants_metadata: [ParticipantConversationMetadata!]
  perspectival_conversation_metadata: PerspectivalConversationMetadata
}

"Generated from type: [`com.twitter.convosvc.strato.ConversationMetadata`](http://go/sg.thrift/ConversationMetadata)"
type ConversationMetadata @thrift_type(name : "ConversationMetadata", package : "com.twitter.convosvc.strato") {
  admin_user: User @deprecated(reason : "migrated to admin_user_results")
  admin_user_result: UserResult @deprecated(reason : "migrated to admin_user_results; field will always be null")
  admin_user_results: UserResults
  avatar: ApiMedia
  conversation_id: String!
  conversation_type: ConversationType!
  created_at_millis: NumericString
  created_by_user: User @deprecated(reason : "migrated to created_by_user_results")
  created_by_user_result: UserResult @deprecated(reason : "migrated to created_by_user_results; field will always be null")
  created_by_user_results: UserResults
  name: String
}

"Generated from type: [`com.twitter.bakery.cookie_catalog.CookieAttributes`](http://go/sg.thrift/CookieAttributes)"
type CookieCatalogAttributes @thrift_type(name : "CookieAttributes", package : "com.twitter.bakery.cookie_catalog") {
  category: String!
  controllers: [CookieController!]
  cookie_name: String!
  description: String
  domain: [String!]
  lifespan: String
  match_type: String!
  party: String
  policy_link: String
  use_type_name: String
  use_type_uuid: String
}

"Generated from type: [`com.twitter.bakery.cookie_catalog.CookieMetadata`](http://go/sg.thrift/CookieMetadata)"
type CookieCatalogResponse @thrift_type(name : "CookieMetadata", package : "com.twitter.bakery.cookie_catalog") {
  cookie_attributes: [CookieCatalogAttributes!]!
  version: NumericString!
}

"Generated from type: [`com.twitter.bakery.cookie_catalog.Controller`](http://go/sg.thrift/Controller)"
type CookieController @thrift_type(name : "Controller", package : "com.twitter.bakery.cookie_catalog") {
  name: String!
  uuid: String!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.Count`](http://go/sg.thrift/Count)"
type Count @thrift_type(name : "Count", package : "com.twitter.dataproducts.metrics.graphql") {
  organic: Int53
  promoted: Int53
  total: Int53
}

"Generated from type: [`com.twitter.bff.BFFCouponDetails`](http://go/sg.thrift/BFFCouponDetails)"
type CouponDetails @thrift_type(name : "BFFCouponDetails", package : "com.twitter.bff") {
  amount_string: String!
  currency_code: PaymentCurrencyCode!
}

"Generated from type: [`com.twitter.payments.web.CreateCustomerPortalSessionResponse`](http://go/sg.thrift/CreateCustomerPortalSessionResponse)"
type CreateCustomerPortalSessionResponse @thrift_type(name : "CreateCustomerPortalSessionResponse", package : "com.twitter.payments.web") {
  customer_portal_session_url: String!
}

"Generated from type: [`com.twitter.convosvc.strato.CreateDMReactionFailure`](http://go/sg.thrift/CreateDMReactionFailure)"
type CreateDMReactionFailure @thrift_type(name : "CreateDMReactionFailure", package : "com.twitter.convosvc.strato") {
  conversation_validation_failure_type: ConversationValidationFailureType
  message: String
  reason: CreateDMReactionFailureReason!
}

"Generated from type: [`com.twitter.convosvc.strato.CreateDMReactionSuccess`](http://go/sg.thrift/CreateDMReactionSuccess)"
type CreateDMReactionSuccess @thrift_type(name : "CreateDMReactionSuccess", package : "com.twitter.convosvc.strato") {
  dm_reactions: DMReactions!
  perspectival_user_id: NumericString!
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmFailed`](http://go/sg.thrift/CreateDmFailed)"
type CreateDmFailed @thrift_type(name : "CreateDmFailed", package : "com.twitter.dataproducts.devo.dm.graphql") {
  create_dm_failed_reason: CreateDmFailedReason!
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmInvalidRequest`](http://go/sg.thrift/CreateDmInvalidRequest)"
type CreateDmInvalidRequest @thrift_type(name : "CreateDmInvalidRequest", package : "com.twitter.dataproducts.devo.dm.graphql") {
  create_dm_invalid_request_reason: CreateDmInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmSuccess`](http://go/sg.thrift/CreateDmSuccess)"
type CreateDmSuccess @thrift_type(name : "CreateDmSuccess", package : "com.twitter.dataproducts.devo.dm.graphql") {
  conversation_id: String!
  dm_id: NumericString!
}

"Generated from type: [`com.twitter.incentives.jiminy.CreateHumanizationNudgeResponse`](http://go/sg.thrift/CreateHumanizationNudgeResponse)"
type CreateHumanizationNudgeResponse @thrift_type(name : "CreateHumanizationNudgeResponse", package : "com.twitter.incentives.jiminy") {
  nudge: HumanizationNudge
}

"Generated from type: [`com.twitter.incentives.jiminy.CreateNudgeResponse`](http://go/sg.thrift/CreateNudgeResponse)"
type CreateNudgeResponse @thrift_type(name : "CreateNudgeResponse", package : "com.twitter.incentives.jiminy") {
  experimental_nudge: Nudge @development
  nudge: Nudge
}

"Generated from type: [`com.twitter.incentives.jiminy.CreatePreemptiveNudgeResponse`](http://go/sg.thrift/CreatePreemptiveNudgeResponse)"
type CreatePreemptiveNudgeResponse @thrift_type(name : "CreatePreemptiveNudgeResponse", package : "com.twitter.incentives.jiminy") {
  nudge: PreemptiveNudge
}

type CreateReactionResult {
  success: Boolean!
}

"Generated from type: [`com.twitter.tweetypie.graphql.CreateRetweetResponse`](http://go/sg.thrift/CreateRetweetResponse)"
type CreateRetweetResponse @thrift_type(name : "CreateRetweetResponse", package : "com.twitter.tweetypie.graphql") {
  "The created retweet."
  retweet: Tweet @deprecated(reason : "migrated to retweet_results")
  "Result field; The created retweet."
  retweet_result: TweetResult @deprecated(reason : "migrated to retweet_results; field will always be null")
  "Result field; The created retweet."
  retweet_results: TweetResults
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.CreateTweetInvalidRequestResult`](http://go/sg.thrift/CreateTweetInvalidRequestResult)"
type CreateTweetInvalidRequestResult @thrift_type(name : "CreateTweetInvalidRequestResult", package : "com.twitter.dataproducts.aaa.graphql") {
  parameter_error_response: ParameterValidationErrorResponse
}

"Generated from type: [`com.twitter.tweetypie.graphql.CreateTweetResponse`](http://go/sg.thrift/CreateTweetResponse)"
type CreateTweetResponse @thrift_type(name : "CreateTweetResponse", package : "com.twitter.tweetypie.graphql") {
  "The created tweet."
  tweet: Tweet @deprecated(reason : "migrated to tweet_results")
  "Result field; The created tweet."
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  "Result field; The created tweet."
  tweet_results: TweetResults
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.CreateTweetSuccessResult`](http://go/sg.thrift/CreateTweetSuccessResult)"
type CreateTweetSuccessResult @thrift_type(name : "CreateTweetSuccessResult", package : "com.twitter.dataproducts.aaa.graphql") {
  tweet_data: CreateTweetResponse
}

"Generated from type: [`com.twitter.incentives.jiminy.CreateTweetWithUndoResponse`](http://go/sg.thrift/CreateTweetWithUndoResponse)"
type CreateTweetWithUndoResponse @thrift_type(name : "CreateTweetWithUndoResponse", package : "com.twitter.incentives.jiminy") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.CreatorDashboardRevenueInfo`](http://go/sg.thrift/CreatorDashboardRevenueInfo)"
type CreatorDashboardRevenueInfo @thrift_type(name : "CreatorDashboardRevenueInfo", package : "com.twitter.creator_dashboard.graphql") {
  all_time_revenue_in_cents: Int53!
  revenue_since_last_payout_in_cents: Int53
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.CreatorDashboardStrikeInfo`](http://go/sg.thrift/CreatorDashboardStrikeInfo)"
type CreatorDashboardStrikeInfo @thrift_type(name : "CreatorDashboardStrikeInfo", package : "com.twitter.creator_dashboard.graphql") {
  all_time_revenue_in_btc: Float!
  revenue_since_last_payout_in_btc: Float
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.CreatorPayout`](http://go/sg.thrift/CreatorPayout)"
type CreatorPayout @thrift_type(name : "CreatorPayout", package : "com.twitter.creator_dashboard.graphql") {
  amount_paid_out_in_cents: Int53!
  created_at_msec: Int53!
  stripe_transaction_id: String!
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.CreatorPayoutSlice`](http://go/sg.thrift/CreatorPayoutSlice)"
type CreatorPayoutSlice @thrift_type(name : "CreatorPayoutSlice", package : "com.twitter.creator_dashboard.graphql") {
  items: [CreatorPayout!]!
  slice_info: SliceInfo!
}

"""
The abbreviated details of the credit card.

Generated from type: [`com.twitter.bff.BFFCreditCardDetails`](http://go/sg.thrift/BFFCreditCardDetails)
"""
type CreditCardDetails @thrift_type(name : "BFFCreditCardDetails", package : "com.twitter.bff") {
  address_line1: String
  address_line2: String
  card_status: CreditCardStatus
  city_subdivision_postal: String
  expiry_date: ThriftDate
  full_name: String!
  "the thumbnail image of the credit card type"
  img_src_url: String
  is_expired: Boolean
  last_four_digits: String!
}

"Generated from type: [`com.twitter.convosvc.strato.DMCardAttachment`](http://go/sg.thrift/DMCardAttachment)"
type DMCardAttachment @thrift_type(name : "DMCardAttachment", package : "com.twitter.convosvc.strato") {
  card: Card! @development
}

"Generated from Strato space: `DMConversation`"
type DMConversation @strato_space(name : "DMConversation") {
  "A globally unique identifier"
  id: ID!
  """
  labels
  
  Generated from Strato column: [graphql/dmConversationLabels/labels.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/dmConversationLabels/labels)
  """
  labels: [DMConversationLabelInfo!] @strato_column(path : "graphql/dmConversationLabels/labels.DMConversation") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/lastReadableEventId.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/directmessages/lastReadableEventId)"
  last_readable_event_id: String @development @strato_column(path : "graphql/directmessages/lastReadableEventId.DMConversation") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/legacy.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/directmessages/legacy)"
  legacy: ConversationInfo @development @strato_column(path : "graphql/directmessages/legacy.DMConversation") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/LegacyConversationSlice.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/directmessages/LegacyConversationSlice)"
  legacy_conversation_slice(next_cursor: String, previous_cursor: String): DMEventSliceResult @development @strato_column(path : "graphql/directmessages/LegacyConversationSlice.DMConversation") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/metadata.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/directmessages/metadata)"
  metadata: ConversationMetadata @development @strato_column(path : "graphql/directmessages/metadata.DMConversation") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/participants.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/directmessages/participants)"
  participants: [ParticipantConversationMetadata!] @development @strato_column(path : "graphql/directmessages/participants.DMConversation") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/perspectivalConversationMetadata.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/directmessages/perspectivalConversationMetadata)"
  perspectival_conversation_metadata: PerspectivalConversationMetadata @development @strato_column(path : "graphql/directmessages/perspectivalConversationMetadata.DMConversation") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.strato.graphql.DMConversationLabelInfo`](http://go/sg.thrift/DMConversationLabelInfo)"
type DMConversationLabelInfo @thrift_type(name : "DMConversationLabelInfo", package : "com.twitter.strato.graphql") {
  label_type: DMConversationLabel!
  timestamp: Int53!
}

"Generated from type: [`com.twitter.strato.graphql.DMConversationLabelUnavailable`](http://go/sg.thrift/DMConversationLabelUnavailable)"
type DMConversationLabelUnavailable @thrift_type(name : "DMConversationLabelUnavailable", package : "com.twitter.strato.graphql") {
  failure_reason: DMConversationLabelFailureReason!
  message: String
}

"Generated from Strato space: `DMConversationResults`"
type DMConversationResults @strato_space(name : "DMConversationResults") {
  "Generated from Strato column: [graphql/results/_result.DMConversation](https://strato.twitter.biz/web/browse/DMConversation/graphql/results/_result)"
  result: DMConversationResult @development @strato_column(path : "graphql/results/_result.DMConversation") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from type: [`com.twitter.convosvc.strato.DMConversationUnavailable`](http://go/sg.thrift/DMConversationUnavailable)"
type DMConversationUnavailable @thrift_type(name : "DMConversationUnavailable", package : "com.twitter.convosvc.strato") {
  message: String
  unavailable_reason: DMConversationUnavailableReason!
}

"Generated from type: [`com.twitter.convosvc.strato.DMConvoItem`](http://go/sg.thrift/DMConvoItem)"
type DMConvoItem @thrift_type(name : "DMConvoItem", package : "com.twitter.convosvc.strato") {
  dm_conversation: DMConversation! @deprecated(reason : "migrated to dm_conversation_results")
  dm_conversation_results: DMConversationResults!
}

"Generated from type: [`com.twitter.convosvc.strato.DMConvoListSlice`](http://go/sg.thrift/DMConvoListSlice)"
type DMConvoListSlice @thrift_type(name : "DMConvoListSlice", package : "com.twitter.convosvc.strato") {
  items: [DMConvoListItem]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.convosvc.search.DMConvoSlice`](http://go/sg.thrift/DMConvoSlice)"
type DMConvoSlice @thrift_type(name : "DMConvoSlice", package : "com.twitter.convosvc.search") {
  "Deprecated( deprecate people and group convo search in dmSearchComposite)"
  items: [SearchConversationInfo!] @deprecated(reason : "deprecate people and group convo search in dmSearchComposite")
  "Deprecated( deprecate people and group convo search in dmSearchComposite)"
  slice_info: SliceInfo @deprecated(reason : "deprecate people and group convo search in dmSearchComposite")
}

"Generated from Strato space: `DMEvent`"
type DMEvent @strato_space(name : "DMEvent") {
  "A globally unique identifier"
  id: ID!
  "Generated from Strato column: [graphql/directmessages/legacy.DMEvent](https://strato.twitter.biz/web/browse/DMEvent/graphql/directmessages/legacy)"
  legacy: DMEventMetadata @strato_column(path : "graphql/directmessages/legacy.DMEvent") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/reactions.DMEvent](https://strato.twitter.biz/web/browse/DMEvent/graphql/directmessages/reactions)"
  reactions(from: NumericString, limit: Int, to: NumericString): DMReactionSliceResult @development @strato_column(path : "graphql/directmessages/reactions.DMEvent") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.convosvc.strato.EventDetail`](http://go/sg.thrift/EventDetail)"
type DMEventDetail @thrift_type(name : "EventDetail", package : "com.twitter.convosvc.strato") {
  custom_profile_id: NumericString @development
  dm: DirectMessageInfo @development
  initial_low_quality_state: DMInitialLowQualityState @development
  initiating_user: User @deprecated(reason : "migrated to initiating_user_results")
  initiating_user_result: UserResult @deprecated(reason : "migrated to initiating_user_results; field will always be null")
  initiating_user_results: UserResults @development
  is_new_one_to_one_convo: Boolean @development
  is_spam_hide: Boolean @development
  marked_as_abuse: Boolean @development
  message_id: NumericString @development
  name: String @development
  participants_snapshot: [User!] @deprecated(reason : "migrated to participants_snapshot_results")
  participants_snapshot_result: [UserResult] @deprecated(reason : "migrated to participants_snapshot_results; field will always be null")
  participants_snapshot_results: [UserResults!] @development
  possibly_spam: Boolean @development
  sender_registration_token: String @development
  users: [User!] @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!] @development
}

"Generated from type: [`com.twitter.convosvc.strato.DMEventItem`](http://go/sg.thrift/DMEventItem)"
type DMEventItem @thrift_type(name : "DMEventItem", package : "com.twitter.convosvc.strato") {
  dm_event: DMEvent! @deprecated(reason : "migrated to dm_event_results")
  dm_event_results: DMEventResults!
}

"Generated from type: [`com.twitter.convosvc.strato.Event`](http://go/sg.thrift/Event)"
type DMEventMetadata @thrift_type(name : "Event", package : "com.twitter.convosvc.strato") {
  affects_sort: Boolean @development
  conversation: DMConversation @deprecated(reason : "migrated to conversation_results")
  conversation_results: DMConversationResults @development
  created_at_millis: NumericString @development
  event_detail: DMEventDetail @development
  event_id: NumericString @development
  event_type: DMEventType! @development
  initiating_user: User @deprecated(reason : "migrated to initiating_user_results")
  initiating_user_result: UserResult @deprecated(reason : "migrated to initiating_user_results; field will always be null")
  initiating_user_results: UserResults @development
  request_id: String @development
}

"Generated from Strato space: `DMEventResults`"
type DMEventResults @strato_space(name : "DMEventResults") {
  "Generated from Strato column: [graphql/results/_result.DMEvent](https://strato.twitter.biz/web/browse/DMEvent/graphql/results/_result)"
  result: DMEventResult @development @strato_column(path : "graphql/results/_result.DMEvent") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from type: [`com.twitter.convosvc.strato.DMEventSlice`](http://go/sg.thrift/DMEventSlice)"
type DMEventSlice @thrift_type(name : "DMEventSlice", package : "com.twitter.convosvc.strato") {
  items: [DMEventItem]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.convosvc.strato.DMEventSliceFailure`](http://go/sg.thrift/DMEventSliceFailure)"
type DMEventSliceFailure @thrift_type(name : "DMEventSliceFailure", package : "com.twitter.convosvc.strato") {
  message: String
  reason: DMEventSliceFailureReason!
}

"Generated from type: [`com.twitter.convosvc.strato.DMEventUnavailable`](http://go/sg.thrift/DMEventUnavailable)"
type DMEventUnavailable @thrift_type(name : "DMEventUnavailable", package : "com.twitter.convosvc.strato") {
  message: String
  unavailable_reason: DMEventUnavailableReason!
}

"Generated from type: [`com.twitter.convosvc.strato.DMGroupConvoSearchItem`](http://go/sg.thrift/DMGroupConvoSearchItem)"
type DMGroupConvoSearchItem @thrift_type(name : "DMGroupConvoSearchItem", package : "com.twitter.convosvc.strato") {
  dm_convo_search: DMConversation! @deprecated(reason : "migrated to dm_convo_search_results")
  dm_convo_search_results: DMConversationResults!
  highlighting: DMHighlighting
}

"Generated from type: [`com.twitter.convosvc.strato.DMGroupConvoSlice`](http://go/sg.thrift/DMGroupConvoSlice)"
type DMGroupConvoSlice @thrift_type(name : "DMGroupConvoSlice", package : "com.twitter.convosvc.strato") {
  items: [DMGroupConvoSearchItem]!
  slice_info: SliceInfo!
}

"""
For DM search query highlighting

Generated from type: [`com.twitter.convosvc.strato.DMHighlighting`](http://go/sg.thrift/DMHighlighting)
"""
type DMHighlighting @thrift_type(name : "DMHighlighting", package : "com.twitter.convosvc.strato") {
  query_tokens: [String!]
}

"Generated from type: [`com.twitter.convosvc.strato.InitialLowQualityState`](http://go/sg.thrift/InitialLowQualityState)"
type DMInitialLowQualityState @thrift_type(name : "InitialLowQualityState", package : "com.twitter.convosvc.strato") {
  is_low_quality: Boolean @development
}

type DMLabeledConversationsSlice {
  items: [DMConversation!]! @deprecated(reason : "migrated to items_results")
  items_results: [DMConversationResults!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.convosvc.strato.DMMediaAttachment`](http://go/sg.thrift/DMMediaAttachment)"
type DMMediaAttachment @thrift_type(name : "DMMediaAttachment", package : "com.twitter.convosvc.strato") {
  media: ApiMedia! @development
}

"Generated from type: [`com.twitter.convosvc.strato.DMMessageSearchItem`](http://go/sg.thrift/DMMessageSearchItem)"
type DMMessageSearchItem @thrift_type(name : "DMMessageSearchItem", package : "com.twitter.convosvc.strato") {
  dm_event: DMEvent! @deprecated(reason : "migrated to dm_event_results")
  dm_event_results: DMEventResults!
  highlighting: DMHighlighting
}

"Generated from type: [`com.twitter.convosvc.strato.DMMessageSlice`](http://go/sg.thrift/DMMessageSlice)"
type DMMessageSlice @thrift_type(name : "DMMessageSlice", package : "com.twitter.convosvc.strato") {
  items: [DMMessageSearchListItem!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.convosvc.strato.DMMessageSliceQueryStringTooLong`](http://go/sg.thrift/DMMessageSliceQueryStringTooLong)"
type DMMessageSliceQueryStringTooLong @thrift_type(name : "DMMessageSliceQueryStringTooLong", package : "com.twitter.convosvc.strato") {
  message: String!
}

"Generated from type: [`com.twitter.convosvc.strato.DMPeopleConvoSearchItem`](http://go/sg.thrift/DMPeopleConvoSearchItem)"
type DMPeopleConvoSearchItem @thrift_type(name : "DMPeopleConvoSearchItem", package : "com.twitter.convosvc.strato") {
  dm_convo_search: DMConversation! @deprecated(reason : "migrated to dm_convo_search_results")
  dm_convo_search_results: DMConversationResults!
  highlighting: DMHighlighting
}

"Generated from type: [`com.twitter.convosvc.strato.DMReaction`](http://go/sg.thrift/DMReaction)"
type DMReaction @thrift_type(name : "DMReaction", package : "com.twitter.convosvc.strato") {
  created_at_millis: NumericString @development
  id: NumericString! @development
  reaction_key: String! @development
  sender: User! @deprecated(reason : "migrated to sender_results")
  sender_result: UserResult @deprecated(reason : "migrated to sender_results; field will always be null")
  sender_results: UserResults! @development
}

"Generated from type: [`com.twitter.convosvc.strato.DMReactionSlice`](http://go/sg.thrift/DMReactionSlice)"
type DMReactionSlice @thrift_type(name : "DMReactionSlice", package : "com.twitter.convosvc.strato") {
  items: [DMReaction]! @development
  slice_info: SliceInfo! @development
}

"Generated from type: [`com.twitter.convosvc.strato.DMReactionSliceFailure`](http://go/sg.thrift/DMReactionSliceFailure)"
type DMReactionSliceFailure @thrift_type(name : "DMReactionSliceFailure", package : "com.twitter.convosvc.strato") {
  message: String @development
  reason: DMReactionSliceFailureReason! @development
}

"Generated from type: [`com.twitter.convosvc.strato.DMReactions`](http://go/sg.thrift/DMReactions)"
type DMReactions @thrift_type(name : "DMReactions", package : "com.twitter.convosvc.strato") {
  conversation_id: String!
  message_id: NumericString!
  reaction_types: [ReactionType!]!
}

"Generated from type: [`com.twitter.convosvc.strato.DMTweetAttachment`](http://go/sg.thrift/DMTweetAttachment)"
type DMTweetAttachment @thrift_type(name : "DMTweetAttachment", package : "com.twitter.convosvc.strato") {
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults! @development
}

"Generated from type: [`com.twitter.convosvc.strato.DMUrl`](http://go/sg.thrift/DMUrl)"
type DMUrl @thrift_type(name : "DMUrl", package : "com.twitter.convosvc.strato") {
  "A rendering of the URL suitable for displaying to an end user"
  display_url: String! @development
  "The full, expanded version of the URL"
  expanded_url: String! @development
  "The start index of the original url in the DM text"
  from_index: Short! @development
  "The exact URL that appears in the DM text"
  original_url: String! @development
  "The end index of the original url in the DM text"
  to_index: Short! @development
}

"Generated from Strato space: `DataItem`"
type DataItem @strato_space(name : "DataItem") {
  """
  Get DataItem Dependencies from DataApi
  
  Generated from Strato column: [graphql/data-api/data-item/dependencies.DataItem](https://strato.twitter.biz/web/browse/DataItem/graphql/data-api/data-item/dependencies)
  """
  dependencies: [DataItem!] @development @strato_column(path : "graphql/data-api/data-item/dependencies.DataItem") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Get DataItem Metadata from DataApi
  
  Generated from Strato column: [graphql/data-api/data-item/metadata.DataItem](https://strato.twitter.biz/web/browse/DataItem/graphql/data-api/data-item/metadata)
  """
  metadata: DataItemMetaData @development @strato_column(path : "graphql/data-api/data-item/metadata.DataItem") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.ldc.dataapi.DataItemMetaData`](http://go/sg.thrift/DataItemMetaData)"
type DataItemMetaData @thrift_type(name : "DataItemMetaData", package : "com.twitter.ldc.dataapi") {
  id: Int!
  name: String!
  namespace_id: Int!
  namespace_name: String!
  primitive_type: LDCPrimitiveType!
  unique_id: Int53!
}

"Generated from type: [`com.twitter.strato.graphql.DataSaverPreferences`](http://go/sg.thrift/DataSaverPreferences)"
type DataSaverPreferences @thrift_type(name : "DataSaverPreferences", package : "com.twitter.strato.graphql") {
  enabled: Boolean!
  video_autoplay: VideoAutoplaySetting
}

"Generated from Strato space: `Deck`"
type Deck @strato_space(name : "Deck") {
  """
  Column to fetch a Deck object, provided a deckId. This is served as `config` under Deck space.
  
  Generated from Strato column: [graphql/gryphon/config.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/config)
  """
  config: AccountSyncDeck @strato_column(path : "graphql/gryphon/config.Deck") @strato_op(value : Fetch)
  """
  Returns the ordered list of DeckColumns that belongs to a Deck.
  
  Generated from Strato column: [graphql/gryphon/deckColumns.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/deckColumns)
  """
  deck_columns: [DeckColumn!] @strato_column(path : "graphql/gryphon/deckColumns.Deck") @strato_op(value : Fetch)
  """
  Returns the ordered list of DeckColumns that belongs to a Deck.
  
  Generated from Strato column: [graphql/gryphon/deckColumns_v2.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/deckColumns_v2)
  """
  deck_columns_v2: [AccountSyncDeckColumnV2!] @strato_column(path : "graphql/gryphon/deckColumns_v2.Deck") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `DeckColumn`"
type DeckColumn @strato_space(name : "DeckColumn") {
  """
  Column to fetch a DeckColumn object, provided a deckColumnId. This is served as `config` under DeckColumn space.
  
  Generated from Strato column: [graphql/gryphon/config.DeckColumn](https://strato.twitter.biz/web/browse/DeckColumn/graphql/gryphon/config)
  """
  config: AccountSyncDeckColumn @strato_column(path : "graphql/gryphon/config.DeckColumn") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.collaborate.DelegatedAccount`](http://go/sg.thrift/DelegatedAccount)"
type DelegatedAccount @thrift_type(name : "DelegatedAccount", package : "com.twitter.collaborate") {
  has_accepted: Boolean
  is_active: Boolean
  permissions: [NumericString!]
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from Strato space: `DelegationGroup`"
type DelegationGroup @strato_space(name : "DelegationGroup") {
  """
  Returns the account that is delegating access to the members of the specified Delegation Group.
  
  Generated from Strato column: [graphql/account-delegation/delegate/handle.DelegationGroup](https://strato.twitter.biz/web/browse/DelegationGroup/graphql/account-delegation/delegate/handle)
  """
  handle: User @deprecated(reason : "migrated to handle_results") @strato_column(path : "graphql/account-delegation/delegate/handle.DelegationGroup") @strato_op(value : Fetch)
  """
  Result field; Returns the account that is delegating access to the members of the specified Delegation Group.
  
  Generated from Strato column: [graphql/account-delegation/delegate/handle.DelegationGroup](https://strato.twitter.biz/web/browse/DelegationGroup/graphql/account-delegation/delegate/handle)
  """
  handle_result: UserResult @deprecated(reason : "migrated to handle_results; field will always be null") @strato_column(path : "graphql/account-delegation/delegate/handle.DelegationGroup") @strato_op(value : Fetch)
  """
  Result field; Returns the account that is delegating access to the members of the specified Delegation Group.
  
  Generated from Strato column: [graphql/account-delegation/delegate/handle.DelegationGroup](https://strato.twitter.biz/web/browse/DelegationGroup/graphql/account-delegation/delegate/handle)
  """
  handle_results: UserResults @development @strato_column(path : "graphql/account-delegation/delegate/handle.DelegationGroup") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns a list of members of the specified Delegation Group.
  
  Generated from Strato column: [graphql/account-delegation/delegate/members.DelegationGroup](https://strato.twitter.biz/web/browse/DelegationGroup/graphql/account-delegation/delegate/members)
  """
  members: [DelegationMembership!] @development @strato_column(path : "graphql/account-delegation/delegate/members.DelegationGroup") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `DelegationMembership`"
type DelegationMembership @strato_space(name : "DelegationMembership") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Returns the Role of the specified Delegation Membership for the authenticated user.
  
  Generated from Strato column: [graphql/account-delegation/delegate/role.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/role)
  """
  role: DelegationRole @development @strato_column(path : "graphql/account-delegation/delegate/role.DelegationMembership") @strato_op(value : Fetch)
  """
  Returns the status of the specified Delegation Membership for the authenticated user.
  
  Generated from Strato column: [graphql/account-delegation/delegate/status.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/status)
  """
  status: DelegationInvitationStatus @development @strato_column(path : "graphql/account-delegation/delegate/status.DelegationMembership") @strato_op(value : Fetch)
  """
  Returns the user object for the specified Delegation Membership.
  
  Generated from Strato column: [graphql/account-delegation/delegate/user.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/user)
  """
  user: User @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/account-delegation/delegate/user.DelegationMembership") @strato_op(value : Fetch)
  """
  Result field; Returns the user object for the specified Delegation Membership.
  
  Generated from Strato column: [graphql/account-delegation/delegate/user.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/user)
  """
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/account-delegation/delegate/user.DelegationMembership") @strato_op(value : Fetch)
  """
  Result field; Returns the user object for the specified Delegation Membership.
  
  Generated from Strato column: [graphql/account-delegation/delegate/user.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/user)
  """
  user_results: UserResults @development @strato_column(path : "graphql/account-delegation/delegate/user.DelegationMembership") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.bff.DeletePaymentMethodResponse`](http://go/sg.thrift/DeletePaymentMethodResponse)"
type DeletePaymentMethodResult @thrift_type(name : "DeletePaymentMethodResponse", package : "com.twitter.bff") {
  reason: String
  success: Boolean!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.DeleteProductError`](http://go/sg.thrift/DeleteProductError)"
type DeleteProductError @thrift_type(name : "DeleteProductError", package : "com.twitter.commerce.catalog.api.graphql") {
  failed_product_key: NumericString!
  message: String
}

type DeleteReactionResult {
  success: Boolean!
}

"Generated from type: [`com.twitter.tweetypie.graphql.DeleteTweetResponse`](http://go/sg.thrift/DeleteTweetResponse)"
type DeleteTweetResponse @thrift_type(name : "DeleteTweetResponse", package : "com.twitter.tweetypie.graphql") {
  "The deleted Tweet. Since the Tweet will always be not found after deletion, the TweetResult will always be empty."
  tweet: Tweet @deprecated(reason : "migrated to tweet_results")
  "Result field; The deleted Tweet. Since the Tweet will always be not found after deletion, the TweetResult will always be empty."
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  "Result field; The deleted Tweet. Since the Tweet will always be not found after deletion, the TweetResult will always be empty."
  tweet_results: TweetResults
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.DeletedProduct`](http://go/sg.thrift/DeletedProduct)"
type DeletedProduct @thrift_type(name : "DeletedProduct", package : "com.twitter.commerce.catalog.api.graphql") {
  deleted_product_key: NumericString!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DenyFollowRequestInvalidRequest`](http://go/sg.thrift/DenyFollowRequestInvalidRequest)"
type DenyFollowRequestInvalidRequest @thrift_type(name : "DenyFollowRequestInvalidRequest", package : "com.twitter.strato.columns.socialgraph") {
  deny_follow_request_invalid_request_reason: DenyFollowRequestInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DenyFollowRequestSuccess`](http://go/sg.thrift/DenyFollowRequestSuccess)"
type DenyFollowRequestSuccess @thrift_type(name : "DenyFollowRequestSuccess", package : "com.twitter.strato.columns.socialgraph") {
  deny_follow_request_success_reason: DenyFollowRequestSuccessReason!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.ButtonComponent`](http://go/sg.thrift/ButtonComponent)"
type DevCardButtonComponent @thrift_type(name : "ButtonComponent", package : "com.twitter.developer_built_cards.schema") {
  action: DevCardAction!
  style: DevCardButtonStyle!
  text: String!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.DataPoint`](http://go/sg.thrift/DataPoint)"
type DevCardDataPoint @thrift_type(name : "DataPoint", package : "com.twitter.developer_built_cards.schema") {
  label: String!
  value: Float!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.HeaderProperties`](http://go/sg.thrift/HeaderProperties)"
type DevCardHeaderProperties @thrift_type(name : "HeaderProperties", package : "com.twitter.developer_built_cards.schema") {
  sub_type: DevCardHeaderType!
  text: String!
  text_alignment: DevCardTextAlignment!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.HorizontalLineComponent`](http://go/sg.thrift/HorizontalLineComponent)"
type DevCardHorizontalLineComponent @thrift_type(name : "HorizontalLineComponent", package : "com.twitter.developer_built_cards.schema") {
  color: DevCardColor!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.ImageComponent`](http://go/sg.thrift/ImageComponent)"
type DevCardImageComponent @thrift_type(name : "ImageComponent", package : "com.twitter.developer_built_cards.schema") {
  alt_text: String!
  image_fill_type: DevCardImageFill!
  size: DevCardImageSize!
  url: String!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.ImageSize`](http://go/sg.thrift/ImageSize)"
type DevCardImageSize @thrift_type(name : "ImageSize", package : "com.twitter.developer_built_cards.schema") {
  height: Int!
  width: Int!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.LabelComponent`](http://go/sg.thrift/LabelComponent)"
type DevCardLabelComponent @thrift_type(name : "LabelComponent", package : "com.twitter.developer_built_cards.schema") {
  properties: DevCardLabelProperties!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.LayoutBehavior`](http://go/sg.thrift/LayoutBehavior)"
type DevCardLayoutBehavior @thrift_type(name : "LayoutBehavior", package : "com.twitter.developer_built_cards.schema") {
  axis: DevCardAxis!
  container_alignment: DevCardContainerAlignment!
  spacing: DevCardSpacing!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.LineGraphComponent`](http://go/sg.thrift/LineGraphComponent)"
type DevCardLineGraphComponent @thrift_type(name : "LineGraphComponent", package : "com.twitter.developer_built_cards.schema") {
  color: DevCardColor!
  data: [DevCardDataPoint!]!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.LinkAction`](http://go/sg.thrift/LinkAction)"
type DevCardLinkAction @thrift_type(name : "LinkAction", package : "com.twitter.developer_built_cards.schema") {
  url: String!
}

"Generated from type: [`com.twitter.developer_built_cards.schema.TextProperties`](http://go/sg.thrift/TextProperties)"
type DevCardTextProperties @thrift_type(name : "TextProperties", package : "com.twitter.developer_built_cards.schema") {
  color: DevCardColor!
  font_weight: DevCardFontWeight!
  sub_type: DevCardTextType!
  text: String!
  text_alignment: DevCardTextAlignment!
}

"Generated from Strato space: `DeveloperBuiltCard`"
type DeveloperBuiltCard @strato_space(name : "DeveloperBuiltCard") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

type DeveloperBuiltCardContainer {
  background_color: DevCardColor @development
  border_color: DevCardColor @development
  components: [DevCardComponent!]! @development
  containers: [DeveloperBuiltCardContainer!]! @development
  corner_radius: DevCardRadiusSize @development
  layout_behavior: DevCardLayoutBehavior! @development
}

"Generated from Strato space: `DeveloperContentFilter`"
type DeveloperContentFilter @strato_space(name : "DeveloperContentFilter") {
  """
  [DevPlatform Content Controls] Fetch Enabled State for Developer Content Filter for Logged In User
  
  Generated from Strato column: [graphql/dataproducts/content_controls/enabled_for_viewer.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/enabled_for_viewer)
  """
  enabled_for_viewer: Boolean @development @strato_column(path : "graphql/dataproducts/content_controls/enabled_for_viewer.DeveloperContentFilter") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Fetch Enabled Mode for Developer Content Filter for Logged In User
  
  Generated from Strato column: [graphql/dataproducts/content_controls/hide_mode_for_viewer.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/hide_mode_for_viewer)
  """
  hide_mode_for_viewer: UserDeveloperContentFilterConfigEnabledMode @development @strato_column(path : "graphql/dataproducts/content_controls/hide_mode_for_viewer.DeveloperContentFilter") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Fetch Developer Content Filter Icon Media Key
  
  Generated from Strato column: [graphql/dataproducts/content_controls/icon_media_key.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/icon_media_key)
  """
  icon_media_key: String @development @strato_column(path : "graphql/dataproducts/content_controls/icon_media_key.DeveloperContentFilter") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Fetch Developer Content Filter Icon Url
  
  Generated from Strato column: [graphql/dataproducts/content_controls/icon_url.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/icon_url)
  """
  icon_url: String @development @strato_column(path : "graphql/dataproducts/content_controls/icon_url.DeveloperContentFilter") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  [DevPlatform Content Controls] Fetch Developer Content Filter Name
  
  Generated from Strato column: [graphql/dataproducts/content_controls/name.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/name)
  """
  name: String @development @strato_column(path : "graphql/dataproducts/content_controls/name.DeveloperContentFilter") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Get Developer Content Filter Rapid Prototype Field
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rapidPrototypeField.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/rapidPrototypeField)
  """
  rapid_prototype_field(field_name: String!): String @development @strato_column(path : "graphql/dataproducts/content_controls/rapidPrototypeField.DeveloperContentFilter") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Get Developer Content Filter Rapid Prototype Field for Viewer
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rapidPrototypeFieldForViewer.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/rapidPrototypeFieldForViewer)
  """
  rapid_prototype_field_for_viewer(field_name: String!): String @development @strato_column(path : "graphql/dataproducts/content_controls/rapidPrototypeFieldForViewer.DeveloperContentFilter") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  [DevPlatform Content Controls] Get all Developer Content Filter Rules for a specific Filter.
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rulesSlice.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/rulesSlice)
  """
  rules_slice: ContentFilterRulesCollectionSlice @development @strato_column(path : "graphql/dataproducts/content_controls/rulesSlice.DeveloperContentFilter") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Fetch Developer Content Filter State
  
  Generated from Strato column: [graphql/dataproducts/content_controls/state.DeveloperContentFilter](https://strato.twitter.biz/web/browse/DeveloperContentFilter/graphql/dataproducts/content_controls/state)
  """
  state: DeveloperContentFilterState @development @strato_column(path : "graphql/dataproducts/content_controls/state.DeveloperContentFilter") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DeveloperContentFilterDecision`](http://go/sg.thrift/DeveloperContentFilterDecision)"
type DeveloperContentFilterDecision @thrift_type(name : "DeveloperContentFilterDecision", package : "com.twitter.strato.columns.content_controls") {
  decision_type: DeveloperContentFilterDecisionType!
  reason: String
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DeveloperContentFilterRule`](http://go/sg.thrift/DeveloperContentFilterRule)"
type DeveloperContentFilterRule @thrift_type(name : "DeveloperContentFilterRule", package : "com.twitter.strato.columns.content_controls") {
  decision: DeveloperContentFilterDecision!
  rule: String!
  rule_id: NumericString @development
}

type DeveloperContentFilterSlice {
  items: [DeveloperContentFilter!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceFollowInvalidRequestResult`](http://go/sg.thrift/DeviceFollowInvalidRequestResult)"
type DeviceFollowInvalidRequestResult @thrift_type(name : "DeviceFollowInvalidRequestResult", package : "com.twitter.strato.columns.socialgraph") {
  device_follow_invalid_request_reason: DeviceFollowInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceFollowSuccessResult`](http://go/sg.thrift/DeviceFollowSuccessResult)"
type DeviceFollowSuccessResult @thrift_type(name : "DeviceFollowSuccessResult", package : "com.twitter.strato.columns.socialgraph") {
  device_follow_success_reason: DeviceFollowSuccessReason!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceUnfollowInvalidRequestResult`](http://go/sg.thrift/DeviceUnfollowInvalidRequestResult)"
type DeviceUnfollowInvalidRequestResult @thrift_type(name : "DeviceUnfollowInvalidRequestResult", package : "com.twitter.strato.columns.socialgraph") {
  device_unfollow_invalid_request_reason: DeviceUnfollowInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceUnfollowSuccessResult`](http://go/sg.thrift/DeviceUnfollowSuccessResult)"
type DeviceUnfollowSuccessResult @thrift_type(name : "DeviceUnfollowSuccessResult", package : "com.twitter.strato.columns.socialgraph") {
  device_unfollow_success_reason: DeviceUnfollowSuccessReason!
}

"Generated from type: [`com.twitter.convosvc.strato.Dm`](http://go/sg.thrift/Dm)"
type DirectMessageInfo @thrift_type(name : "Dm", package : "com.twitter.convosvc.strato") {
  attachments: [DMAttachment!]! @development
  created_at_sec: NumericString! @development
  id: NumericString! @development
  recipient: User! @deprecated(reason : "migrated to recipient_results")
  recipient_result: UserResult @deprecated(reason : "migrated to recipient_results; field will always be null")
  recipient_results: UserResults! @development
  sender: User! @deprecated(reason : "migrated to sender_results")
  sender_result: UserResult @deprecated(reason : "migrated to sender_results; field will always be null")
  sender_results: UserResults! @development
  text: String! @development
  urls: [DMUrl!]! @development
}

type DisplayableMactProviderModel {
  documentation_url: String!
  is_integrated: Boolean!
  landing_page_url: String!
  logo_image_path: String!
  name: String!
  provider_id: Int53!
}

"Generated from type: [`com.twitter.convosvc.strato.DMPeopleConvoSlice`](http://go/sg.thrift/DMPeopleConvoSlice)"
type DmPeopleConvoSlice @thrift_type(name : "DMPeopleConvoSlice", package : "com.twitter.convosvc.strato") {
  items: [DMPeopleConvoSearchItem]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.convosvc.search.SearchResponse`](http://go/sg.thrift/SearchResponse)"
type DmSearchResponse @thrift_type(name : "SearchResponse", package : "com.twitter.convosvc.search") {
  "Deprecated( deprecate group convo search in dmSearchComposite)"
  groups: DMConvoSlice @deprecated(reason : "deprecate group convo search in dmSearchComposite")
  "Deprecated( deprecate people convo search in dmSearchComposite)"
  people: DMConvoSlice @deprecated(reason : "deprecate people convo search in dmSearchComposite")
}

"Generated from type: [`com.twitter.incentives.replyvoting.DownvoteWriteResponse`](http://go/sg.thrift/DownvoteWriteResponse)"
type Downvote @thrift_type(name : "DownvoteWriteResponse", package : "com.twitter.incentives.replyvoting") {
  is_downvoted: Boolean!
  success: Boolean!
}

"Generated from type: [`com.twitter.incentives.replyvoting.DownvoteCountResponse`](http://go/sg.thrift/DownvoteCountResponse)"
type DownvoteCount @thrift_type(name : "DownvoteCountResponse", package : "com.twitter.incentives.replyvoting") {
  downvote_count: NumericString!
}

"Generated from type: [`com.twitter.incentives.replyvoting.DownvotePerspectiveResponse`](http://go/sg.thrift/DownvotePerspectiveResponse)"
type DownvotePerspective @thrift_type(name : "DownvotePerspectiveResponse", package : "com.twitter.incentives.replyvoting") {
  is_downvoted: Boolean!
}

"Generated from type: [`com.twitter.scheduleanddraftapi.DraftListResponse`](http://go/sg.thrift/DraftListResponse)"
type DraftListResponse @thrift_type(name : "DraftListResponse", package : "com.twitter.scheduleanddraftapi") {
  last_modified: Int53
  response_data: [DraftTweet!]
  response_status: ResponseStatus
}

"Generated from Strato space: `DraftTweet`"
type DraftTweet @strato_space(name : "DraftTweet") {
  "Generated from Strato column: [graphql/draft/draftInfo.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/draftInfo)"
  draft_info: SchedulingInfo @strato_column(path : "graphql/draft/draftInfo.DraftTweet") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "Generated from Strato column: [graphql/draft/mediaEntities.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/mediaEntities)"
  media_entities: [ApiMedia!] @strato_column(path : "graphql/draft/mediaEntities.DraftTweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/draft/repliedTweet.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/repliedTweet)"
  replied_tweet: Tweet @deprecated(reason : "migrated to replied_tweet_results") @strato_column(path : "graphql/draft/repliedTweet.DraftTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/draft/repliedTweet.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/repliedTweet)"
  replied_tweet_result: TweetResult @deprecated(reason : "migrated to replied_tweet_results; field will always be null") @strato_column(path : "graphql/draft/repliedTweet.DraftTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/draft/repliedTweet.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/repliedTweet)"
  replied_tweet_results: TweetResults @strato_column(path : "graphql/draft/repliedTweet.DraftTweet") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  "Generated from Strato column: [graphql/draft/tweetCreateRequest.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/tweetCreateRequest)"
  tweet_create_request: TweetCreateRequest @strato_column(path : "graphql/draft/tweetCreateRequest.DraftTweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/draft/user.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/user)"
  user: User @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/draft/user.DraftTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/draft/user.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/user)"
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/draft/user.DraftTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/draft/user.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/user)"
  user_results: UserResults @strato_column(path : "graphql/draft/user.DraftTweet") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.tweb3.graphql.model.ERC1155`](http://go/sg.thrift/ERC1155)"
type ERC1155 @thrift_type(name : "ERC1155", package : "com.twitter.tweb3.graphql.model") {
  address: String!
  name: String!
  network: Network!
  symbol: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.ERC20`](http://go/sg.thrift/ERC20)"
type ERC20 @thrift_type(name : "ERC20", package : "com.twitter.tweb3.graphql.model") {
  address: String!
  name: String!
  network: Network!
  symbol: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.ERC721`](http://go/sg.thrift/ERC721)"
type ERC721 @thrift_type(name : "ERC721", package : "com.twitter.tweb3.graphql.model") {
  address: String!
  cryptopunks: Boolean!
  name: String!
  network: Network!
  symbol: String!
}

type EasyPromoteMetrics {
  key: EasyPromoteMetricType!
  value: TweetActivityMetric!
}

"Generated from type: [`com.twitter.easypromote.PromotionResponse`](http://go/sg.thrift/PromotionResponse)"
type EasypromotePromotionResponse @thrift_type(name : "PromotionResponse", package : "com.twitter.easypromote") {
  campaign: Campaign
  response_code: EasypromotePromotionResponseCode!
}

"Generated from type: [`com.twitter.easypromote.Range`](http://go/sg.thrift/Range)"
type EasypromoteRange @thrift_type(name : "Range", package : "com.twitter.easypromote") {
  high: NumericString
  low: NumericString
}

"Generated from type: [`com.twitter.tweetypie.EditControlEdit`](http://go/sg.thrift/EditControlEdit)"
type EditControlEdit @thrift_type(name : "EditControlEdit", package : "com.twitter.tweetypie") {
  edit_control_initial: EditControlInitial
  initial_tweet_id: NumericString!
}

"Generated from type: [`com.twitter.tweetypie.EditControlInitial`](http://go/sg.thrift/EditControlInitial)"
type EditControlInitial @thrift_type(name : "EditControlInitial", package : "com.twitter.tweetypie") {
  edit_tweet_ids: [NumericString!]!
  editable_until_msecs: NumericString
}

type EmailNotificationSettings {
  send_account_updates_email: Boolean!
  send_activation_email: Boolean!
  send_address_book_notification_email: Boolean!
  send_email_newsletter: Boolean!
  send_email_vit_weekly: Boolean!
  send_follow_recs_email: Boolean!
  send_login_notification_email: Boolean!
  send_network_activity_email: Boolean!
  send_network_digest: DigestSchedule!
  send_new_direct_text_email: Boolean!
  send_partner_email: Boolean!
  send_performance_digest: DigestSchedule!
  send_resurrection_email: Boolean!
  send_shared_tweet_email: Boolean!
  send_similar_people_email: Boolean!
  send_smb_sales_marketing_email: Boolean!
  send_survey_email: Boolean!
  send_twitter_emails: Boolean!
}

"Generated from type: [`com.twitter.strato.graphql.EntitySet`](http://go/sg.thrift/EntitySet)"
type EntitySet @thrift_type(name : "EntitySet", package : "com.twitter.strato.graphql") {
  hashtags: [ApiTagEntity!]
  media: [ApiMediaEntity!]
  symbols: [ApiTagEntity!]
  urls: [UrlsEntity!]
  user_mentions: [ApiMentionEntity!]
}

"Generated from Strato space: `ExampleEntity`"
type ExampleEntity @strato_space(name : "ExampleEntity") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `ExampleEntityResults`"
type ExampleEntityResults @strato_space(name : "ExampleEntityResults") {
  "Generated from Strato column: [graphql/results/_result.ExampleEntity](https://strato.twitter.biz/web/browse/ExampleEntity/graphql/results/_result)"
  result: ExampleEntityResult @example @strato_column(path : "graphql/results/_result.ExampleEntity") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from type: [`com.twitter.strato.graphql.ExampleEntityUnavailable`](http://go/sg.thrift/ExampleEntityUnavailable)"
type ExampleEntityUnavailable @thrift_type(name : "ExampleEntityUnavailable", package : "com.twitter.strato.graphql") {
  message: String
  unavailable_reason: ExampleEntityUnavailableReason!
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetFollowInvalidResult`](http://go/sg.thrift/ExclusiveTweetFollowInvalidResult)"
type ExclusiveTweetFollowInvalidResult @thrift_type(name : "ExclusiveTweetFollowInvalidResult", package : "com.twitter.strato.columns.audience_rewards") {
  exclusive_tweet_follow_invalid_reason: ExclusiveTweetFollowInvalidReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetFollowSuccessResult`](http://go/sg.thrift/ExclusiveTweetFollowSuccessResult)"
type ExclusiveTweetFollowSuccessResult @thrift_type(name : "ExclusiveTweetFollowSuccessResult", package : "com.twitter.strato.columns.audience_rewards") {
  exclusive_tweet_follow_success_reason: ExclusiveTweetFollowSuccessReason!
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetUnfollowInvalidResult`](http://go/sg.thrift/ExclusiveTweetUnfollowInvalidResult)"
type ExclusiveTweetUnfollowInvalidResult @thrift_type(name : "ExclusiveTweetUnfollowInvalidResult", package : "com.twitter.strato.columns.audience_rewards") {
  exclusive_tweet_unfollow_invalid_reason: ExclusiveTweetUnfollowInvalidReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetUnfollowSuccessResult`](http://go/sg.thrift/ExclusiveTweetUnfollowSuccessResult)"
type ExclusiveTweetUnfollowSuccessResult @thrift_type(name : "ExclusiveTweetUnfollowSuccessResult", package : "com.twitter.strato.columns.audience_rewards") {
  exclusive_tweet_unfollow_success_reason: ExclusiveTweetUnfollowSuccessReason!
}

type ExperimentValuesEntry {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.result.ExpiredVerificationSession`](http://go/sg.thrift/ExpiredVerificationSession)"
type ExpiredVerificationSession @thrift_type(name : "ExpiredVerificationSession", package : "com.twitter.tweb3.graphql.result") {
  msg: String
}

"Generated from type: [`com.twitter.guide.settings.ExploreSettings`](http://go/sg.thrift/ExploreSettings)"
type ExploreSettings @thrift_type(name : "ExploreSettings", package : "com.twitter.guide.settings") {
  places: [Place!]!
  use_current_location: Boolean!
  use_personalized_trends: Boolean!
}

type FeedbackActionsEntry {
  key: String!
  value: TimelineFeedbackAction!
}

"Generated from type: [`com.twitter.ads.fleets.FleetAd`](http://go/sg.thrift/FleetAd)"
type FleetAd @thrift_type(name : "FleetAd", package : "com.twitter.ads.fleets") {
  ad_metadata_from_impression: FleetAdMetada!
  card: Card!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.ads.fleets.FleetAdMetaData`](http://go/sg.thrift/FleetAdMetaData)"
type FleetAdMetada @thrift_type(name : "FleetAdMetaData", package : "com.twitter.ads.fleets") {
  impression_id: NumericString
  impression_string: String
  insertion_position: Short
}

"Generated from Strato space: `FleetThread`"
type FleetThread @strato_space(name : "FleetThread") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowFailedResult`](http://go/sg.thrift/FollowFailedResult)"
type FollowFailedResult @thrift_type(name : "FollowFailedResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  follow_failed_reason: FollowFailedReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowInvalidRequestResult`](http://go/sg.thrift/FollowInvalidRequestResult)"
type FollowInvalidRequestResult @thrift_type(name : "FollowInvalidRequestResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  follow_invalid_request_reason: FollowInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.FollowRetweetsFailure`](http://go/sg.thrift/FollowRetweetsFailure)"
type FollowRetweetsFailure @thrift_type(name : "FollowRetweetsFailure", package : "com.twitter.strato.columns.socialgraph") {
  failure_reason: FollowRetweetsFailureReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.FollowRetweetsSuccess`](http://go/sg.thrift/FollowRetweetsSuccess)"
type FollowRetweetsSuccess @thrift_type(name : "FollowRetweetsSuccess", package : "com.twitter.strato.columns.socialgraph") {
  success_reason: FollowRetweetsSuccessReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowSuccessResult`](http://go/sg.thrift/FollowSuccessResult)"
type FollowSuccessResult @thrift_type(name : "FollowSuccessResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  follow_success_reason: FollowSuccessReason!
}

"Generated from Strato space: `FundingSourceView`"
type FundingSourceView @strato_space(name : "FundingSourceView") {
  "A globally unique identifier"
  id: ID!
  """
  Fetch metrics for a Funding Source View
  
  Generated from Strato column: [graphql/ads/hubble/funding-source-view/metricsTotal.FundingSourceView](https://strato.twitter.biz/web/browse/FundingSourceView/graphql/ads/hubble/funding-source-view/metricsTotal)
  """
  metrics_total(breakdown_category: HubbleMetricsTotalBreakdownCategoryInput, from_time: AnalyticsTimestampInput!, requested_metrics: [HubbleMetricTypeInput!]!, to_time: AnalyticsTimestampInput!): [HubbleMetricsTotalValue!] @development @strato_column(path : "graphql/ads/hubble/funding-source-view/metricsTotal.FundingSourceView") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: HubbleFundingSourceViewKey!
  """
  Get filtered Funding Instruments associated with this account
  
  Generated from Strato column: [graphql/ads/hubble/funding-source-view/slice.FundingSourceView](https://strato.twitter.biz/web/browse/FundingSourceView/graphql/ads/hubble/funding-source-view/slice)
  """
  slice(cursor: String, next: Int): AdFundingSourceSlice @development @strato_column(path : "graphql/ads/hubble/funding-source-view/slice.FundingSourceView") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.strato.graphql.GeoEntity`](http://go/sg.thrift/GeoEntity)"
type GeoEntity @thrift_type(name : "GeoEntity", package : "com.twitter.strato.graphql") {
  country_code: String
  display_name: String
  entity_id: String
  geo_point: GeoPoint
  locality: String
  population: Int53
  region: String
  sub_region: String
  timezone: String
}

"Generated from type: [`com.twitter.strato.graphql.GeoEntityWrapper`](http://go/sg.thrift/GeoEntityWrapper)"
type GeoEntityWrapper @thrift_type(name : "GeoEntityWrapper", package : "com.twitter.strato.graphql") {
  geo_entity: GeoEntity
}

"Generated from type: [`com.twitter.strato.graphql.GeoPoint`](http://go/sg.thrift/GeoPoint)"
type GeoPoint @thrift_type(name : "GeoPoint", package : "com.twitter.strato.graphql") {
  latitude: Float
  longitude: Float
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.GoogleProductCategory`](http://go/sg.thrift/GoogleProductCategory)"
type GoogleProductCategory @thrift_type(name : "GoogleProductCategory", package : "com.twitter.commerce.catalog.api.graphql") {
  google_product_category_id: Int
  google_product_category_name: String
  shortened_google_product_category_name: String
}

"Generated from type: [`com.twitter.affiliates.HighlightedUserLabel`](http://go/sg.thrift/HighlightedUserLabel)"
type HighlightedUserLabel @thrift_type(name : "HighlightedUserLabel", package : "com.twitter.affiliates") {
  badge: BadgeInfo
  description: String!
  icon: IconInfo
  long_description: TimelineRichText
  url: TimelineUrl
  user_label_type: UserLabelType
}

"Generated from type: [`com.twitter.affiliates.HighlightedUserLabelResponse`](http://go/sg.thrift/HighlightedUserLabelResponse)"
type HighlightedUserLabelResponse @thrift_type(name : "HighlightedUserLabelResponse", package : "com.twitter.affiliates") {
  label: HighlightedUserLabel
}

type HomeTopicsNavigatorSlices {
  items: [HomeTopicsNavigatorSlicesItem!]!
  slice_info: SliceInfo!
}

type HomeTopicsNavigatorSlicesValidationError {
  message: String!
}

type HomeTopicsNavigatorSlicesValidationErrors {
  errors: [HomeTopicsNavigatorSlicesValidationError!]!
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.HourMinute`](http://go/sg.thrift/HourMinute)"
type HourMinute @thrift_type(name : "HourMinute", package : "com.twitter.bizprofiles.manhattan") {
  hour: Short!
  minute: Short!
}

"Generated from type: [`com.twitter.hubble.AdFilters`](http://go/sg.thrift/AdFilters)"
type HubbleAdFilters @thrift_type(name : "AdFilters", package : "com.twitter.hubble") {
  filter_by_ad_group_ids: [NumericString!] @development
  filter_by_campaign_ids: [NumericString!] @development
  filter_by_creative_ids: [NumericString!] @development
  filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilter @development
  filter_by_funding_source_ids: [NumericString!] @development
  filter_by_objectives: [HubbleObjective!] @development
  include_deleted: Boolean @development
}

"Generated from type: [`com.twitter.hubble.AdGroupFilters`](http://go/sg.thrift/AdGroupFilters)"
type HubbleAdGroupFilters @thrift_type(name : "AdGroupFilters", package : "com.twitter.hubble") {
  filter_by_ad_group_ids: [NumericString!] @development
  filter_by_campaign_ids: [NumericString!] @development
  filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilter @development
  filter_by_funding_source_ids: [NumericString!] @development
  filter_by_objectives: [HubbleObjective!] @development
  include_deleted: Boolean @development
}

"Generated from type: [`com.twitter.hubble.AdGroupViewKey`](http://go/sg.thrift/AdGroupViewKey)"
type HubbleAdGroupViewKey @thrift_type(name : "AdGroupViewKey", package : "com.twitter.hubble") {
  ad_account_id: NumericString! @development
  filters: HubbleAdGroupFilters! @development
}

"Generated from type: [`com.twitter.hubble.AdViewKey`](http://go/sg.thrift/AdViewKey)"
type HubbleAdViewKey @thrift_type(name : "AdViewKey", package : "com.twitter.hubble") {
  ad_account_id: NumericString! @development
  filters: HubbleAdFilters! @development
}

"Generated from type: [`com.twitter.hubble.BreakdownSegment`](http://go/sg.thrift/BreakdownSegment)"
type HubbleBreakdownSegment @thrift_type(name : "BreakdownSegment", package : "com.twitter.hubble") {
  "indicates if this segment has further breakdowns"
  has_sub_segments: Boolean! @development
  "entity id of the segment"
  segment_id: Int53! @development
  "display name for the segment"
  segment_name: String! @development
  "ec segment value of the segment"
  segment_value: Int53 @development
}

"Generated from type: [`com.twitter.hubble.CampaignFilters`](http://go/sg.thrift/CampaignFilters)"
type HubbleCampaignFilters @thrift_type(name : "CampaignFilters", package : "com.twitter.hubble") {
  filter_by_campaign_ids: [NumericString!] @development
  filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilter @development
  filter_by_funding_source_ids: [NumericString!] @development
  filter_by_objectives: [HubbleObjective!] @development
  include_deleted: Boolean @development
}

"Generated from type: [`com.twitter.hubble.CampaignViewKey`](http://go/sg.thrift/CampaignViewKey)"
type HubbleCampaignViewKey @thrift_type(name : "CampaignViewKey", package : "com.twitter.hubble") {
  ad_account_id: NumericString! @development
  filters: HubbleCampaignFilters! @development
}

"Generated from type: [`com.twitter.hubble.DeliveredInIntervalFilter`](http://go/sg.thrift/DeliveredInIntervalFilter)"
type HubbleDeliveredInIntervalFilter @thrift_type(name : "DeliveredInIntervalFilter", package : "com.twitter.hubble") {
  end_date: String! @development
  start_date: String! @development
}

"Generated from type: [`com.twitter.hubble.FundingSourceFilters`](http://go/sg.thrift/FundingSourceFilters)"
type HubbleFundingSourceFilters @thrift_type(name : "FundingSourceFilters", package : "com.twitter.hubble") {
  filter_by_delivered_in_interval: HubbleDeliveredInIntervalFilter @development
  filter_by_funding_source_ids: [NumericString!] @development
  filter_by_funding_source_type: [HubbleFundingSourceType!] @development
  include_deleted: Boolean @development
}

"Generated from type: [`com.twitter.hubble.FundingSourceViewKey`](http://go/sg.thrift/FundingSourceViewKey)"
type HubbleFundingSourceViewKey @thrift_type(name : "FundingSourceViewKey", package : "com.twitter.hubble") {
  ad_account_id: NumericString! @development
  filters: HubbleFundingSourceFilters! @development
}

"Generated from type: [`com.twitter.hubble.MetricsTimeSeriesValue`](http://go/sg.thrift/MetricsTimeSeriesValue)"
type HubbleMetricsTimeSeriesValue @thrift_type(name : "MetricsTimeSeriesValue", package : "com.twitter.hubble") {
  metric_values: [HubbleMetricsTotalValue!]! @development
  timestamp: String! @development
}

"Generated from type: [`com.twitter.hubble.MetricsTotalValue`](http://go/sg.thrift/MetricsTotalValue)"
type HubbleMetricsTotalValue @thrift_type(name : "MetricsTotalValue", package : "com.twitter.hubble") {
  breakdown_segment: HubbleBreakdownSegment @development
  metric_type: HubbleMetricType! @development
  metric_value: Float @development
}

"Generated from type: [`com.twitter.incentives.jiminy.HumanizationNudge`](http://go/sg.thrift/HumanizationNudge)"
type HumanizationNudge @thrift_type(name : "HumanizationNudge", package : "com.twitter.incentives.jiminy") {
  in_reply_to_user: HumanizationNudgeUser
  mutual_topics: [HumanizationNudgeTopic!]!
  nudge_id: NumericString!
  social_proof_followers: [HumanizationNudgeUser!]!
}

"Generated from type: [`com.twitter.incentives.jiminy.HumanizationNudgeTopic`](http://go/sg.thrift/HumanizationNudgeTopic)"
type HumanizationNudgeTopic @thrift_type(name : "HumanizationNudgeTopic", package : "com.twitter.incentives.jiminy") {
  name: String!
  topic_id: NumericString!
}

"Generated from type: [`com.twitter.incentives.jiminy.HumanizationNudgeUser`](http://go/sg.thrift/HumanizationNudgeUser)"
type HumanizationNudgeUser @thrift_type(name : "HumanizationNudgeUser", package : "com.twitter.incentives.jiminy") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.ubs.HydraGuest`](http://go/sg.thrift/HydraGuest)"
type HydraGuest @thrift_type(name : "HydraGuest", package : "com.twitter.ubs") {
  avatar_url: String
  display_name: String
  end_time: Int53
  participant_index: Int53
  session_uuid: String
  start: Int53
  user: User @deprecated(reason : "migrated to user_results")
  user_id: String
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults
  username: String
}

"Generated from type: [`com.twitter.affiliates.IconInfo`](http://go/sg.thrift/IconInfo)"
type IconInfo @thrift_type(name : "IconInfo", package : "com.twitter.affiliates") {
  icon_type: IconType!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.ImageAsset`](http://go/sg.thrift/ImageAsset)"
type ImageAsset @thrift_type(name : "ImageAsset", package : "com.twitter.audiencerewards.productcatalog") {
  url: String!
}

"Generated from type: [`com.twitter.strato.graphql.ImageStickerCore`](http://go/sg.thrift/ImageStickerCore)"
type ImageStickerCore @thrift_type(name : "ImageStickerCore", package : "com.twitter.strato.graphql") {
  alt_text: String
  full_image: StickerImage!
  is_animated: Boolean!
  provider: ImageStickerProvider!
  thumbnail_images: [StickerImage!]!
}

"Generated from type: [`com.twitter.strato.graphql.ImageStickerProvider`](http://go/sg.thrift/ImageStickerProvider)"
type ImageStickerProvider @thrift_type(name : "ImageStickerProvider", package : "com.twitter.strato.graphql") {
  display_name: String!
  id: String!
}

type ImmediateReactionsEntry {
  key: String!
  value: [TimelineTimelineInstruction]!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.AudienceRewards`](http://go/sg.thrift/AudienceRewards)"
type InAppPurchaseAudienceRewards @thrift_type(name : "AudienceRewards", package : "com.twitter.in_app_purchases.graphql") {
  tweet_id: NumericString!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.Coins`](http://go/sg.thrift/Coins)"
type InAppPurchaseCoins @thrift_type(name : "Coins", package : "com.twitter.in_app_purchases.graphql") {
  balance: Int!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.History`](http://go/sg.thrift/History)"
type InAppPurchaseHistory @thrift_type(name : "History", package : "com.twitter.in_app_purchases.graphql") {
  before_payment_id: String
  payments: [InAppPurchasePayment!]!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.HistoryResult`](http://go/sg.thrift/HistoryResult)"
type InAppPurchaseHistoryResult @thrift_type(name : "HistoryResult", package : "com.twitter.in_app_purchases.graphql") {
  history: InAppPurchaseHistory!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.Payment`](http://go/sg.thrift/Payment)"
type InAppPurchasePayment @thrift_type(name : "Payment", package : "com.twitter.in_app_purchases.graphql") {
  current_status: InAppPurchasePaymentStatus!
  external_transaction_id: String
  id: String!
  payment_events: [InAppPurchasePaymentEvent!]!
  product_id: String
  "Deprecated( no longer used)"
  redemption_metadata: InAppPurchaseRedemptionMetadata @deprecated(reason : "no longer used")
  source: InAppPurchaseSource!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.PaymentEvent`](http://go/sg.thrift/PaymentEvent)"
type InAppPurchasePaymentEvent @thrift_type(name : "PaymentEvent", package : "com.twitter.in_app_purchases.graphql") {
  status: InAppPurchasePaymentStatus!
  timestamp_in_millis: Int53!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProduct`](http://go/sg.thrift/InAppPurchaseProduct)"
type InAppPurchaseProductSliceItem @thrift_type(name : "InAppPurchaseProduct", package : "com.twitter.audiencerewards.productcatalog") {
  apple_app_store_id: String
  currency: String!
  description: String!
  external_identifier: String
  google_play_store_id: String
  id: String!
  metadata: InAppPurchaseProductMetadata
  name: String!
  price: Int53!
  status: InAppPurchaseProductStatus!
  thumbnail_url: String
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProductsSlice`](http://go/sg.thrift/InAppPurchaseProductsSlice)"
type InAppPurchaseProductsSlice @thrift_type(name : "InAppPurchaseProductsSlice", package : "com.twitter.audiencerewards.productcatalog") {
  items: [InAppPurchaseProductSliceItem!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.RedeemPurchaseResult`](http://go/sg.thrift/RedeemPurchaseResult)"
type InAppPurchaseRedemption @thrift_type(name : "RedeemPurchaseResult", package : "com.twitter.in_app_purchases.graphql") {
  transactions: [InAppPurchaseTransaction!]!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.SubscriptionMetadata`](http://go/sg.thrift/SubscriptionMetadata)"
type InAppPurchaseSubscriptionMetadata @thrift_type(name : "SubscriptionMetadata", package : "com.twitter.in_app_purchases.graphql") {
  claim_id: String!
  creator: User @deprecated(reason : "migrated to creator_results")
  creator_result: UserResult @deprecated(reason : "migrated to creator_results; field will always be null")
  creator_results: UserResults @development
  product: SubscriptionProduct!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.Transaction`](http://go/sg.thrift/Transaction)"
type InAppPurchaseTransaction @thrift_type(name : "Transaction", package : "com.twitter.in_app_purchases.graphql") {
  external_transaction_id: String!
  metadata: InAppPurchaseRedemptionMetadata
  payment_id: String!
  status: InAppPurchasePaymentStatus!
}

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.InteractiveText`](http://go/sg.thrift/InteractiveText)"
type InteractiveText @thrift_type(name : "InteractiveText", package : "com.twitter.strato.columns.creative_entity_enrichments") {
  "Deprecated( use colorV2 instead)"
  color: String! @deprecated(reason : "use colorV2 instead")
  color_v2: InteractiveTextColor
  id: Short
  index_end: Short!
  index_start: Short!
  target: Target
}

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.InteractiveTextEnrichment`](http://go/sg.thrift/InteractiveTextEnrichment)"
type InteractiveTextEnrichment @thrift_type(name : "InteractiveTextEnrichment", package : "com.twitter.strato.columns.creative_entity_enrichments") {
  interactive_texts: [InteractiveText!]
}

"Generated from type: [`com.twitter.dataproducts.search.common.InternalServerErrorResponse`](http://go/sg.thrift/InternalServerErrorResponse)"
type InternalServerErrorResponse @thrift_type(name : "InternalServerErrorResponse", package : "com.twitter.dataproducts.search.common") {
  error_message: String!
}

"Generated from type: [`com.twitter.dataproducts.search.common.InvalidParameterError`](http://go/sg.thrift/InvalidParameterError)"
type InvalidParameterError @thrift_type(name : "InvalidParameterError", package : "com.twitter.dataproducts.search.common") {
  error_message: String!
  invalid_query_param_entry: [InvalidQueryParamEntry!]!
}

"Generated from type: [`com.twitter.dataproducts.search.common.InvalidParameterResponse`](http://go/sg.thrift/InvalidParameterResponse)"
type InvalidParameterResponse @thrift_type(name : "InvalidParameterResponse", package : "com.twitter.dataproducts.search.common") {
  error_message: String!
}

"Generated from type: [`com.twitter.dataproducts.search.common.InvalidParametersResponse`](http://go/sg.thrift/InvalidParametersResponse)"
type InvalidParametersResponse @thrift_type(name : "InvalidParametersResponse", package : "com.twitter.dataproducts.search.common") {
  parameter_errors: [InvalidParameterError!]!
}

type InvalidQueryParamEntry {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.result.InvalidSignature`](http://go/sg.thrift/InvalidSignature)"
type InvalidSignature @thrift_type(name : "InvalidSignature", package : "com.twitter.tweb3.graphql.result") {
  msg: String
}

"""
Collaborator on a tweet

Generated from type: [`com.twitter.strato.graphql.InvitedCollaborator`](http://go/sg.thrift/InvitedCollaborator)
"""
type InvitedCollaborator @thrift_type(name : "InvitedCollaborator", package : "com.twitter.strato.graphql") {
  collab_invitation_status: CollabInvitationStatus!
  collaborator: User! @deprecated(reason : "migrated to collaborator_results")
  collaborator_result: UserResult @deprecated(reason : "migrated to collaborator_results; field will always be null")
  collaborator_results: UserResults!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.IsRetweet`](http://go/sg.thrift/IsRetweet)"
type IsRetweet @thrift_type(name : "IsRetweet", package : "com.twitter.dataproducts.metrics.graphql") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ItemKeyError`](http://go/sg.thrift/ItemKeyError)"
type ItemKeyError @thrift_type(name : "ItemKeyError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from type: [`com.twitter.kujaku.GetLanguagesResponse`](http://go/sg.thrift/GetLanguagesResponse)"
type Languages @thrift_type(name : "GetLanguagesResponse", package : "com.twitter.kujaku") {
  languages: [LocalizedLanguage!]!
}

"Generated from type: [`com.twitter.strato.graphql.ApiCard`](http://go/sg.thrift/ApiCard)"
type LegacyCard @thrift_type(name : "ApiCard", package : "com.twitter.strato.graphql") {
  binding_values: [LegacyCardBinding!]
  card_platform: ApiCardPlatform
  "Deprecated( only present for backwards compatibility and is always empty.)"
  forward_card: LegacyForwardCard @deprecated(reason : "only present for backwards compatibility and is always empty.")
  name: String
  url: String
  user_refs: [User!] @deprecated(reason : "migrated to user_refs_results")
  user_refs_result: [UserResult] @deprecated(reason : "migrated to user_refs_results; field will always be null")
  user_refs_results: [UserResults!]
  "Deprecated( prefer user_refs_results instead)"
  users: [LegacyCardUsers!] @deprecated(reason : "prefer user_refs_results instead")
}

type LegacyCardBinding {
  key: String!
  value: ApiCardBindingValue!
}

type LegacyCardUsers {
  key: String!
  value: ApiUser!
}

"Generated from type: [`com.twitter.strato.columns.legacy.extended_user_profile.BirthDate`](http://go/sg.thrift/BirthDate)"
type LegacyExtendedBirthDate @thrift_type(name : "BirthDate", package : "com.twitter.strato.columns.legacy.extended_user_profile") {
  day: Int
  month: Int
  visibility: ProfileVisibility!
  year: Int
  year_visibility: ProfileVisibility!
}

"Generated from type: [`com.twitter.strato.columns.legacy.extended_user_profile.PeriscopeProfile`](http://go/sg.thrift/PeriscopeProfile)"
type LegacyExtendedPeriscopeProfile @thrift_type(name : "PeriscopeProfile", package : "com.twitter.strato.columns.legacy.extended_user_profile") {
  app_link: String!
  periscope_id: String!
  visible: Boolean!
  web_link: String!
}

"""
Designed to have the same shape as the /1.1/users/extended_profile.json endpoint

Generated from type: [`com.twitter.strato.columns.legacy.extended_user_profile.UserProfile`](http://go/sg.thrift/UserProfile)
"""
type LegacyExtendedUserProfile @thrift_type(name : "UserProfile", package : "com.twitter.strato.columns.legacy.extended_user_profile") {
  birthdate: LegacyExtendedBirthDate
  id: NumericString!
  """
  Id, but rendered as a string
  
  Deprecated( use id which is a string)
  """
  id_str: String! @deprecated(reason : "use id which is a string")
  periscope_profile: LegacyExtendedPeriscopeProfile
  vine_profile: LegacyExtendedVineProfile
}

"Generated from type: [`com.twitter.strato.columns.legacy.extended_user_profile.VineProfile`](http://go/sg.thrift/VineProfile)"
type LegacyExtendedVineProfile @thrift_type(name : "VineProfile", package : "com.twitter.strato.columns.legacy.extended_user_profile") {
  app_link: String!
  loop_count: Int53
  visible: Boolean!
  web_link: String!
}

"Generated from type: [`com.twitter.strato.graphql.ApiCardForwardCard`](http://go/sg.thrift/ApiCardForwardCard)"
type LegacyForwardCard @thrift_type(name : "ApiCardForwardCard", package : "com.twitter.strato.graphql") {
  binding_values: [LegacyCardBinding!]
  card_platform: ApiCardPlatform
  name: String
  url: String
}

"Generated from type: [`com.twitter.strato.graphql.ApiTweet`](http://go/sg.thrift/ApiTweet)"
type LegacyTweet @thrift_type(name : "ApiTweet", package : "com.twitter.strato.graphql") {
  "Deprecated( prefer Tweet.card.legacy to access Tweet card information)"
  card: LegacyCard @deprecated(reason : "prefer Tweet.card.legacy to access Tweet card information")
  card_uri: String
  "Collaborator control."
  collab_control: CollabControl
  "Deprecated( collection is no longer available)"
  collection: ApiTweetCollection @deprecated(reason : "collection is no longer available")
  "Whether this tweet from go/newscamera."
  composer_source: String
  contributors: [ApiTweetContributor!]
  conversation_control: ApiConversationControl
  conversation_id_str: String
  conversation_muted: Boolean
  coordinates: ApiGeoFeature
  created_at: String
  created_at_ms: Int53
  current_user_retweet: ApiCurrentUserRetweet
  device_source: ApiTweetDeviceSource
  display_text_range: [Int53!]
  "Deprecated( display_type is no longer available)"
  display_type: String @deprecated(reason : "display_type is no longer available")
  entities: EntitySet
  escherbird_annotations: [ApiTweetAnnotation!]
  extended_entities: EntitySet
  favorite_count: Int53
  favorited: Boolean
  full_text: String
  geo: ApiGeoFeature
  id_str: String
  "Deprecated( prefer Tweet.reply_to_user_results to access reply Tweet information)"
  in_reply_to_screen_name: String @deprecated(reason : "prefer Tweet.reply_to_user_results to access reply Tweet information")
  "Deprecated( prefer Tweet.reply_to_results to access reply Tweet information)"
  in_reply_to_status_id_str: String @deprecated(reason : "prefer Tweet.reply_to_results to access reply Tweet information")
  "Deprecated( prefer Tweet.reply_to_user_results to access reply Tweet information)"
  in_reply_to_user_id_str: String @deprecated(reason : "prefer Tweet.reply_to_user_results to access reply Tweet information")
  "Deprecated( is_conversation_owner is no longer available)"
  is_conversation_owner: Boolean @deprecated(reason : "is_conversation_owner is no longer available")
  is_emergency: Boolean
  is_quote_status: Boolean
  "Deprecated( is_removed_from_conversation is no longer available)"
  is_removed_from_conversation: Boolean @deprecated(reason : "is_removed_from_conversation is no longer available")
  lang: String
  "Only available to official clients for IPI tweets (go/ipi-prd)"
  limited_actions: String
  place: ApiPlace
  possibly_sensitive: Boolean
  possibly_sensitive_editable: Boolean
  profile_geo_enrichment: ProfileGeoEnrichment
  "Deprecated( promoted_content is never populated)"
  promoted_content: ApiTweetPromotedContent @deprecated(reason : "promoted_content is never populated")
  quote_count: Int53
  "Deprecated( this field does not properly obey visibility rules, use Tweet.quoted_tweet instead)"
  quoted_status: Tweet @deprecated(reason : "this field does not properly obey visibility rules, use Tweet.quoted_tweet instead")
  quoted_status_id_str: String
  quoted_status_permalink: ApiShortenedUrl
  "Result field; Deprecated( this field does not properly obey visibility rules, use Tweet.quoted_tweet instead)"
  quoted_status_result: TweetResult @deprecated(reason : "this field does not properly obey visibility rules, use Tweet.quoted_tweet instead")
  "Result field; Deprecated( this field does not properly obey visibility rules, use Tweet.quoted_tweet instead)"
  quoted_status_results: TweetResults @deprecated(reason : "this field does not properly obey visibility rules, use Tweet.quoted_tweet instead")
  quoted_status_user_id_str: String
  reply_count: Int53
  retweet_count: Int53
  retweeted: Boolean
  retweeted_status: Tweet @deprecated(reason : "migrated to retweeted_status_results")
  retweeted_status_result: TweetResult @deprecated(reason : "migrated to retweeted_status_results; field will always be null")
  retweeted_status_results: TweetResults
  retweeted_status_user_id_str: String
  scopes: ApiScopes
  self_thread: ApiSelfThreadMetadata
  source: String
  supplemental_language: String
  timestamp_ms: String
  "Id of the author of the Tweet."
  user_id_str: String
  withheld_copyright: Boolean
  withheld_entities: EntitySet
  withheld_in_countries: [String!]
  withheld_scope: String
  withheld_text: String
}

"Generated from Strato space: `List`"
type List @strato_space(name : "List") {
  """
  The accessibility (private or public) of a given list.
  
  Generated from Strato column: [graphql/list/accessibility.List](https://strato.twitter.biz/web/browse/List/graphql/list/accessibility)
  """
  accessibility: ListAccessibility @strato_column(path : "graphql/list/accessibility.List") @strato_op(value : Fetch)
  """
  Retrieves list banner media reference by list id
  
  Generated from Strato column: [graphql/list/bannerMedia.List](https://strato.twitter.biz/web/browse/List/graphql/list/bannerMedia)
  """
  banner_media: ApiMedia @strato_column(path : "graphql/list/bannerMedia.List") @strato_op(value : Fetch)
  """
  The creation timestamp of a given list, measured in ms since the epoch.
  
  Generated from Strato column: [graphql/list/createdAt.List](https://strato.twitter.biz/web/browse/List/graphql/list/createdAt)
  """
  created_at: Int53 @strato_column(path : "graphql/list/createdAt.List") @strato_op(value : Fetch)
  """
  Retrieves custom list banner media reference by list id
  
  Generated from Strato column: [graphql/list/customBannerMedia.List](https://strato.twitter.biz/web/browse/List/graphql/list/customBannerMedia)
  """
  custom_banner_media: ApiMedia @strato_column(path : "graphql/list/customBannerMedia.List") @strato_op(value : Fetch)
  """
  Retrieves default list banner media reference by list id
  
  Generated from Strato column: [graphql/list/defaultBannerMedia.List](https://strato.twitter.biz/web/browse/List/graphql/list/defaultBannerMedia)
  """
  default_banner_media: ApiMedia @strato_column(path : "graphql/list/defaultBannerMedia.List") @strato_op(value : Fetch)
  """
  The description of the given user's list.
  
  Generated from Strato column: [graphql/list/description.List](https://strato.twitter.biz/web/browse/List/graphql/list/description)
  """
  description: String @strato_column(path : "graphql/list/description.List") @strato_op(value : Fetch)
  """
  Whether the viewer owns or subscribes to a List.
  
  Generated from Strato column: [graphql/list/following.List](https://strato.twitter.biz/web/browse/List/graphql/list/following)
  """
  following: Boolean @strato_column(path : "graphql/list/following.List") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Whether or not the user is a member of the list. If viewer is not authorized to view List, then result is None.
  
  Generated from Strato column: [graphql/socialgraph/isMember.List](https://strato.twitter.biz/web/browse/List/graphql/socialgraph/isMember)
  """
  is_member(user_id: NumericString!): Boolean @development @strato_column(path : "graphql/socialgraph/isMember.List") @strato_op(value : Fetch)
  """
  recommended users timeline in list creation page.
  
  Generated from Strato column: [graphql/list/listCreationRecommendedUsersTimeline.List](https://strato.twitter.biz/web/browse/List/graphql/list/listCreationRecommendedUsersTimeline)
  """
  list_creation_recommended_users_timeline: Timeline @strato_column(path : "graphql/list/listCreationRecommendedUsersTimeline.List") @strato_op(value : Fetch)
  """
  recommended users timeline in list edit page.
  
  Generated from Strato column: [graphql/list/listEditRecommendedUsersTimeline.List](https://strato.twitter.biz/web/browse/List/graphql/list/listEditRecommendedUsersTimeline)
  """
  list_edit_recommended_users_timeline: Timeline @strato_column(path : "graphql/list/listEditRecommendedUsersTimeline.List") @strato_op(value : Fetch)
  """
  The member count of a given list.
  
  Generated from Strato column: [graphql/list/memberCount.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberCount)
  """
  member_count: Int53 @strato_column(path : "graphql/list/memberCount.List") @strato_op(value : Fetch)
  """
  Members of a List, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/membersSlice.List](https://strato.twitter.biz/web/browse/List/graphql/socialgraph/membersSlice)
  """
  members_slice(count: Int, cursor: String): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/membersSlice.List") @strato_op(value : Fetch)
  """
  A user's members timeline given a slug.
  
  Generated from Strato column: [graphql/list/membersTimeline.List](https://strato.twitter.biz/web/browse/List/graphql/list/membersTimeline)
  """
  members_timeline: Timeline @strato_column(path : "graphql/list/membersTimeline.List") @strato_op(value : Fetch)
  """
  Whether the user is muting a List.
  
  Generated from Strato column: [graphql/list/muting.List](https://strato.twitter.biz/web/browse/List/graphql/list/muting)
  """
  muting: Boolean @strato_column(path : "graphql/list/muting.List") @strato_op(value : Fetch)
  """
  The name of a given list.
  
  Generated from Strato column: [graphql/list/name.List](https://strato.twitter.biz/web/browse/List/graphql/list/name)
  """
  name: String @strato_column(path : "graphql/list/name.List") @strato_op(value : Fetch)
  """
  The owner of a given list.
  
  Generated from Strato column: [graphql/list/owner.List](https://strato.twitter.biz/web/browse/List/graphql/list/owner)
  """
  owner: User @deprecated(reason : "migrated to owner_results") @strato_column(path : "graphql/list/owner.List") @strato_op(value : Fetch)
  """
  Result field; The owner of a given list.
  
  Generated from Strato column: [graphql/list/owner.List](https://strato.twitter.biz/web/browse/List/graphql/list/owner)
  """
  owner_result: UserResult @deprecated(reason : "migrated to owner_results; field will always be null") @strato_column(path : "graphql/list/owner.List") @strato_op(value : Fetch)
  """
  Result field; The owner of a given list.
  
  Generated from Strato column: [graphql/list/owner.List](https://strato.twitter.biz/web/browse/List/graphql/list/owner)
  """
  owner_results: UserResults @strato_column(path : "graphql/list/owner.List") @strato_op(value : Fetch)
  """
  True if the current user has pinned the list. False if the user has not pinned the list. None if the user's pinned lists are undefined. The field name "pinning" (present continuous tense of verb "pin") reflects the naming convention of fields "following" (viewer-account, viewer-list, and viewer-topic follow states), "muting" (viewer-account and viewer-list mute states), and "blocking" (viewer-account block state). See the Gizmoduck `Perspective` struct for naming of other verbs for reference.
  
  Generated from Strato column: [graphql/list/pinning.List](https://strato.twitter.biz/web/browse/List/graphql/list/pinning)
  """
  pinning: Boolean @strato_column(path : "graphql/list/pinning.List") @strato_op(value : Fetch)
  """
  Ranked tweets made by members of list(s) to which one subscribes.
  
  Generated from Strato column: [graphql/list/rankedTweetsTimeline.List](https://strato.twitter.biz/web/browse/List/graphql/list/rankedTweetsTimeline)
  """
  ranked_tweets_timeline: Timeline @strato_column(path : "graphql/list/rankedTweetsTimeline.List") @strato_op(value : Fetch)
  """
  Refresh user recommendation in list details module after user is added to list
  
  Generated from Strato column: [graphql/timelines/refreshListDetailsRecommendedUser.List](https://strato.twitter.biz/web/browse/List/graphql/timelines/refreshListDetailsRecommendedUser)
  """
  refresh_list_details_recommended_user(excluded_user_ids: [NumericString!]!, selected_user_id: NumericString!): TimelineTimeline @development @strato_column(path : "graphql/timelines/refreshListDetailsRecommendedUser.List") @strato_op(value : Fetch)
  """
  Refresh user recommendation in pinned list module after user is added to list
  
  Generated from Strato column: [graphql/timelines/refreshPinnedListRecommendedUser.List](https://strato.twitter.biz/web/browse/List/graphql/timelines/refreshPinnedListRecommendedUser)
  """
  refresh_pinned_list_recommended_user(excluded_user_ids: [NumericString!]!, selected_user_id: NumericString!): TimelineTimeline @development @strato_column(path : "graphql/timelines/refreshPinnedListRecommendedUser.List") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  The subscriber count of a given list.
  
  Generated from Strato column: [graphql/list/subscriberCount.List](https://strato.twitter.biz/web/browse/List/graphql/list/subscriberCount)
  """
  subscriber_count: Int53 @strato_column(path : "graphql/list/subscriberCount.List") @strato_op(value : Fetch)
  """
  Subscribers of a List, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/subscribersSlice.List](https://strato.twitter.biz/web/browse/List/graphql/socialgraph/subscribersSlice)
  """
  subscribers_slice(count: Int, cursor: String): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/subscribersSlice.List") @strato_op(value : Fetch)
  """
  A user's subscribers timeline given a slug.
  
  Generated from Strato column: [graphql/list/subscribersTimeline.List](https://strato.twitter.biz/web/browse/List/graphql/list/subscribersTimeline)
  """
  subscribers_timeline: Timeline @strato_column(path : "graphql/list/subscribersTimeline.List") @strato_op(value : Fetch)
  """
  Provides tweets from a given list. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/tweetsSlice.List](https://strato.twitter.biz/web/browse/List/graphql/dataproducts/tweetsSlice)
  """
  tweets_slice(cursor: String, max_results: Short): ListTweetsSliceResult @strato_column(path : "graphql/dataproducts/tweetsSlice.List") @strato_op(value : Fetch)
  """
  Tweets made by members of list(s) to which one subscribes.
  
  Generated from Strato column: [graphql/list/tweetsTimeline.List](https://strato.twitter.biz/web/browse/List/graphql/list/tweetsTimeline)
  """
  tweets_timeline: Timeline @strato_column(path : "graphql/list/tweetsTimeline.List") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.ListTweetsSlice`](http://go/sg.thrift/ListTweetsSlice)"
type ListTweetsSlice @thrift_type(name : "ListTweetsSlice", package : "com.twitter.dataproducts.devo.lists.graphql") {
  items: [TweetItem!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.ListTweetsSliceParameterValidationErrorResult`](http://go/sg.thrift/ListTweetsSliceParameterValidationErrorResult)"
type ListTweetsSliceParameterValidationErrorResult @thrift_type(name : "ListTweetsSliceParameterValidationErrorResult", package : "com.twitter.dataproducts.devo.lists.graphql") {
  parameter_validation_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.ubs.CopyrightViolation`](http://go/sg.thrift/CopyrightViolation)"
type LiveCopyrightViolation @thrift_type(name : "CopyrightViolation", package : "com.twitter.ubs") {
  "Flag indicating the user broadcasting this content is included in an allowlist."
  broadcaster_allowlisted: Boolean
  "The registered name of the copyrighted material."
  copyright_content_name: String
  "The owner of the copyrighted material."
  copyright_holder_name: String
  "Type of copyright violation for this Broadcast."
  copyright_violation_type: CopyrightViolationType
  "Flag indicating whether or not an interstitial should be displayed."
  interstitial: Boolean
  "Flag indicating that the infringing user has accepted the copyright violation claim."
  match_accepted: Boolean
  "Flag indicating that the infringing user has disputed the copyright violation claim."
  match_disputed: Boolean
}

"Generated from Strato space: `LiveEvent`"
type LiveEvent @strato_space(name : "LiveEvent") {
  """
  Returns event title metadata based on a live event id.
  
  Generated from Strato column: [graphql/liveVideo/hashtag.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/liveVideo/hashtag)
  """
  hashtag: String @development @strato_column(path : "graphql/liveVideo/hashtag.LiveEvent") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns event title metadata based on a live event id.
  
  Generated from Strato column: [graphql/liveVideo/primaryImage.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/liveVideo/primaryImage)
  """
  primary_image: ApiImage @development @strato_column(path : "graphql/liveVideo/primaryImage.LiveEvent") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Returns list of CommerceItems based on a live event id.
  
  Generated from Strato column: [graphql/commerce/liveevent/shopGridCommerceItemSlice.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/commerce/liveevent/shopGridCommerceItemSlice)
  """
  shop_grid_commerce_item_slice(cursor: String, limit: Int): CommerceItemSlice @strato_column(path : "graphql/commerce/liveevent/shopGridCommerceItemSlice.LiveEvent") @strato_op(value : Fetch)
  """
  Returns the commerce item that should be showcased for the live event.
  
  Generated from Strato column: [graphql/commerce/liveevent/showcasedCommerceItem.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/commerce/liveevent/showcasedCommerceItem)
  """
  showcased_commerce_item: CommerceItem @deprecated(reason : "migrated to showcased_commerce_item_results") @strato_column(path : "graphql/commerce/liveevent/showcasedCommerceItem.LiveEvent") @strato_op(value : Fetch)
  """
  Result field; Returns the commerce item that should be showcased for the live event.
  
  Generated from Strato column: [graphql/commerce/liveevent/showcasedCommerceItem.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/commerce/liveevent/showcasedCommerceItem)
  """
  showcased_commerce_item_results: CommerceItemResults @strato_column(path : "graphql/commerce/liveevent/showcasedCommerceItem.LiveEvent") @strato_op(value : Fetch)
  """
  Returns event title metadata based on a live event id.
  
  Generated from Strato column: [graphql/liveVideo/supportingTitle.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/liveVideo/supportingTitle)
  """
  supporting_title: String @development @strato_column(path : "graphql/liveVideo/supportingTitle.LiveEvent") @strato_op(value : Fetch)
  """
  Returns event title metadata based on a live event id.
  
  Generated from Strato column: [graphql/liveVideo/title.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/liveVideo/title)
  """
  title: String @development @strato_column(path : "graphql/liveVideo/title.LiveEvent") @strato_op(value : Fetch)
  """
  Returns event title metadata based on a live event id.
  
  Generated from Strato column: [graphql/liveVideo/url.LiveEvent](https://strato.twitter.biz/web/browse/LiveEvent/graphql/liveVideo/url)
  """
  url: String @development @strato_column(path : "graphql/liveVideo/url.LiveEvent") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveFollowInvalidRequest`](http://go/sg.thrift/LiveFollowInvalidRequest)"
type LiveFollowInvalidRequest @thrift_type(name : "LiveFollowInvalidRequest", package : "com.twitter.strato.columns.socialgraph") {
  live_follow_invalid_request_reason: LiveFollowInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveFollowSuccess`](http://go/sg.thrift/LiveFollowSuccess)"
type LiveFollowSuccess @thrift_type(name : "LiveFollowSuccess", package : "com.twitter.strato.columns.socialgraph") {
  live_follow_success_reason: LiveFollowSuccessReason!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveUnfollowInvalidRequest`](http://go/sg.thrift/LiveUnfollowInvalidRequest)"
type LiveUnfollowInvalidRequestResult @thrift_type(name : "LiveUnfollowInvalidRequest", package : "com.twitter.strato.columns.socialgraph") {
  live_unfollow_invalid_request_reason: LiveUnfollowInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveUnfollowSuccess`](http://go/sg.thrift/LiveUnfollowSuccess)"
type LiveUnfollowSuccessResult @thrift_type(name : "LiveUnfollowSuccess", package : "com.twitter.strato.columns.socialgraph") {
  live_unfollow_success_reason: LiveUnfollowSuccessReason!
}

"Generated from type: [`com.twitter.ads.suggestions.LocalizedBidSuggestionResponse`](http://go/sg.thrift/LocalizedBidSuggestionResponse)"
type LocalizedBidSuggestionResponse @thrift_type(name : "LocalizedBidSuggestionResponse", package : "com.twitter.ads.suggestions") {
  max_bid: Int53!
  min_bid: Int53!
}

"Generated from type: [`com.twitter.kujaku.LocalizedLanguage`](http://go/sg.thrift/LocalizedLanguage)"
type LocalizedLanguage @thrift_type(name : "LocalizedLanguage", package : "com.twitter.kujaku") {
  local_name: String!
  locale_code: String!
  localized_display_name: String!
}

"Generated from type: [`com.twitter.strato.columns.frigate.LoggedOutCandidate`](http://go/sg.thrift/LoggedOutCandidate)"
type LoggedOutCandidate @thrift_type(name : "LoggedOutCandidate", package : "com.twitter.strato.columns.frigate") {
  impression_id: String! @development
  media_url: String @development
  profile_pic_url: String @development
  scribe_target: String! @development
  text: String! @development
  title: String! @development
  uri: String! @development
}

type LoggedOutTrendsList {
  trends: [String!]!
}

"Generated from type: [`com.twitter.accounttypes.strato.ManagedLabel`](http://go/sg.thrift/ManagedLabel)"
type ManagedLabel @thrift_type(name : "ManagedLabel", package : "com.twitter.accounttypes.strato") {
  label_type: UserLabelType!
  owner_screen_name: String!
}

"Generated from type: [`com.twitter.subscriptioncommon.Market`](http://go/sg.thrift/Market)"
type Market @thrift_type(name : "Market", package : "com.twitter.subscriptioncommon") {
  id: String!
}

"Generated from type: [`com.twitter.strato.graphql.MatchedStickerSection`](http://go/sg.thrift/MatchedStickerSection)"
type MatchedStickerSection @thrift_type(name : "MatchedStickerSection", package : "com.twitter.strato.graphql") {
  collapsed_row_count: Int
  id: String!
  items: [StickerItem!]!
  title: String
}

"Generated from type: [`com.twitter.strato.graphql.MatchedStickerSectionsSlice`](http://go/sg.thrift/MatchedStickerSectionsSlice)"
type MatchedStickerSectionsSlice @thrift_type(name : "MatchedStickerSectionsSlice", package : "com.twitter.strato.graphql") {
  items: [MatchedStickerSection!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.AppInstallCallToAction`](http://go/sg.thrift/AppInstallCallToAction)"
type MediaAppInstallCallToAction @thrift_type(name : "AppInstallCallToAction", package : "com.twitter.mediaservices.commons.mediainformation") {
  app_store_id: String
  ipad_app_store_id: String
  play_store_id: String
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.MediaAvailability`](http://go/sg.thrift/MediaAvailability)"
type MediaAvailability @thrift_type(name : "MediaAvailability", package : "com.twitter.mediaservices.commons.mediainformation") {
  reason: MediaAvailabilityStatusReason
  status: MediaAvailabilityStatus!
  unavailability_info: MediaUnavailabilityInfo
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.CallToActions`](http://go/sg.thrift/CallToActions)"
type MediaCallToActions @thrift_type(name : "CallToActions", package : "com.twitter.mediaservices.commons.mediainformation") {
  app_install: MediaAppInstallCallToAction
  visit_site: MediaVisitSiteCallToAction
  watch_now: MediaWatchNowCallToAction
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.Color`](http://go/sg.thrift/Color)"
type MediaColor @thrift_type(name : "Color", package : "com.twitter.mediaservices.commons.mediainformation") {
  blue: Short!
  green: Short!
  red: Short!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.ColorInfo`](http://go/sg.thrift/ColorInfo)"
type MediaColorInfo @thrift_type(name : "ColorInfo", package : "com.twitter.mediaservices.commons.mediainformation") {
  palette: [MediaColorPaletteItem!]!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.ColorPaletteItem`](http://go/sg.thrift/ColorPaletteItem)"
type MediaColorPaletteItem @thrift_type(name : "ColorPaletteItem", package : "com.twitter.mediaservices.commons.mediainformation") {
  percentage: Float!
  rgb: MediaColor!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.FoundMediaOrigin`](http://go/sg.thrift/FoundMediaOrigin)"
type MediaOrigin @thrift_type(name : "FoundMediaOrigin", package : "com.twitter.mediaservices.commons.mediainformation") {
  id: String!
  provider: String!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.CopyrightViolation`](http://go/sg.thrift/CopyrightViolation)"
type MediaUnavailabilityInfoCopyrightViolation @thrift_type(name : "CopyrightViolation", package : "com.twitter.mediaservices.commons.mediainformation") {
  copyright_holder_name: String!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.VisitSiteCallToAction`](http://go/sg.thrift/VisitSiteCallToAction)"
type MediaVisitSiteCallToAction @thrift_type(name : "VisitSiteCallToAction", package : "com.twitter.mediaservices.commons.mediainformation") {
  url: String!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.WatchNowCallToAction`](http://go/sg.thrift/WatchNowCallToAction)"
type MediaWatchNowCallToAction @thrift_type(name : "WatchNowCallToAction", package : "com.twitter.mediaservices.commons.mediainformation") {
  url: String!
}

"Generated from type: [`com.twitter.mediaservices.commons.tweetmedia.Model3dAsset`](http://go/sg.thrift/Model3dAsset)"
type Model3dAsset @thrift_type(name : "Model3dAsset", package : "com.twitter.mediaservices.commons.tweetmedia") {
  content_type: String!
  url: String!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.ModuleForDisplay`](http://go/sg.thrift/ModuleForDisplay)"
type ModuleForDisplay @thrift_type(name : "ModuleForDisplay", package : "com.twitter.bizprofiles.graphql") {
  module_id: NumericString!
}

"Generated from Strato space: `Moment`"
type Moment @strato_space(name : "Moment") {
  "A globally unique identifier"
  id: ID!
  """
  The legacy REST API representation of a Moment.
  
  Access policy: this column is subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/legacy/legacy.Moment](https://strato.twitter.biz/web/browse/Moment/graphql/legacy/legacy)
  """
  legacy: ApiMoment @strato_column(path : "graphql/legacy/legacy.Moment") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

type Mutation {
  """
  Accepts a follow request from the viewer to the provided target user.
  
  Generated from Strato column: [graphql/socialgraph/acceptFollowRequest](https://strato.twitter.biz/web/browse/graphql/socialgraph/acceptFollowRequest)
  """
  accept_follow_request(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): AcceptFollowRequestResult @development @strato_column(path : "graphql/socialgraph/acceptFollowRequest") @strato_op(value : Execute)
  """
  Column to create a new ClientConfig object
  
  Generated from Strato column: [graphql/gryphon/putAccountsyncClientConfig](https://strato.twitter.biz/web/browse/graphql/gryphon/putAccountsyncClientConfig)
  """
  accountsync_client_config_put(active_deck_id: NumericString, composer_expanded: Boolean, default_column_width: AccountSyncColumnWidthInput, default_media_preview: AccountSyncMediaPreviewInput, default_visual_scaling: AccountSyncVisualScalingInput, navbar_expanded: Boolean): DoneStatus @strato_column(path : "graphql/gryphon/putAccountsyncClientConfig") @strato_op(value : Put)
  """
  Delete all of user's accountsync data
  
  Generated from Strato column: [graphql/gryphon/accountsyncDelete](https://strato.twitter.biz/web/browse/graphql/gryphon/accountsyncDelete)
  """
  accountsync_delete(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @strato_column(path : "graphql/gryphon/accountsyncDelete") @strato_op(value : Execute)
  """
  Copies columns from legacy Tweetdeck to the specified deck
  
  Generated from Strato column: [graphql/gryphon/accountsyncImportClientsyncColumns](https://strato.twitter.biz/web/browse/graphql/gryphon/accountsyncImportClientsyncColumns)
  """
  accountsync_import_clientsync_columns(
    deck_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Deck @strato_column(path : "graphql/gryphon/accountsyncImportClientsyncColumns") @strato_op(value : Execute)
  """
  This column handles the vibes (aka status) activateUserVibe put operation, which sets the given user's active vibe to the given vibe More details can be found at go/vibe-backend-tdd
  
  Generated from Strato column: [graphql/vibes/activateUserVibe](https://strato.twitter.biz/web/browse/graphql/vibes/activateUserVibe)
  """
  activate_user_vibe_put(annotation: TweetAnnotationInput, vibe_text: String!, vibe_verb: VibeVerbInput!): DoneStatus @development @strato_column(path : "graphql/vibes/activateUserVibe") @strato_op(value : Put)
  """
  Save a Client Education Flag to record when a user has seen a prompt
  
  Generated from Strato column: [graphql/clientEducationFlags/addClientEducationFlag](https://strato.twitter.biz/web/browse/graphql/clientEducationFlags/addClientEducationFlag)
  """
  add_client_education_flag_put(
    "Flag the user has seen"
    flag_type: ClientEducationFlagTypeInput!
  ): DoneStatus @strato_column(path : "graphql/clientEducationFlags/addClientEducationFlag") @strato_op(value : Put)
  """
  Save a DM Conversation Label for a conversation
  
  Generated from Strato column: [graphql/dmConversationLabels/addDMConversationLabel](https://strato.twitter.biz/web/browse/graphql/dmConversationLabels/addDMConversationLabel)
  """
  add_dm_conversation_label_put(
    "ConversationId of which the label is being applied"
    conversationId: String!, 
    "Conversation label being applied"
    dmConversationLabel: DMConversationLabelInput!
  ): DoneStatus @deprecated(reason : "Superseded by graphql/addDMConversationLabelV2") @strato_column(path : "graphql/dmConversationLabels/addDMConversationLabel") @strato_op(value : Put)
  """
  Save a DM Conversation Label for a conversation
  
  Generated from Strato column: [graphql/dmConversationLabels/addDMConversationLabelV2](https://strato.twitter.biz/web/browse/graphql/dmConversationLabels/addDMConversationLabelV2)
  """
  add_dm_conversation_label_v2(
    conversation_id: String!, 
    label: DMConversationLabelInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMConversationLabelInfo @deprecated(reason : "Superseded by graphql/addDMConversationLabelV3") @strato_column(path : "graphql/dmConversationLabels/addDMConversationLabelV2") @strato_op(value : Execute)
  """
  Save a DM Conversation Label for a conversation
  
  Generated from Strato column: [graphql/dmConversationLabels/addDMConversationLabelV3](https://strato.twitter.biz/web/browse/graphql/dmConversationLabels/addDMConversationLabelV3)
  """
  add_dm_conversation_label_v3(
    conversation_id: String!, 
    label: DMConversationLabelInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMConversationLabelResult @strato_column(path : "graphql/dmConversationLabels/addDMConversationLabelV3") @strato_op(value : Execute)
  "Generated from Strato column: [graphql/directmessages/addParticipants](https://strato.twitter.biz/web/browse/graphql/directmessages/addParticipants)"
  add_participants(
    added_participants: [NumericString!]!, 
    conversation_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AddParticipantsResult @development @strato_column(path : "graphql/directmessages/addParticipants") @strato_op(value : Execute)
  """
  Adds the privacy preference from the super follow relationship between the view and the provided creator
  
  Generated from Strato column: [graphql/audiencerewards/addSuperFollowerPrivacy](https://strato.twitter.biz/web/browse/graphql/audiencerewards/addSuperFollowerPrivacy)
  """
  add_super_follower_privacy(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): AddSuperFollowerPrivacyResult @strato_column(path : "graphql/audiencerewards/addSuperFollowerPrivacy") @strato_op(value : Execute)
  """
  Put operation for alt text prompt.
  
  Generated from Strato column: [graphql/accessibility/altTextPromptPreference](https://strato.twitter.biz/web/browse/graphql/accessibility/altTextPromptPreference)
  """
  alt_text_prompt_preference_put(prompt_type: AltTextPromptTypeInput!): DoneStatus @development @strato_column(path : "graphql/accessibility/altTextPromptPreference") @strato_op(value : Put)
  """
  Add a sharing state and content in Audio Space
  
  Generated from Strato column: [graphql/audiospace/addSharing.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/addSharing)
  """
  audiospace_add_sharing(
    audio_space_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sharing: AudioSpaceSharingInput!
  ): AudioSpaceSharing @strato_column(path : "graphql/audiospace/addSharing.AudioSpace") @strato_op(value : Execute)
  """
  Delete a sharing state and content in Audio Space
  
  Generated from Strato column: [graphql/audiospace/deleteSharing.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/deleteSharing)
  """
  audiospace_delete_sharing(
    audio_space_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sharing_id: NumericString!
  ): DoneStatus @strato_column(path : "graphql/audiospace/deleteSharing.AudioSpace") @strato_op(value : Execute)
  """
  Gives ticketReceivers tickets on behalf of AudioSpace creator
  
  Generated from Strato column: [graphql/audiospace/giveawayTickets.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/giveawayTickets)
  """
  audiospace_giveaway_tickets(
    audio_space_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    ticket_receivers: [NumericString!]!
  ): DoneStatus @strato_column(path : "graphql/audiospace/giveawayTickets.AudioSpace") @strato_op(value : Execute)
  """
  Update a sharing state and content in Audio Space
  
  Generated from Strato column: [graphql/audiospace/updateSharing.AudioSpace](https://strato.twitter.biz/web/browse/AudioSpace/graphql/audiospace/updateSharing)
  """
  audiospace_update_sharing(
    audio_space_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sharing: AudioSpaceSharingInput!, 
    sharing_id: NumericString!
  ): AudioSpaceSharing @strato_column(path : "graphql/audiospace/updateSharing.AudioSpace") @strato_op(value : Execute)
  """
  Birdwatch alias column for executing a self-selection for the authenticated user.
  
  Generated from Strato column: [graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelection](https://strato.twitter.biz/web/browse/graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelection)
  """
  authenticated_user_birdwatch_alias_self_selection_put(alias: String!): DoneStatus @strato_column(path : "graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelection") @strato_op(value : Put)
  """
  GraphQL column for mutating Auto translate user settings data
  
  Generated from Strato column: [graphql/translation/autoTranslateSettings](https://strato.twitter.biz/web/browse/graphql/translation/autoTranslateSettings)
  """
  auto_translate_settings_put(disabled_languages: [String!]! = [], enabled: Boolean! = true, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/translation/autoTranslateSettings") @strato_op(value : Put)
  """
  Allows the authenticated user to appeal a Birdwatch note.
  
  Generated from Strato column: [graphql/birdwatch/appeal.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/appeal)
  """
  birdwatchnote_appeal_put(note_id: NumericString!): DoneStatus @strato_column(path : "graphql/birdwatch/appeal.BirdwatchNote") @strato_op(value : Put)
  """
  (Deprecated) A column for creating a Birdwatch note for a Tweet by the logged in user. Only a single note is allowed per user per Tweet.
  
  Generated from Strato column: [graphql/birdwatch/create.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/create)
  """
  birdwatchnote_create(
    data_v1: BirdwatchNoteDataV1Input, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): BirdwatchNote @deprecated(reason : "use noteCreateV2 instead") @strato_column(path : "graphql/birdwatch/create.BirdwatchNote") @strato_op(value : Execute)
  """
  A column for creating a Birdwatch note for a Tweet by the logged in user. Only a single note is allowed per user per Tweet.
  
  Generated from Strato column: [graphql/birdwatch/createV2.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/createV2)
  """
  birdwatchnote_create_v2(
    data_v1: BirdwatchNoteDataV1Input, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): BirdwatchNoteCreateResult @strato_column(path : "graphql/birdwatch/createV2.BirdwatchNote") @strato_op(value : Execute)
  """
  A column for deleting a self created Birdwatch note by the logged in user.
  
  Generated from Strato column: [graphql/birdwatch/delete.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/delete)
  """
  birdwatchnote_delete(note_id: NumericString!): DoneStatus @strato_column(path : "graphql/birdwatch/delete.BirdwatchNote") @strato_op(value : Execute)
  """
  A column for creating a Birdwatch note rating for a note. Only a single rating is allowed per user per note, old ratings are overwritten.
  
  Generated from Strato column: [graphql/birdwatch/rate.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/rate)
  """
  birdwatchnote_rate(
    data_v1: BirdwatchNoteRatingDataV1Input, 
    data_v2: BirdwatchNoteRatingDataV2Input, 
    note_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString, 
    user_response: BirdwatchNoteRatingUserResponseInput
  ): BirdwatchNoteRating @strato_column(path : "graphql/birdwatch/rate.BirdwatchNote") @strato_op(value : Execute)
  """
  A column for creating a Birdwatch note rating for a note. Only a single rating is allowed per user per note, old ratings are overwritten.
  
  Generated from Strato column: [graphql/birdwatch/rateV2.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/rateV2)
  """
  birdwatchnote_rate_v2(
    data_v1: BirdwatchNoteRatingDataV1Input, 
    data_v2: BirdwatchNoteRatingDataV2Input, 
    note_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString, 
    user_response: BirdwatchNoteRatingUserResponseInput
  ): BirdwatchNoteRatingCreateResult @strato_column(path : "graphql/birdwatch/rateV2.BirdwatchNote") @strato_op(value : Execute)
  """
  A column for deleting a note rating created by the logged in user.
  
  Generated from Strato column: [graphql/birdwatch/ratingDelete.BirdwatchNote](https://strato.twitter.biz/web/browse/BirdwatchNote/graphql/birdwatch/ratingDelete)
  """
  birdwatchnote_rating_delete(note_id: NumericString!): DoneStatus @strato_column(path : "graphql/birdwatch/ratingDelete.BirdwatchNote") @strato_op(value : Execute)
  """
  A block account action on behalf of a user. 
  
  Generated from Strato column: [graphql/dataproducts/blockByRestId](https://strato.twitter.biz/web/browse/graphql/dataproducts/blockByRestId)
  """
  block_by_rest_id(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): BlockResult @strato_column(path : "graphql/dataproducts/blockByRestId") @strato_op(value : Execute)
  """
  Deletes all of the calling user's bookmarks
  
  Generated from Strato column: [graphql/timelines/bookmarkAll](https://strato.twitter.biz/web/browse/graphql/timelines/bookmarkAll)
  """
  bookmark_all_delete: DoneStatus @strato_column(path : "graphql/timelines/bookmarkAll") @strato_op(value : Delete)
  """
  Create a Bookmark Collection
  
  Generated from Strato column: [graphql/timelines/bookmarkCollectionCreate](https://strato.twitter.biz/web/browse/graphql/timelines/bookmarkCollectionCreate)
  """
  bookmark_collection_create(
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BookmarkCollection @strato_column(path : "graphql/timelines/bookmarkCollectionCreate") @strato_op(value : Execute)
  """
  Create/Update/Delete a Bookmark Collection
  
  Generated from Strato column: [graphql/timelines/bookmarkCollection](https://strato.twitter.biz/web/browse/graphql/timelines/bookmarkCollection)
  """
  bookmark_collection_delete(bookmark_collection_id: NumericString!): DoneStatus @strato_column(path : "graphql/timelines/bookmarkCollection") @strato_op(value : Delete)
  """
  Add/Remove Tweet to/from Bookmark Collection
  
  Generated from Strato column: [graphql/timelines/bookmarkCollectionTweet](https://strato.twitter.biz/web/browse/graphql/timelines/bookmarkCollectionTweet)
  """
  bookmark_collection_tweet_delete(bookmark_collection_id: NumericString!, tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/timelines/bookmarkCollectionTweet") @strato_op(value : Delete)
  """
  Add/Remove Tweet to/from Bookmark Collection
  
  Generated from Strato column: [graphql/timelines/bookmarkCollectionTweet](https://strato.twitter.biz/web/browse/graphql/timelines/bookmarkCollectionTweet)
  """
  bookmark_collection_tweet_put(bookmark_collection_id: NumericString!, tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/timelines/bookmarkCollectionTweet") @strato_op(value : Put)
  """
  Update a Bookmark Collection
  
  Generated from Strato column: [graphql/timelines/bookmarkCollectionUpdate](https://strato.twitter.biz/web/browse/graphql/timelines/bookmarkCollectionUpdate)
  """
  bookmark_collection_update(
    bookmark_collection_id: NumericString!, 
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BookmarkCollection @strato_column(path : "graphql/timelines/bookmarkCollectionUpdate") @strato_op(value : Execute)
  """
  [Development only] Cancel a subscription for the given a ProductSubscriptionID and authenticated user.
  
  Generated from Strato column: [graphql/subscription-services/cancelProductSubscription](https://strato.twitter.biz/web/browse/graphql/subscription-services/cancelProductSubscription)
  """
  cancel_product_subscription_delete(product_subscription_id: String!): DoneStatus @development @strato_column(path : "graphql/subscription-services/cancelProductSubscription") @strato_op(value : Delete)
  """
  This column handles the vibes (aka status) clearUserActiveVibe put operation, which updates the given user's active vibe expiration time to Time.now if the user has an active vibe. More details can be found at go/vibe-backend-tdd
  
  Generated from Strato column: [graphql/vibes/clearActiveUserVibe](https://strato.twitter.biz/web/browse/graphql/vibes/clearActiveUserVibe)
  """
  clear_active_user_vibe_put: DoneStatus @development @strato_column(path : "graphql/vibes/clearActiveUserVibe") @strato_op(value : Put)
  """
  This column will be used to delete a column set based on a provided column set id.
  
  Generated from Strato column: [graphql/customer-experience-apps/columnSetDelete](https://strato.twitter.biz/web/browse/graphql/customer-experience-apps/columnSetDelete)
  """
  column_set_delete(account_id: NumericString!, column_set_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/customer-experience-apps/columnSetDelete") @strato_op(value : Delete)
  """
  Updates community access.
  
  Generated from Strato column: [graphql/communities/communityAccessPut](https://strato.twitter.biz/web/browse/graphql/communities/communityAccessPut)
  """
  community_access_put(
    access: CommunityAccessInput!, 
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @deprecated(reason : "Replaced by communityMembershipSettingsPut column.") @strato_column(path : "graphql/communities/communityAccessPut") @strato_op(value : Execute)
  """
  Creates a community.
  
  Generated from Strato column: [graphql/communities/communityCreate](https://strato.twitter.biz/web/browse/graphql/communities/communityCreate)
  """
  community_create(
    access: CommunityAccessInput! = Closed, 
    custom_banner_media_id: NumericString, 
    custom_theme: CommunityThemeInput, 
    description: String, 
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityCreate") @strato_op(value : Execute)
  """
  Creates a community (v2).
  
  Generated from Strato column: [graphql/communities/communityCreateV2](https://strato.twitter.biz/web/browse/graphql/communities/communityCreateV2)
  """
  community_create_v2(
    description: String, 
    invites_policy: CommunityInvitesPolicyInput, 
    join_policy: CommunityJoinPolicyInput, 
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityCreateResult @development @strato_column(path : "graphql/communities/communityCreateV2") @strato_op(value : Execute)
  """
  Deletes community custom banner media.
  
  Generated from Strato column: [graphql/communities/communityCustomBannerMediaDelete](https://strato.twitter.biz/web/browse/graphql/communities/communityCustomBannerMediaDelete)
  """
  community_custom_banner_media_delete(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityCustomBannerMediaDelete") @strato_op(value : Execute)
  """
  Updates community custom banner media.
  
  Generated from Strato column: [graphql/communities/communityCustomBannerMediaPut](https://strato.twitter.biz/web/browse/graphql/communities/communityCustomBannerMediaPut)
  """
  community_custom_banner_media_put(
    community_id: NumericString!, 
    media_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityCustomBannerMediaPut") @strato_op(value : Execute)
  """
  Deletes community custom theme.
  
  Generated from Strato column: [graphql/communities/communityCustomThemeDelete](https://strato.twitter.biz/web/browse/graphql/communities/communityCustomThemeDelete)
  """
  community_custom_theme_delete(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityCustomThemeDelete") @strato_op(value : Execute)
  """
  Updates community custom theme.
  
  Generated from Strato column: [graphql/communities/communityCustomThemePut](https://strato.twitter.biz/web/browse/graphql/communities/communityCustomThemePut)
  """
  community_custom_theme_put(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    theme: CommunityThemeInput!
  ): Community @strato_column(path : "graphql/communities/communityCustomThemePut") @strato_op(value : Execute)
  """
  Deletes community description.
  
  Generated from Strato column: [graphql/communities/communityDescriptionDelete](https://strato.twitter.biz/web/browse/graphql/communities/communityDescriptionDelete)
  """
  community_description_delete(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityDescriptionDelete") @strato_op(value : Execute)
  """
  Updates community description.
  
  Generated from Strato column: [graphql/communities/communityDescriptionPut](https://strato.twitter.biz/web/browse/graphql/communities/communityDescriptionPut)
  """
  community_description_put(
    community_id: NumericString!, 
    description: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityDescriptionPut") @strato_op(value : Execute)
  """
  Joins a community.
  
  Generated from Strato column: [graphql/communities/communityJoin](https://strato.twitter.biz/web/browse/graphql/communities/communityJoin)
  """
  community_join(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityJoin") @strato_op(value : Execute)
  """
  Approve request to join a community.
  
  Generated from Strato column: [graphql/communities/communityJoinRequestApprove](https://strato.twitter.biz/web/browse/graphql/communities/communityJoinRequestApprove)
  """
  community_join_request_approve(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): CommunityJoinRequestApproveResult @strato_column(path : "graphql/communities/communityJoinRequestApprove") @strato_op(value : Execute)
  """
  Create request to join a community.
  
  Generated from Strato column: [graphql/communities/communityJoinRequestCreate](https://strato.twitter.biz/web/browse/graphql/communities/communityJoinRequestCreate)
  """
  community_join_request_create(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityJoinRequestCreateResult @strato_column(path : "graphql/communities/communityJoinRequestCreate") @strato_op(value : Execute)
  """
  Deny request to join a community.
  
  Generated from Strato column: [graphql/communities/communityJoinRequestDeny](https://strato.twitter.biz/web/browse/graphql/communities/communityJoinRequestDeny)
  """
  community_join_request_deny(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): CommunityJoinRequestDenyResult @strato_column(path : "graphql/communities/communityJoinRequestDeny") @strato_op(value : Execute)
  """
  Leaves a community.
  
  Generated from Strato column: [graphql/communities/communityLeave](https://strato.twitter.biz/web/browse/graphql/communities/communityLeave)
  """
  community_leave(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityLeave") @strato_op(value : Execute)
  """
  Updates community membership to open.
  
  Generated from Strato column: [graphql/communities/communityMembershipSettingsOpenUpdate](https://strato.twitter.biz/web/browse/graphql/communities/communityMembershipSettingsOpenUpdate)
  """
  community_membership_settings_open_update(
    community_id: NumericString!, 
    open_membership_settings: CommunityOpenMembershipSettingsInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityMembershipSettingsUpdateResult @deprecated(reason : "Replaced by communityMembershipSettingsPut column.") @strato_column(path : "graphql/communities/communityMembershipSettingsOpenUpdate") @strato_op(value : Execute)
  """
  Updates community membership settings.
  
  Generated from Strato column: [graphql/communities/communityMembershipSettingsPut](https://strato.twitter.biz/web/browse/graphql/communities/communityMembershipSettingsPut)
  """
  community_membership_settings_put(
    community_id: NumericString!, 
    invites_policy: CommunityInvitesPolicyInput!, 
    join_policy: CommunityJoinPolicyInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityMembershipSettingsPutResult @strato_column(path : "graphql/communities/communityMembershipSettingsPut") @strato_op(value : Execute)
  """
  Updates community membership to restricted.
  
  Generated from Strato column: [graphql/communities/communityMembershipSettingsRestrictedUpdate](https://strato.twitter.biz/web/browse/graphql/communities/communityMembershipSettingsRestrictedUpdate)
  """
  community_membership_settings_restricted_update(
    community_id: NumericString!, 
    restricted_membership_settings: CommunityRestrictedMembershipSettingsInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityMembershipSettingsUpdateResult @deprecated(reason : "Replaced by communityMembershipSettingsPut column.") @strato_column(path : "graphql/communities/communityMembershipSettingsRestrictedUpdate") @strato_op(value : Execute)
  """
  Updates community name.
  
  Generated from Strato column: [graphql/communities/communityNamePut](https://strato.twitter.biz/web/browse/graphql/communities/communityNamePut)
  """
  community_name_put(
    community_id: NumericString!, 
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityNamePut") @strato_op(value : Execute)
  """
  Assigns a role to a community member.
  
  Generated from Strato column: [graphql/communities/communityRolePut](https://strato.twitter.biz/web/browse/graphql/communities/communityRolePut)
  """
  community_role_put(
    community_id: NumericString!, 
    role: CommunityRoleInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): Community @strato_column(path : "graphql/communities/communityRolePut") @strato_op(value : Execute)
  """
  Creates a community rule.
  
  Generated from Strato column: [graphql/communities/communityRuleCreate](https://strato.twitter.biz/web/browse/graphql/communities/communityRuleCreate)
  """
  community_rule_create(
    community_id: NumericString!, 
    description: String, 
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityRuleCreate") @strato_op(value : Execute)
  """
  Removes a community rule.
  
  Generated from Strato column: [graphql/communities/communityRuleRemove](https://strato.twitter.biz/web/browse/graphql/communities/communityRuleRemove)
  """
  community_rule_remove(
    community_id: NumericString!, 
    rule_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityRuleRemove") @strato_op(value : Execute)
  """
  Updates a community rule.
  
  Generated from Strato column: [graphql/communities/communityRuleUpdate](https://strato.twitter.biz/web/browse/graphql/communities/communityRuleUpdate)
  """
  community_rule_update(
    community_id: NumericString!, 
    description: String, 
    name: String!, 
    rule_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityRuleUpdate") @strato_op(value : Execute)
  """
  Reorders community rules.
  
  Generated from Strato column: [graphql/communities/communityRulesReorder](https://strato.twitter.biz/web/browse/graphql/communities/communityRulesReorder)
  """
  community_rules_reorder(
    community_id: NumericString!, 
    rule_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community @strato_column(path : "graphql/communities/communityRulesReorder") @strato_op(value : Execute)
  """
  Keeps a community tweet that has been reported for violation of a community rule.
  
  Generated from Strato column: [graphql/communities/communityTweetKeep](https://strato.twitter.biz/web/browse/graphql/communities/communityTweetKeep)
  """
  community_tweet_keep(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): Community @strato_column(path : "graphql/communities/communityTweetKeep") @strato_op(value : Execute)
  """
  Converts all current suggested actions for the perspectival user.
  
  Generated from Strato column: [graphql/interventions/convertRitoSuggestedActions](https://strato.twitter.biz/web/browse/graphql/interventions/convertRitoSuggestedActions)
  """
  convert_rito_suggested_actions(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @strato_column(path : "graphql/interventions/convertRitoSuggestedActions") @strato_op(value : Execute)
  """
  This strato column calls the crapiapp service to create a report. Please do not directly query this column if you are not a developer for des-crapi
  
  Generated from Strato column: [graphql/dataproducts/crapiReport](https://strato.twitter.biz/web/browse/graphql/dataproducts/crapiReport)
  """
  crapi_report_insert(description: String!, reported_user_ids: [NumericString!]!): NumericString @deprecated(reason : "This mutation has no Visibility Filtering support. Use crapi_report_v2_insert mutation instead") @strato_column(path : "graphql/dataproducts/crapiReport") @strato_op(value : Insert)
  """
  This strato column calls the crapiapp service to create a report. Please do not directly query this column if you are not a developer for des-crapi
  
  Generated from Strato column: [graphql/dataproducts/crapiReportV2](https://strato.twitter.biz/web/browse/graphql/dataproducts/crapiReportV2)
  """
  crapi_report_v2_insert(
    description: String!, 
    reported_user_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): NumericString @strato_column(path : "graphql/dataproducts/crapiReportV2") @strato_op(value : Insert)
  """
  Creates a business for a user
  
  Generated from Strato column: [graphql/bizprofiles/createAboutModuleWithVenue](https://strato.twitter.biz/web/browse/graphql/bizprofiles/createAboutModuleWithVenue)
  """
  create_about_module_with_venue(
    business_input: BusinessCreationDataInput!, 
    config: AboutModuleConfigInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    venue_data: BusinessVenueInput!
  ): UserOrValidationErrorResponse @strato_column(path : "graphql/bizprofiles/createAboutModuleWithVenue") @strato_op(value : Execute)
  """
  This column will be used to insert a new column_set that an Advertiser wants to save
  
  Generated from Strato column: [graphql/customer-experience-apps/createColumnSet](https://strato.twitter.biz/web/browse/graphql/customer-experience-apps/createColumnSet)
  """
  create_column_set_insert(
    account_id: NumericString!, 
    column_set_columns_keys: [String!]!, 
    column_set_metadata_name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): String @development @strato_column(path : "graphql/customer-experience-apps/createColumnSet") @strato_op(value : Insert)
  """
  Creates a CommerceCatalog and places it in subquery cache
  
  Generated from Strato column: [graphql/commerce/catalog/operations/createCommerceCatalog](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/createCommerceCatalog)
  """
  create_commerce_catalog(
    catalog_name: String!, 
    catalog_type: CommerceCatalogTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceCatalogWriteResult @strato_column(path : "graphql/commerce/catalog/operations/createCommerceCatalog") @strato_op(value : Execute)
  "Generated from Strato column: [graphql/dataproducts/createComplianceJob](https://strato.twitter.biz/web/browse/graphql/dataproducts/createComplianceJob)"
  create_compliance_job(
    acl_account_id: NumericString, 
    job_name: String, 
    job_type: ContentComplianceJobTypeInput!, 
    resumable: Boolean, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ComplianceJob @strato_column(path : "graphql/dataproducts/createComplianceJob") @strato_op(value : Execute)
  """
  This column will be used to insert a custom filter set that an Advertiser wants to save
  
  Generated from Strato column: [graphql/customer-experience-apps/createCustomFilterSet](https://strato.twitter.biz/web/browse/graphql/customer-experience-apps/createCustomFilterSet)
  """
  create_custom_filter_set(
    account_id: NumericString!, 
    filter_set_name: String!, 
    filters: [AdvertiserFilterInput!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AdvertiserFilterSet @development @strato_column(path : "graphql/customer-experience-apps/createCustomFilterSet") @strato_op(value : Execute)
  """
  A create DM action on behalf of a user.
  
  Generated from Strato column: [graphql/dataproducts/createDm](https://strato.twitter.biz/web/browse/graphql/dataproducts/createDm)
  """
  create_dm(
    message: CreateDmMessageInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target: CreateDmTargetInput!
  ): CreateDmResult @development @strato_column(path : "graphql/dataproducts/createDm") @strato_op(value : Execute)
  """
  Simple internal column to get and persist a user's reaction to a DM.
  
  Generated from Strato column: [graphql/directmessages/createDMReaction](https://strato.twitter.biz/web/browse/graphql/directmessages/createDMReaction)
  """
  create_dm_reaction(
    dm_reactions: DMReactionsInput!, 
    perspectival_user_id: NumericString!, 
    request_id: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CreateDMReactionResult @development @strato_column(path : "graphql/directmessages/createDMReaction") @strato_op(value : Execute)
  """
  Create a downvote on a Tweet operation. Part of the Incentives reply  voting project which aims to allow users to downvote tweets that are toxic or irrelevant to the conversation so that the downvote signal can be used in conversation ranking See go/replyvoting-infra-tdd
  
  Generated from Strato column: [graphql/incentives/replyvoting/createDownvote](https://strato.twitter.biz/web/browse/graphql/incentives/replyvoting/createDownvote)
  """
  create_downvote(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): Downvote @development @strato_column(path : "graphql/incentives/replyvoting/createDownvote") @strato_op(value : Execute)
  """
  This endpoint takes inReplyToUserId and determined if and what data should be included in a humanization nudge.
  
  Generated from Strato column: [graphql/incentives/createHumanizationNudge](https://strato.twitter.biz/web/browse/graphql/incentives/createHumanizationNudge)
  """
  create_humanization_nudge(
    in_reply_to_user_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CreateHumanizationNudgeResponse @strato_column(path : "graphql/incentives/createHumanizationNudge") @strato_op(value : Execute)
  """
  Creates a new product set
  
  Generated from Strato column: [graphql/commerce/catalog/operations/createManuallySelectedProductSet](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/createManuallySelectedProductSet)
  """
  create_manually_selected_product_set(
    catalog_id: NumericString!, 
    product_set_description: String, 
    product_set_items: [ProductSetItemInput!]! = [], 
    product_set_name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductSetResult @strato_column(path : "graphql/commerce/catalog/operations/createManuallySelectedProductSet") @strato_op(value : Execute)
  """
  This endpoint takes the text of a tweet that user is about to create and determines whether or not to nudge the user. For more detailed documentation, see go/docbird/jiminy
  
  Generated from Strato column: [graphql/incentives/createNudge](https://strato.twitter.biz/web/browse/graphql/incentives/createNudge)
  """
  create_nudge(conversation_id: NumericString, create_nudge_options: CreateNudgeOptionsInput, in_reply_to_tweet_id: NumericString, tweet_id: NumericString, tweet_text: String!, tweet_type: TweetTypeInput!): CreateNudgeResponse @deprecated(reason : "This mutation has no Visibility Filtering support. Use create_nudge_v2 mutation instead") @strato_column(path : "graphql/incentives/createNudge") @strato_op(value : Execute)
  """
  This endpoint takes the text of a tweet that user is about to create and determines whether or not to nudge the user. For more detailed documentation, see go/docbird/jiminy
  
  Generated from Strato column: [graphql/incentives/createNudgeV2](https://strato.twitter.biz/web/browse/graphql/incentives/createNudgeV2)
  """
  create_nudge_v2(
    conversation_id: NumericString, 
    create_nudge_options: CreateNudgeOptionsInput, 
    in_reply_to_tweet_id: NumericString, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString, 
    tweet_text: String!, 
    tweet_type: TweetTypeInput!
  ): CreateNudgeResponse @strato_column(path : "graphql/incentives/createNudgeV2") @strato_op(value : Execute)
  """
  Create an organisation
  
  Generated from Strato column: [graphql/collaborate/createOrganization](https://strato.twitter.biz/web/browse/graphql/collaborate/createOrganization)
  """
  create_organization(
    org_name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Organization @development @strato_column(path : "graphql/collaborate/createOrganization") @strato_op(value : Execute)
  """
  This endpoint is called to determine whether or not to issue a nudge (preemptive) when a user opens the composer. For more detailed documentation, see go/docbird/jiminy
  
  Generated from Strato column: [graphql/incentives/createPreemptiveNudge](https://strato.twitter.biz/web/browse/graphql/incentives/createPreemptiveNudge)
  """
  create_preemptive_nudge(conversation_id: NumericString!, in_reply_to_tweet_id: NumericString!, options: CreatePreemptiveNudgeOptionsInput): CreatePreemptiveNudgeResponse @deprecated(reason : "This mutation has no Visibility Filtering support. Use create_preemptive_nudge_v2 mutation instead") @strato_column(path : "graphql/incentives/createPreemptiveNudge") @strato_op(value : Execute)
  """
  This endpoint is called to determine whether or not to issue a nudge (preemptive) when a user opens the composer. For more detailed documentation, see go/docbird/jiminy
  
  Generated from Strato column: [graphql/incentives/createPreemptiveNudgeV2](https://strato.twitter.biz/web/browse/graphql/incentives/createPreemptiveNudgeV2)
  """
  create_preemptive_nudge_v2(
    conversation_id: NumericString!, 
    in_reply_to_tweet_id: NumericString!, 
    options: CreatePreemptiveNudgeOptionsInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CreatePreemptiveNudgeResponse @development @strato_column(path : "graphql/incentives/createPreemptiveNudgeV2") @strato_op(value : Execute)
  """
  Create a reaction on a Tweet operation. Part of the Signals Reactions project which aims to replace likes with a more diverse emoji set. See go/signals-infra-tdd
  
  Generated from Strato column: [graphql/signals/createReaction](https://strato.twitter.biz/web/browse/graphql/signals/createReaction)
  """
  create_reaction(
    "Holds engagement information required for creating Ad Callback event"
    engagement_request: EngagementRequestInput, 
    reaction_type: SignalsReactionTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): CreateReactionResult @development @strato_column(path : "graphql/signals/createReaction") @strato_op(value : Execute)
  """
  Creates a retweet by the calling Twitter user of the given source tweet.
  
  Generated from Strato column: [graphql/tweetypie/createRetweet](https://strato.twitter.biz/web/browse/graphql/tweetypie/createRetweet)
  """
  create_retweet(
    "Correlates requests originating from REST endpoints and GraphQL endpoints. UUID v4 (random) 36 character string."
    comparison_id: String, 
    "The ad engagement from which this retweet was created."
    engagement_request: EngagementRequestInput, 
    "Do not deliver this retweet to a user\\'s followers. http://go/nullcast"
    nullcast: Boolean! = false, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): CreateRetweetResponse @strato_column(path : "graphql/tweetypie/createRetweet") @strato_op(value : Execute)
  """
  Create ShopModule using the provided ShopModuleConfig
  
  Generated from Strato column: [graphql/commerce/shopmodule/createShopModule](https://strato.twitter.biz/web/browse/graphql/commerce/shopmodule/createShopModule)
  """
  create_shop_module(
    commerce_config_request: CommerceConfigRequestInput!, 
    display_type: ShopModuleDisplayTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): NumericString @strato_column(path : "graphql/commerce/shopmodule/createShopModule") @strato_op(value : Execute)
  """
  Create a team of contributors
  
  Generated from Strato column: [graphql/collaborate/createTeam](https://strato.twitter.biz/web/browse/graphql/collaborate/createTeam)
  """
  create_team(
    accounts: [NumericString!], 
    contributors: [NumericString!], 
    org_id: NumericString, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    team_name: String!
  ): Team @development @strato_column(path : "graphql/collaborate/createTeam") @strato_op(value : Execute)
  """
  Creates a tweet using the calling authenticated Twitter user as author.
  NOTE, not all Tweet space fields are GraphQL queryable in the CreateTweet mutation response.
  See http://go/missing-create-tweet-fields.
  
  Generated from Strato column: [graphql/tweetypie/createTweet](https://strato.twitter.biz/web/browse/graphql/tweetypie/createTweet)
  """
  create_tweet(
    "Tweet permalink (i.e. Quoted Tweet) or Direct Message deep link. This URL is not included in the visible_text_range."
    attachment_url: String, 
    "Batch Compose Mode. See go/batchcompose"
    batch_compose: BatchComposeModeInput, 
    "Link to the card to associate with a tweet."
    card_uri: String, 
    "Collab Tweet & Collab Invitation parameters."
    collab_control_options: CollabControlOptionsInput, 
    "Correlates requests originating from REST endpoints and GraphQL endpoints. UUID v4 (random) 36 character string."
    comparison_id: String, 
    "Restrict replies to this tweet. See http://go/dont-at-me-api. Only valid for conversation root tweets. Applies to all replies to this tweet."
    conversation_control: TweetConversationControlInput, 
    "when defined, this tweet will be marked as an edit of the tweet represented by previous_tweet_id in edit_options."
    edit_options: EditOptionsInput, 
    "The ad engagement from which this tweet was created."
    engagement_request: EngagementRequestInput, 
    "When defined, this tweet will be marked as exclusive. Leave undefined to signify a regular, non-exclusive tweet. See go/superfollows."
    exclusive_tweet_control_options: ExclusiveTweetControlOptionsInput, 
    "Tweet geo location metadata. See https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/geo"
    geo: TweetGeoInput, 
    "Media parameters."
    media: TweetMediaInput, 
    "Do not deliver this tweet to a user\\'s followers. http://go/nullcast"
    nullcast: Boolean! = false, 
    "Specifies information about live video streaming. Note that the Periscope product was shut down in March 2021, however some live video streaming features remain in the Twitter app. This struct keeps the Periscope naming convention to retain parity and traceability to other areas of the codebase that also retain the Periscope name. Note: A value of periscope.isLive=false is equivalent to this struct being left undefined."
    periscope: TweetPeriscopeContextInput, 
    "Reply parameters."
    reply: TweetReplyInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "Escherbird Annotations."
    semantic_annotation_ids: [TweetAnnotationInput!], 
    "Trusted Friends parameters."
    trusted_friends_control_options: TrustedFriendsControlOptionsInput, 
    "The user-supplied text of the tweet. Defaults to empty string. Leading & trailing whitespace are trimmed, remaining value may be empty if and only if one or more media entity ids are also provided."
    tweet_text: String! = ""
  ): CreateTweetResponse @strato_column(path : "graphql/tweetypie/createTweet") @strato_op(value : Execute)
  """
  Creates a tweet and an optional poll by the calling Twitter user.
  
  Generated from Strato column: [graphql/dataproducts/createTweetAndPoll](https://strato.twitter.biz/web/browse/graphql/dataproducts/createTweetAndPoll)
  """
  create_tweet_and_poll(
    "Restrict replies to this tweet. See http://go/dont-at-me-api. Only valid for conversation root tweets. Applies to all replies to this tweet."
    conversation_control: TweetConversationControlInput, 
    "Deep link to a direct Message - Cannot be used with quoteTweetId or poll parameters"
    direct_message_deep_link: String, 
    "Restricts Tweet to only Super Followers if true - Can only be used by accounts with Super Followers enabled"
    for_super_followers_only: Boolean, 
    "Tweet geo location metadata. See https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/geo"
    geo: TweetGeoInput, 
    "Media parameters."
    media: TweetMediaInput, 
    "Poll parameters - Cannot be used with directMessageDeepLink or quoteTweetId parameters"
    poll: PollParametersInput, 
    "Quoted Tweet ID - Cannot be used with directMessageDeepLink or poll parameters"
    quote_tweet_id: String, 
    "Reply parameters."
    reply: TweetReplyInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "The user-supplied text of the tweet. Defaults to empty string. Leading & trailing whitespace are trimmed, remaining value may be empty if and only if one or more media entity ids are also provided."
    tweet_text: String! = ""
  ): CreateTweetResultTypes @strato_column(path : "graphql/dataproducts/createTweetAndPoll") @strato_op(value : Execute)
  """
  This endpoint takes the proposed text of a tweet as well as a client-determined id and scribes the proposed tweet. This endpoint is used for work and experimentation related to 'Undo Tweet'.
  
  Generated from Strato column: [graphql/incentives/createTweetWithUndo](https://strato.twitter.biz/web/browse/graphql/incentives/createTweetWithUndo)
  """
  create_tweet_with_undo(conversation_id: NumericString, in_reply_to_tweet_id: NumericString, proposed_tweet_text: String!, proposed_tweet_type: TweetTypeInput!, proposed_tweet_uuid: String!): CreateTweetWithUndoResponse @deprecated(reason : "This mutation has no Visibility Filtering support. Use create_tweet_with_undo_v2 mutation instead") @strato_column(path : "graphql/incentives/createTweetWithUndo") @strato_op(value : Execute)
  """
  This endpoint takes the proposed text of a tweet as well as a client-determined id and scribes the proposed tweet. This endpoint is used for work and experimentation related to 'Undo Tweet'.
  
  Generated from Strato column: [graphql/incentives/createTweetWithUndoV2](https://strato.twitter.biz/web/browse/graphql/incentives/createTweetWithUndoV2)
  """
  create_tweet_with_undo_v2(
    conversation_id: NumericString, 
    in_reply_to_tweet_id: NumericString, 
    proposed_tweet_text: String!, 
    proposed_tweet_type: TweetTypeInput!, 
    proposed_tweet_uuid: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CreateTweetWithUndoResponse @development @strato_column(path : "graphql/incentives/createTweetWithUndoV2") @strato_op(value : Execute)
  """
  Create new Twitter Article.
  
  Generated from Strato column: [graphql/longform/createTwitterArticle](https://strato.twitter.biz/web/browse/graphql/longform/createTwitterArticle)
  """
  create_twitter_article(
    data: TwitterArticleDataInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    title: String!
  ): TwitterArticle @development @strato_column(path : "graphql/longform/createTwitterArticle") @strato_op(value : Execute)
  """
  Create a new Web Subscription Customer Portal Session for the given user id
  
  Generated from Strato column: [graphql/payments/create.CustomerPortalSession](https://strato.twitter.biz/web/browse/CustomerPortalSession/graphql/payments/create)
  """
  customerportalsession_create(
    origin_product: WebSubscrptionOriginProductInput, 
    return_url: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CreateCustomerPortalSessionResponse @strato_column(path : "graphql/payments/create.CustomerPortalSession") @strato_op(value : Execute)
  """
  User preference toggle for reducing data usage
  
  Generated from Strato column: [graphql/data_saver_preferences/data_saver_preferences_put](https://strato.twitter.biz/web/browse/graphql/data_saver_preferences/data_saver_preferences_put)
  """
  data_saver_preferences_put(
    "Device id to store preferences for"
    device_id: String!, 
    enabled: Boolean!, 
    video_autoplay: VideoAutoplaySettingInput
  ): DoneStatus @strato_column(path : "graphql/data_saver_preferences/data_saver_preferences_put") @strato_op(value : Put)
  """
  Fully deactivate the logged in user as a Super Follows creator.
  
  Generated from Strato column: [graphql/audiencerewards/deactivateSuperFollowsCreator](https://strato.twitter.biz/web/browse/graphql/audiencerewards/deactivateSuperFollowsCreator)
  """
  deactivate_super_follows_creator(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @development @strato_column(path : "graphql/audiencerewards/deactivateSuperFollowsCreator") @strato_op(value : Execute)
  """
  Column to delete a DeckColumn object in the authenticated user Deck, provided a Deck Id and a DeckColumn Id.
  
  Generated from Strato column: [graphql/gryphon/deleteDeckColumn](https://strato.twitter.biz/web/browse/graphql/gryphon/deleteDeckColumn)
  """
  deck_column_delete(deck_column_id: NumericString!, deck_id: NumericString!): DoneStatus @strato_column(path : "graphql/gryphon/deleteDeckColumn") @strato_op(value : Delete)
  """
  Column to edit the order of DeckColumns of an AccountSync Deck
  
  Generated from Strato column: [graphql/gryphon/putColumnOrder.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/putColumnOrder)
  """
  deck_column_order_put(column_order: [NumericString!]!, deck_id: NumericString!): DoneStatus @strato_column(path : "graphql/gryphon/putColumnOrder.Deck") @strato_op(value : Put)
  """
  Column to delete the authenticated user's Deck object, provided a Deck Id. Does not delete the underlying DeckColumns.
  
  Generated from Strato column: [graphql/gryphon/delete.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/delete)
  """
  deck_delete(deck_id: NumericString!): DoneStatus @strato_column(path : "graphql/gryphon/delete.Deck") @strato_op(value : Delete)
  """
  Column to create a new AccountSyncDeck object
  
  Generated from Strato column: [graphql/gryphon/insert.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/insert)
  """
  deck_insert(
    description: String, 
    icon: String, 
    is_pinned: Boolean, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sharing_status: AccountSyncSharingStatusInput, 
    title: String
  ): Deck @strato_column(path : "graphql/gryphon/insert.Deck") @strato_op(value : Execute)
  """
  Column to edit the order of AccountSync Decks of a user
  
  Generated from Strato column: [graphql/gryphon/putDeckOrder](https://strato.twitter.biz/web/browse/graphql/gryphon/putDeckOrder)
  """
  deck_order_put(deck_order: [NumericString!]!): DoneStatus @strato_column(path : "graphql/gryphon/putDeckOrder") @strato_op(value : Put)
  """
  Column to edit a Deck object, provided a Deck Id and a Value. The Deck must belong to the authenticated user.
  
  Generated from Strato column: [graphql/gryphon/put.Deck](https://strato.twitter.biz/web/browse/Deck/graphql/gryphon/put)
  """
  deck_put(deck_id: NumericString!, description: String, icon: String, is_pinned: Boolean, sharing_status: AccountSyncSharingStatusInput, title: String): DoneStatus @strato_column(path : "graphql/gryphon/put.Deck") @strato_op(value : Put)
  """
  Column to create a new DeckColumn object that follows an existing public DeckColumn.
  
  Generated from Strato column: [graphql/gryphon/follow.DeckColumn](https://strato.twitter.biz/web/browse/DeckColumn/graphql/gryphon/follow)
  """
  deckcolumn_follow(
    deck_id: NumericString!, 
    following_deck_column_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DeckColumn @development @strato_column(path : "graphql/gryphon/follow.DeckColumn") @strato_op(value : Execute)
  """
  Column to create a new DeckColumn object
  
  Generated from Strato column: [graphql/gryphon/insert.DeckColumn](https://strato.twitter.biz/web/browse/DeckColumn/graphql/gryphon/insert)
  """
  deckcolumn_insert(
    deck_id: NumericString!, 
    description: String, 
    drawer_selected_page: AccountSyncPagesInput, 
    drawer_selected_tab: AccountSyncTabsInput, 
    feed_option: AccountSyncTweetFeedOptionsInput, 
    feed_type: AccountSyncFeedTypeInput, 
    hide_header: Boolean, 
    insert_at_index: Int, 
    latest: Boolean, 
    media_preview: AccountSyncMediaPreviewInput, 
    pathname: String, 
    query: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sharing_status: AccountSyncSharingStatusInput, 
    show_drawer: Boolean, 
    show_tweets_after: String, 
    title: String, 
    width: AccountSyncColumnWidthInput
  ): DeckColumn @strato_column(path : "graphql/gryphon/insert.DeckColumn") @strato_op(value : Execute)
  """
  Column to create a new DeckColumn object
  
  Generated from Strato column: [graphql/gryphon/insert_v2.DeckColumn](https://strato.twitter.biz/web/browse/DeckColumn/graphql/gryphon/insert_v2)
  """
  deckcolumn_insert_v2(
    deck_id: NumericString!, 
    description: String, 
    drawer_selected_page: AccountSyncPagesInput, 
    drawer_selected_tab: AccountSyncTabsInput, 
    feed_option: AccountSyncTweetFeedOptionsInput, 
    feed_type: AccountSyncFeedTypeInput, 
    hide_header: Boolean, 
    insert_at_index: Int, 
    latest: Boolean, 
    media_preview: AccountSyncMediaPreviewInput, 
    pathname: String, 
    query: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sharing_status: AccountSyncSharingStatusInput, 
    show_drawer: Boolean, 
    show_tweets_after: String, 
    title: String, 
    width: AccountSyncColumnWidthInput
  ): DeckColumn @strato_column(path : "graphql/gryphon/insert_v2.DeckColumn") @strato_op(value : Execute)
  """
  Column to edit a DeckColumn object, provided a deckColumnId and value. Can only edit DeckColumns inside a deck owned by the authenticated user.
  
  Generated from Strato column: [graphql/gryphon/put.DeckColumn](https://strato.twitter.biz/web/browse/DeckColumn/graphql/gryphon/put)
  """
  deckcolumn_put(deck_column_id: NumericString!, deck_id: NumericString!, description: String, drawer_selected_page: AccountSyncPagesInput, drawer_selected_tab: AccountSyncTabsInput, feed_option: AccountSyncTweetFeedOptionsInput, feed_type: AccountSyncFeedTypeInput, hide_header: Boolean, insert_at_index: Int, latest: Boolean, media_preview: AccountSyncMediaPreviewInput, pathname: String, query: String, sharing_status: AccountSyncSharingStatusInput, show_drawer: Boolean, show_tweets_after: String, title: String, width: AccountSyncColumnWidthInput): DoneStatus @strato_column(path : "graphql/gryphon/put.DeckColumn") @strato_op(value : Put)
  """
  Add a new member to the delegation group owned by the requesting user
  
  Generated from Strato column: [graphql/account-delegation/delegate/delegationGroupInviteMember](https://strato.twitter.biz/web/browse/graphql/account-delegation/delegate/delegationGroupInviteMember)
  """
  delegation_group_invite_member(
    delegation_group_id: NumericString!, 
    new_member_user_id: NumericString!, 
    role: DelegationRoleInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DelegationGroup @development @strato_column(path : "graphql/account-delegation/delegate/delegationGroupInviteMember") @strato_op(value : Execute)
  """
  Allows a user to cancel a membership invitation.
  
  Generated from Strato column: [graphql/account-delegation/delegate/delegationMembershipCancel](https://strato.twitter.biz/web/browse/graphql/account-delegation/delegate/delegationMembershipCancel)
  """
  delegation_membership_cancel(
    delegation_membership_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DelegationMembership @development @strato_column(path : "graphql/account-delegation/delegate/delegationMembershipCancel") @strato_op(value : Execute)
  """
  Remove the member with the specified membership Id
  
  Generated from Strato column: [graphql/account-delegation/delegate/delegationMembershipDelete](https://strato.twitter.biz/web/browse/graphql/account-delegation/delegate/delegationMembershipDelete)
  """
  delegation_membership_delete(
    delegation_membership_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DelegationGroup @development @strato_column(path : "graphql/account-delegation/delegate/delegationMembershipDelete") @strato_op(value : Execute)
  """
  Allows a user to reject a membership invitation.
  
  Generated from Strato column: [graphql/account-delegation/delegate/delegationMembershipReject](https://strato.twitter.biz/web/browse/graphql/account-delegation/delegate/delegationMembershipReject)
  """
  delegation_membership_reject(
    delegation_membership_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DelegationMembership @development @strato_column(path : "graphql/account-delegation/delegate/delegationMembershipReject") @strato_op(value : Execute)
  """
  Returns the Role of the specified Delegation Membership for the authenticated user.
  
  Generated from Strato column: [graphql/account-delegation/delegate/role.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/role)
  """
  delegationmembership_role_put(delegate_role: DelegationRoleInput!, delegation_membership_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/account-delegation/delegate/role.DelegationMembership") @strato_op(value : Put)
  """
  Returns the status of the specified Delegation Membership for the authenticated user.
  
  Generated from Strato column: [graphql/account-delegation/delegate/status.DelegationMembership](https://strato.twitter.biz/web/browse/DelegationMembership/graphql/account-delegation/delegate/status)
  """
  delegationmembership_status_put(delegate_status: DelegationInvitationStatusInput!, delegation_membership_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/account-delegation/delegate/status.DelegationMembership") @strato_op(value : Put)
  """
  Create a downvote on a Tweet operation. Part of the Incentives reply  voting project which aims to allow users to downvote tweets that are toxic or irrelevant to the conversation so that the downvote signal can be used in conversation ranking See go/replyvoting-infra-tdd
  
  Generated from Strato column: [graphql/incentives/replyvoting/deleteDownvote](https://strato.twitter.biz/web/browse/graphql/incentives/replyvoting/deleteDownvote)
  """
  delete_downvote(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): Downvote @development @strato_column(path : "graphql/incentives/replyvoting/deleteDownvote") @strato_op(value : Execute)
  """
  Deletes a payment method by id
  
  Generated from Strato column: [graphql/payments/deletePaymentMethod](https://strato.twitter.biz/web/browse/graphql/payments/deletePaymentMethod)
  """
  delete_payment_method(
    payment_method_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DeletePaymentMethodResult @strato_column(path : "graphql/payments/deletePaymentMethod") @strato_op(value : Execute)
  """
  Deletes a list of product keys
  
  Generated from Strato column: [graphql/commerce/catalog/operations/deleteProducts](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/deleteProducts)
  """
  delete_products(
    product_keys: [NumericString!]! = [], 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [DeleteProductResult!] @strato_column(path : "graphql/commerce/catalog/operations/deleteProducts") @strato_op(value : Execute)
  """
  Delete a reaction on a Tweet operation. Part of the Signals Reactions project which aims to replace likes with a more diverse emoji set. See go/signals-infra-tdd
  
  Generated from Strato column: [graphql/signals/deleteReaction](https://strato.twitter.biz/web/browse/graphql/signals/deleteReaction)
  """
  delete_reaction(
    "Holds engagement information required for creating Ad Callback event"
    engagement_request: EngagementRequestInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DeleteReactionResult @development @strato_column(path : "graphql/signals/deleteReaction") @strato_op(value : Execute)
  """
  Deletes a tweet by the calling Twitter user.
  
  Generated from Strato column: [graphql/tweetypie/deleteTweet](https://strato.twitter.biz/web/browse/graphql/tweetypie/deleteTweet)
  """
  delete_tweet(
    "Correlates requests originating from REST endpoints and GraphQL endpoints. UUID v4 (random) 36 character string."
    comparison_id: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DeleteTweetResponse @strato_column(path : "graphql/tweetypie/deleteTweet") @strato_op(value : Execute)
  """
  Delete Twitter Article entity and all associated data.
  
  Generated from Strato column: [graphql/longform/deleteTwitterArticle](https://strato.twitter.biz/web/browse/graphql/longform/deleteTwitterArticle)
  """
  delete_twitter_article(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    twitter_article_id: NumericString!
  ): DoneStatus @development @strato_column(path : "graphql/longform/deleteTwitterArticle") @strato_op(value : Execute)
  """
  Denies a follow request from the viewer to the provided target user.
  
  Generated from Strato column: [graphql/socialgraph/denyFollowRequest](https://strato.twitter.biz/web/browse/graphql/socialgraph/denyFollowRequest)
  """
  deny_follow_request(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): DenyFollowRequestResult @development @strato_column(path : "graphql/socialgraph/denyFollowRequest") @strato_op(value : Execute)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilter](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilter)
  """
  developer_content_filter_delete(developer_content_filter_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilter") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilter](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilter)
  """
  developer_content_filter_insert(
    icon_media_key: String, 
    icon_url: String, 
    name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    state: DeveloperContentFilterStateInput! = Development
  ): NumericString @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilter") @strato_op(value : Insert)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilter](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilter)
  """
  developer_content_filter_put(developer_content_filter_id: NumericString!, icon_media_key: String, icon_url: String, name: String!, state: DeveloperContentFilterStateInput! = Development): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilter") @strato_op(value : Put)
  """
  [DevPlatform Content Controls] Delete Developer Content Filter Rule
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilterRulesDelete](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilterRulesDelete)
  """
  developer_content_filter_rules_delete(developer_content_filter_id: NumericString!, developer_content_filter_rule_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilterRulesDelete") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter Rules
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilterRulesInsert](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilterRulesInsert)
  """
  developer_content_filter_rules_insert(
    decision: DeveloperContentFilterDecisionInput!, 
    developer_content_filter_id: NumericString!, 
    rule: String!, 
    rule_id: NumericString, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): NumericString @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilterRulesInsert") @strato_op(value : Insert)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter Tweet Decisions
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilterTweetDecision](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilterTweetDecision)
  """
  developer_content_filter_tweet_decision_delete(developer_content_filter_id: NumericString!, tweet_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilterTweetDecision") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter Tweet Decisions
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilterTweetDecision](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/developerContentFilterTweetDecision)
  """
  developer_content_filter_tweet_decision_put(decision_type: DeveloperContentFilterDecisionTypeInput!, developer_content_filter_id: NumericString!, reason: String, tweet_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilterTweetDecision") @strato_op(value : Put)
  """
  Executes a device follow between the twitter user and the provided target user.
  
  Generated from Strato column: [graphql/socialgraph/deviceFollow](https://strato.twitter.biz/web/browse/graphql/socialgraph/deviceFollow)
  """
  device_follow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): DeviceFollowResult @development @strato_column(path : "graphql/socialgraph/deviceFollow") @strato_op(value : Execute)
  """
  Executes a device unfollow between the twitter user and the provided target user.
  
  Generated from Strato column: [graphql/socialgraph/deviceUnfollow](https://strato.twitter.biz/web/browse/graphql/socialgraph/deviceUnfollow)
  """
  device_unfollow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): DeviceUnfollowResult @development @strato_column(path : "graphql/socialgraph/deviceUnfollow") @strato_op(value : Execute)
  """
  Disable an account label entity for authenticated twitter user making the request.
  
  Generated from Strato column: [graphql/account-types/disableUserAccountLabel](https://strato.twitter.biz/web/browse/graphql/account-types/disableUserAccountLabel)
  """
  disable_user_account_label(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @strato_column(path : "graphql/account-types/disableUserAccountLabel") @strato_op(value : Execute)
  """
  Remove a label from a conversation
  
  Generated from Strato column: [graphql/dmConversationLabels/deleteDMConversationLabel](https://strato.twitter.biz/web/browse/graphql/dmConversationLabels/deleteDMConversationLabel)
  """
  dm_conversation_label_delete(conversation_id: String!, label_type: DMConversationLabelInput!): DoneStatus @strato_column(path : "graphql/dmConversationLabels/deleteDMConversationLabel") @strato_op(value : Delete)
  "Generated from Strato column: [graphql/directmessages/dmConversationSettings](https://strato.twitter.biz/web/browse/graphql/directmessages/dmConversationSettings)"
  dm_conversation_settings_put(avatar_media_id: NumericString, conversation_id: String!, name: String, remove_participant_user_ids: [NumericString!], request_id: String): DoneStatus @strato_column(path : "graphql/directmessages/dmConversationSettings") @strato_op(value : Put)
  "Generated from Strato column: [graphql/directmessages/dmMessageHide](https://strato.twitter.biz/web/browse/graphql/directmessages/dmMessageHide)"
  dm_message_hide_delete(message_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/directmessages/dmMessageHide") @strato_op(value : Delete)
  "Generated from Strato column: [graphql/draft/delete.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/delete)"
  drafttweet_delete(draft_tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/draft/delete.DraftTweet") @strato_op(value : Delete)
  "Generated from Strato column: [graphql/draft/insert.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/insert)"
  drafttweet_insert(post_retweet_request: PostRetweetRequestInput, post_tweet_request: PostTweetRequestInput): DraftTweet @deprecated(reason : "This mutation has no Visibility Filtering support. Use drafttweet_insert_v2 mutation instead") @strato_column(path : "graphql/draft/insert.DraftTweet") @strato_op(value : Insert)
  "Generated from Strato column: [graphql/draft/put.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/put)"
  drafttweet_put(draft_tweet_id: NumericString!, post_retweet_request: PostRetweetRequestInput, post_tweet_request: PostTweetRequestInput): DoneStatus @strato_column(path : "graphql/draft/put.DraftTweet") @strato_op(value : Put)
  "Generated from Strato column: [graphql/draft/insertV2.DraftTweet](https://strato.twitter.biz/web/browse/DraftTweet/graphql/draft/insertV2)"
  drafttweet_v2_insert(
    post_retweet_request: PostRetweetRequestInput, 
    post_tweet_request: PostTweetRequestInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DraftTweet @strato_column(path : "graphql/draft/insertV2.DraftTweet") @strato_op(value : Insert)
  """
  Executes an exclusive tweet follow from the viewer to the provided target user
  
  Generated from Strato column: [graphql/audiencerewards/exclusiveTweetFollow](https://strato.twitter.biz/web/browse/graphql/audiencerewards/exclusiveTweetFollow)
  """
  exclusive_tweet_follow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): ExclusiveTweetFollowResult @strato_column(path : "graphql/audiencerewards/exclusiveTweetFollow") @strato_op(value : Execute)
  """
  Executes an exclusive tweet unfollow from the viewer to the provided target user
  
  Generated from Strato column: [graphql/audiencerewards/exclusiveTweetUnfollow](https://strato.twitter.biz/web/browse/graphql/audiencerewards/exclusiveTweetUnfollow)
  """
  exclusive_tweet_unfollow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): ExclusiveTweetUnfollowResult @strato_column(path : "graphql/audiencerewards/exclusiveTweetUnfollow") @strato_op(value : Execute)
  """
  Favorite Tweet Operation
  
  Generated from Strato column: [graphql/timelines/favoriteTweet](https://strato.twitter.biz/web/browse/graphql/timelines/favoriteTweet)
  """
  favorite_tweet(
    "Holds engagement information required for creating Ad Callback event"
    engagement_request: EngagementRequestInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DoneStatus @strato_column(path : "graphql/timelines/favoriteTweet") @strato_op(value : Execute)
  """
  An Advertiser Account can have saved filter sets. Filter set id is the id of a saved filter set within advertiser's reporting dashboard. This column will be used to delete a filter set based on a provided filter set id.
  
  Generated from Strato column: [graphql/customer-experience-apps/filterSetDelete](https://strato.twitter.biz/web/browse/graphql/customer-experience-apps/filterSetDelete)
  """
  filter_set_delete(account_id: NumericString!, filter_set_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/customer-experience-apps/filterSetDelete") @strato_op(value : Delete)
  """
  *You must get approval from DES Insights to use this column* A follow account action on behalf of a user. 
  
  Generated from Strato column: [graphql/dataproducts/follow_by_rest_id_v2](https://strato.twitter.biz/web/browse/graphql/dataproducts/follow_by_rest_id_v2)
  """
  follow_by_rest_id_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): FollowResult @strato_column(path : "graphql/dataproducts/follow_by_rest_id_v2") @strato_op(value : Execute)
  """
  Follow the retweets of the target user. This is the default when following a user: it follows both tweets and retweets. See retweetUnfollow to stop following retweets and only keep following tweets.
  
  Generated from Strato column: [graphql/socialgraph/followRetweets](https://strato.twitter.biz/web/browse/graphql/socialgraph/followRetweets)
  """
  follow_retweets(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): FollowRetweetsResult @development @strato_column(path : "graphql/socialgraph/followRetweets") @strato_op(value : Execute)
  """
  Soft-deletes a business profile
  
  Generated from Strato column: [graphql/bizprofiles/hideBusinessProfile](https://strato.twitter.biz/web/browse/graphql/bizprofiles/hideBusinessProfile)
  """
  hide_business_profile(
    business_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UserOrValidationErrorResponse @strato_column(path : "graphql/bizprofiles/hideBusinessProfile") @strato_op(value : Execute)
  """
  Generate/read the obfuscatedId from generateObfuscatedId.strato. Used for inAppPurchase Verification
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseObfuscatedIdRedeem](https://strato.twitter.biz/web/browse/graphql/audiencerewards/inAppPurchaseObfuscatedIdRedeem)
  """
  in_app_purchase_obfuscated_id_redeem(
    obfuscated_id_type: ObfuscatedIdTypeInput!, 
    redeem_metadata: ObfuscatedIdRedeemMetadataInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ObfuscatedIdResult @strato_column(path : "graphql/audiencerewards/inAppPurchaseObfuscatedIdRedeem") @strato_op(value : Execute)
  """
  Client is requesting MagicRecs for the specific Target Ids
  
  Generated from Strato column: [graphql/frigate/initiateMagicRecsPush](https://strato.twitter.biz/web/browse/graphql/frigate/initiateMagicRecsPush)
  """
  initiate_magic_recs_push_put(user_ids: [NumericString!]!): DoneStatus @development @strato_column(path : "graphql/frigate/initiateMagicRecsPush") @strato_op(value : Put)
  """
  Initiates strike tip transfer. Use invoiceId generated to do actual transfer. Tippee has to have tipping enabled and have strike handle entered.
  
  Generated from Strato column: [graphql/tipjar/initiateStrikeTip](https://strato.twitter.biz/web/browse/graphql/tipjar/initiateStrikeTip)
  """
  initiate_strike_tip(
    amount: Int!, 
    note: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tippee: NumericString!
  ): SendTipResult @strato_column(path : "graphql/tipjar/initiateStrikeTip") @strato_op(value : Execute)
  """
  Tweb3.InitiateVerificationSession is a verification endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/initiateVerificationSession](https://strato.twitter.biz/web/browse/graphql/tweb3/initiateVerificationSession)
  """
  initiate_verification_session(
    network: NetworkInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): VerificationSessionResult @strato_column(path : "graphql/tweb3/initiateVerificationSession") @strato_op(value : Execute)
  """
  Creates a list and returns a reference to the newly created list
  
  Generated from Strato column: [graphql/list/create.List](https://strato.twitter.biz/web/browse/List/graphql/list/create)
  """
  list_create(description: String, is_private: Boolean!, list_name: String!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_create_v2 mutation instead") @strato_column(path : "graphql/list/create.List") @strato_op(value : Execute)
  """
  Creates a list and returns a reference to the newly created list
  
  Generated from Strato column: [graphql/list/createV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/createV2)
  """
  list_create_v2(
    description: String, 
    is_private: Boolean!, 
    list_name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @strato_column(path : "graphql/list/createV2.List") @strato_op(value : Execute)
  """
  Deletes a list owned by the currently logged in user.
  
  Generated from Strato column: [graphql/list/delete.List](https://strato.twitter.biz/web/browse/List/graphql/list/delete)
  """
  list_delete(list_id: NumericString!): DoneStatus @strato_column(path : "graphql/list/delete.List") @strato_op(value : Delete)
  """
  Deletes a media id associated with a list id and then returns the list reference
  
  Generated from Strato column: [graphql/list/deleteBannerMedia.List](https://strato.twitter.biz/web/browse/List/graphql/list/deleteBannerMedia)
  """
  list_delete_banner_media(list_id: NumericString!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use delete_banner_media_v2 mutation instead") @strato_column(path : "graphql/list/deleteBannerMedia.List") @strato_op(value : Execute)
  """
  Deletes a media id associated with a list id and then returns the list reference
  
  Generated from Strato column: [graphql/list/deleteBannerMediaV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/deleteBannerMediaV2)
  """
  list_delete_banner_media_v2(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @development @strato_column(path : "graphql/list/deleteBannerMediaV2.List") @strato_op(value : Execute)
  """
  Deletes or Put a media id with a list id
  
  Generated from Strato column: [graphql/list/mediaId.List](https://strato.twitter.biz/web/browse/List/graphql/list/mediaId)
  """
  list_media_id_delete(list_id: NumericString!): DoneStatus @strato_column(path : "graphql/list/mediaId.List") @strato_op(value : Delete)
  """
  Deletes or Put a media id with a list id
  
  Generated from Strato column: [graphql/list/mediaId.List](https://strato.twitter.biz/web/browse/List/graphql/list/mediaId)
  """
  list_media_id_put(list_id: NumericString!, media_id: NumericString!): DoneStatus @strato_column(path : "graphql/list/mediaId.List") @strato_op(value : Put)
  """
  Add a user to a list by id
  
  Generated from Strato column: [graphql/list/memberAdd.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberAdd)
  """
  list_member_add(list_id: NumericString!, user_id: NumericString!): DoneStatus @deprecated(reason : "migrated to graphql/memberAddV2.List") @strato_column(path : "graphql/list/memberAdd.List") @strato_op(value : Execute)
  """
  Add a user to a list by id
  
  Generated from Strato column: [graphql/list/memberAddV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberAddV2)
  """
  list_member_add_v2(list_id: NumericString!, user_id: NumericString!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_member_add_v4 mutation instead") @strato_column(path : "graphql/list/memberAddV2.List") @strato_op(value : Execute)
  """
  Add a user to a list by id
  
  Generated from Strato column: [graphql/list/memberAddV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberAddV3)
  """
  list_member_add_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): List @deprecated(reason : "Use list_member_add_v4 mutation instead") @strato_column(path : "graphql/list/memberAddV3.List") @strato_op(value : Execute)
  """
  A single list add member action on behalf of a user.
  
  Generated from Strato column: [graphql/dataproducts/listMemberAddV4](https://strato.twitter.biz/web/browse/graphql/dataproducts/listMemberAddV4)
  """
  list_member_add_v4(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): AddListMemberResult @strato_column(path : "graphql/dataproducts/listMemberAddV4") @strato_op(value : Execute)
  """
  Remove a user from a list by id
  
  Generated from Strato column: [graphql/list/memberRemove.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberRemove)
  """
  list_member_remove(list_id: NumericString!, user_id: NumericString!): DoneStatus @deprecated(reason : "migrated to graphql/memberRemoveV2.List") @strato_column(path : "graphql/list/memberRemove.List") @strato_op(value : Execute)
  """
  Remove a user from a list by id
  
  Generated from Strato column: [graphql/list/memberRemoveV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberRemoveV2)
  """
  list_member_remove_v2(list_id: NumericString!, user_id: NumericString!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_member_remove_v3 mutation instead") @strato_column(path : "graphql/list/memberRemoveV2.List") @strato_op(value : Execute)
  """
  Remove a user from a list by id
  
  Generated from Strato column: [graphql/list/memberRemoveV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberRemoveV3)
  """
  list_member_remove_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): List @strato_column(path : "graphql/list/memberRemoveV3.List") @strato_op(value : Execute)
  """
  This column supports removing members from a List in bulk.
  
  Generated from Strato column: [graphql/list/memberRemoveV4.List](https://strato.twitter.biz/web/browse/List/graphql/list/memberRemoveV4)
  """
  list_member_remove_v4(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_ids: [NumericString!]!
  ): [RemoveListMemberResult!] @development @strato_column(path : "graphql/list/memberRemoveV4.List") @strato_op(value : Execute)
  """
  Add users to a list by ids
  
  Generated from Strato column: [graphql/list/membersAdd.List](https://strato.twitter.biz/web/browse/List/graphql/list/membersAdd)
  """
  list_members_add(list_id: NumericString!, user_ids: [NumericString!]!): DoneStatus @deprecated(reason : "migrated to graphql/membersAddV2.List") @strato_column(path : "graphql/list/membersAdd.List") @strato_op(value : Execute)
  """
  Add users to a list by ids
  
  Generated from Strato column: [graphql/list/membersAddV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/membersAddV2)
  """
  list_members_add_v2(list_id: NumericString!, user_ids: [NumericString!]!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_member_add_v4 mutation instead") @strato_column(path : "graphql/list/membersAddV2.List") @strato_op(value : Execute)
  """
  Add users to a list by ids
  
  Generated from Strato column: [graphql/list/membersAddV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/membersAddV3)
  """
  list_members_add_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_ids: [NumericString!]!
  ): List @deprecated(reason : "Use list_member_add_v4 mutation instead") @strato_column(path : "graphql/list/membersAddV3.List") @strato_op(value : Execute)
  """
  This column supports adding members to a list in bulk.
  
  Generated from Strato column: [graphql/list/membersAddV4.List](https://strato.twitter.biz/web/browse/List/graphql/list/membersAddV4)
  """
  list_members_add_v4(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_ids: [NumericString!]!
  ): [AddListMemberResult!] @development @strato_column(path : "graphql/list/membersAddV4.List") @strato_op(value : Execute)
  """
  Mutes List by id for the current user
  
  Generated from Strato column: [graphql/list/mute.List](https://strato.twitter.biz/web/browse/List/graphql/list/mute)
  """
  list_mute(list_id: NumericString!): DoneStatus @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_mute_v2 mutation instead") @strato_column(path : "graphql/list/mute.List") @strato_op(value : Execute)
  """
  Mutes List by id for the current user
  
  Generated from Strato column: [graphql/list/muteV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/muteV2)
  """
  list_mute_v2(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @strato_column(path : "graphql/list/muteV2.List") @strato_op(value : Execute)
  """
  Appends the list to the current user's pinned lists. If the list is already in pinned lists, then it is not appended, but a write may still be triggered if the user no longer follows one or more pinned lists. Returns the user's updated pinned lists.
  
  Generated from Strato column: [graphql/list/pin.List](https://strato.twitter.biz/web/browse/List/graphql/list/pin)
  """
  list_pin(list_id: NumericString!): [List!] @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_pin_v2 mutation instead") @strato_column(path : "graphql/list/pin.List") @strato_op(value : Execute)
  """
  Appends the list to the current user's pinned lists. If the list is already in pinned lists, then it is not appended, but a write may still be triggered if the user no longer follows one or more pinned lists. Returns the user's updated pinned lists.
  
  Generated from Strato column: [graphql/list/pinV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/pinV2)
  """
  list_pin_v2(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [List!] @strato_column(path : "graphql/list/pinV2.List") @strato_op(value : Execute)
  """
  Appends the list to the current user's pinned lists. If the list is already in pinned lists, then it is not appended, but a write may still be triggered if the user no longer follows one or more pinned lists. Returns the user's updated pinned lists.
  
  Generated from Strato column: [graphql/list/pinV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/pinV3)
  """
  list_pin_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): PinListResult @strato_column(path : "graphql/list/pinV3.List") @strato_op(value : Execute)
  """
  Associates a media id with a list id and then returns the list reference
  
  Generated from Strato column: [graphql/list/putBannerMedia.List](https://strato.twitter.biz/web/browse/List/graphql/list/putBannerMedia)
  """
  list_put_banner_media(list_id: NumericString!, media_id: NumericString!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_put_banner_media_v2 mutation instead") @strato_column(path : "graphql/list/putBannerMedia.List") @strato_op(value : Execute)
  """
  Associates a media id with a list id and then returns the list reference
  
  Generated from Strato column: [graphql/list/putBannerMediaV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/putBannerMediaV2)
  """
  list_put_banner_media_v2(
    list_id: NumericString!, 
    media_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @development @strato_column(path : "graphql/list/putBannerMediaV2.List") @strato_op(value : Execute)
  """
  Subscribes the current user to a List by id
  
  Generated from Strato column: [graphql/list/subscribe.List](https://strato.twitter.biz/web/browse/List/graphql/list/subscribe)
  """
  list_subscribe(list_id: NumericString!): DoneStatus @deprecated(reason : "migrated to graphql/subscribeV2.List") @strato_column(path : "graphql/list/subscribe.List") @strato_op(value : Execute)
  """
  Subscribes the current user to a List by id
  
  Generated from Strato column: [graphql/list/subscribeV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/subscribeV2)
  """
  list_subscribe_v2(list_id: NumericString!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_subscribe_v3 mutation instead") @strato_column(path : "graphql/list/subscribeV2.List") @strato_op(value : Execute)
  """
  Subscribes the current user to a List by id
  
  Generated from Strato column: [graphql/list/subscribeV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/subscribeV3)
  """
  list_subscribe_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @strato_column(path : "graphql/list/subscribeV3.List") @strato_op(value : Execute)
  """
  Unmutes List by id for the current user
  
  Generated from Strato column: [graphql/list/unmute.List](https://strato.twitter.biz/web/browse/List/graphql/list/unmute)
  """
  list_unmute(list_id: NumericString!): DoneStatus @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_unmute_v2 mutation instead") @strato_column(path : "graphql/list/unmute.List") @strato_op(value : Execute)
  """
  Unmutes List by id for the current user
  
  Generated from Strato column: [graphql/list/unmuteV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/unmuteV2)
  """
  list_unmute_v2(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @strato_column(path : "graphql/list/unmuteV2.List") @strato_op(value : Execute)
  """
  Removes the list from the current user's pinned lists. If pinned lists are empty or undefined, then no write is triggered. If pinned lists does not contain the input list, then a write may still be triggered if the user no longer follows one or more pinned lists. Returns the user's updated pinned lists.
  
  Generated from Strato column: [graphql/list/unpin.List](https://strato.twitter.biz/web/browse/List/graphql/list/unpin)
  """
  list_unpin(list_id: NumericString!): [List!] @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_unpin_v2 mutation instead") @strato_column(path : "graphql/list/unpin.List") @strato_op(value : Execute)
  """
  Removes the list from the current user's pinned lists. If pinned lists are empty or undefined, then no write is triggered. If pinned lists does not contain the input list, then a write may still be triggered if the user no longer follows one or more pinned lists. Returns the user's updated pinned lists.
  
  Generated from Strato column: [graphql/list/unpinV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/unpinV2)
  """
  list_unpin_v2(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [List!] @strato_column(path : "graphql/list/unpinV2.List") @strato_op(value : Execute)
  """
  Removes the list from the current user's pinned lists. If pinned lists are empty or undefined, then no write is triggered. If pinned lists does not contain the input list, then a write may still be triggered if the user no longer follows one or more pinned lists. Returns the user's updated pinned lists.
  
  Generated from Strato column: [graphql/list/unpinV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/unpinV3)
  """
  list_unpin_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UnpinListResult @strato_column(path : "graphql/list/unpinV3.List") @strato_op(value : Execute)
  """
  Unsubscribes the current user from a List by id
  
  Generated from Strato column: [graphql/list/unsubscribe.List](https://strato.twitter.biz/web/browse/List/graphql/list/unsubscribe)
  """
  list_unsubscribe(list_id: NumericString!): DoneStatus @deprecated(reason : "migrated to graphql/unsubscribeV2.List") @strato_column(path : "graphql/list/unsubscribe.List") @strato_op(value : Execute)
  """
  Unsubscribes the current user from a List by id
  
  Generated from Strato column: [graphql/list/unsubscribeV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/unsubscribeV2)
  """
  list_unsubscribe_v2(list_id: NumericString!): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_unsubscribe_v3 mutation instead") @strato_column(path : "graphql/list/unsubscribeV2.List") @strato_op(value : Execute)
  """
  Unsubscribes the current user from a List by id
  
  Generated from Strato column: [graphql/list/unsubscribeV3.List](https://strato.twitter.biz/web/browse/List/graphql/list/unsubscribeV3)
  """
  list_unsubscribe_v3(
    list_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @strato_column(path : "graphql/list/unsubscribeV3.List") @strato_op(value : Execute)
  """
  Updates a list and returns a reference to the newly updated list
  
  Generated from Strato column: [graphql/list/update.List](https://strato.twitter.biz/web/browse/List/graphql/list/update)
  """
  list_update(is_private: Boolean, list_id: NumericString!, new_list_description: String, new_list_name: String): List @deprecated(reason : "This mutation has no Visibility Filtering support. Use list_update_v2 mutation instead") @strato_column(path : "graphql/list/update.List") @strato_op(value : Execute)
  """
  Updates a list and returns a reference to the newly updated list
  
  Generated from Strato column: [graphql/list/updateV2.List](https://strato.twitter.biz/web/browse/List/graphql/list/updateV2)
  """
  list_update_v2(
    is_private: Boolean, 
    list_id: NumericString!, 
    new_list_description: String, 
    new_list_name: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @strato_column(path : "graphql/list/updateV2.List") @strato_op(value : Execute)
  """
  Executes a live follow between the twitter user and the provided target user.
  
  Generated from Strato column: [graphql/socialgraph/liveFollow](https://strato.twitter.biz/web/browse/graphql/socialgraph/liveFollow)
  """
  live_follow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): LiveFollowResult @development @strato_column(path : "graphql/socialgraph/liveFollow") @strato_op(value : Execute)
  """
  Executes a live unfollow between the twitter user and the provided target user.
  
  Generated from Strato column: [graphql/socialgraph/liveUnfollow](https://strato.twitter.biz/web/browse/graphql/socialgraph/liveUnfollow)
  """
  live_unfollow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): LiveUnfollowResult @development @strato_column(path : "graphql/socialgraph/liveUnfollow") @strato_op(value : Execute)
  """
  A single mute account action on behalf of a user.
  
  Generated from Strato column: [graphql/dataproducts/muteUserByRestId](https://strato.twitter.biz/web/browse/graphql/dataproducts/muteUserByRestId)
  """
  mute_user_by_rest_id(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): MuteResult @strato_column(path : "graphql/dataproducts/muteUserByRestId") @strato_op(value : Execute)
  """
  [DevPlatform Content Controls] Mutate User Selected Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/myDeveloperContentFilter](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/myDeveloperContentFilter)
  """
  my_developer_content_filter_delete(developer_content_filter_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/myDeveloperContentFilter") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate User Selected Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/myDeveloperContentFilter](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/myDeveloperContentFilter)
  """
  my_developer_content_filter_put(developer_content_filter_id: NumericString!, enabled_mode: UserDeveloperContentFilterConfigEnabledModeInput! = Hidden): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/myDeveloperContentFilter") @strato_op(value : Put)
  """
  Writes the current user's pinned lists. A user can pin a list that they own or subscribe to. Pinning a list (1) adds the list to a "Pinned" module at the top of the List management page, and (2) renders a "labeled segment" in the Home page containing the list timeline. As of 2020-08-04 a client FS param limits the number of pinned lists to 5, but the backend limit is 100. See http://go/channels-pinned-lists-storage for details.
  
  Generated from Strato column: [graphql/list/pinnedListsPut](https://strato.twitter.biz/web/browse/graphql/list/pinnedListsPut)
  """
  pinned_lists_put(list_ids: [NumericString!]!): [List!] @deprecated(reason : "This mutation has no Visibility Filtering support. Use pinned_lists_put_v2 mutation instead") @strato_column(path : "graphql/list/pinnedListsPut") @strato_op(value : Execute)
  """
  Writes the current user's pinned lists. A user can pin a list that they own or subscribe to. Pinning a list (1) adds the list to a "Pinned" module at the top of the List management page, and (2) renders a "labeled segment" in the Home page containing the list timeline. As of 2020-08-04 a client FS param limits the number of pinned lists to 5, but the backend limit is 100. See http://go/channels-pinned-lists-storage for details.
  
  Generated from Strato column: [graphql/list/pinnedListsPutV2](https://strato.twitter.biz/web/browse/graphql/list/pinnedListsPutV2)
  """
  pinned_lists_put_v2(
    list_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [List!] @strato_column(path : "graphql/list/pinnedListsPutV2") @strato_op(value : Execute)
  """
  Simple internal column to send TypingIndicators on behalf of a user as a side effect.
  
  Generated from Strato column: [graphql/directmessages/postTypingIndicator](https://strato.twitter.biz/web/browse/graphql/directmessages/postTypingIndicator)
  """
  post_typing_indicator(
    client_application_id: NumericString, 
    conversation_id: String!, 
    device_id: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TypingIndicatorResult @development @strato_column(path : "graphql/directmessages/postTypingIndicator") @strato_op(value : Execute)
  """
  Deletes an existing Product Set
  
  Generated from Strato column: [graphql/commerce/catalog/operations/deleteProductSet](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/deleteProductSet)
  """
  product_set_delete(product_set_id: NumericString!): DoneStatus @strato_column(path : "graphql/commerce/catalog/operations/deleteProductSet") @strato_op(value : Delete)
  """
  [Development only] Create a new ProductSubscription for the given userID and productID
  
  Generated from Strato column: [graphql/subscription-services/create.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/create)
  """
  productsubscription_create(free_trial_end_time_in_millis: Int53, payment_reference: String, payment_source: UserSubscriptionPaymentSourceInput, product_id: String!, user_id: NumericString): ProductSubscription @deprecated(reason : "This mutation has no Visibility Filtering support. Use create_product_subscription_v2 mutation instead") @strato_column(path : "graphql/subscription-services/create.ProductSubscription") @strato_op(value : Execute)
  """
  [Development only] Create a new ProductSubscription for the given userID and productID
  
  Generated from Strato column: [graphql/subscription-services/createV2.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/createV2)
  """
  productsubscription_create_v2(
    free_trial_end_time_in_millis: Int53, 
    payment_reference: String, 
    payment_source: UserSubscriptionPaymentSourceInput, 
    product_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString
  ): ProductSubscription @development @strato_column(path : "graphql/subscription-services/createV2.ProductSubscription") @strato_op(value : Execute)
  """
  Column to create or update AccountSyncOnboardingState object
  
  Generated from Strato column: [graphql/gryphon/putAccountsyncOnboardingState](https://strato.twitter.biz/web/browse/graphql/gryphon/putAccountsyncOnboardingState)
  """
  put_accountsync_onboarding_state(
    "Deprecated( use betaSurveyDismissed instead)"
    beta_survey_completed: Boolean, 
    beta_survey_dismissed: Boolean, 
    import_modal_dismissed: Boolean, 
    onboarding_tour_displayed: Boolean, 
    opt_in_modal_dismissed: Boolean, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_opted_in: Boolean
  ): AccountSyncOnboardingStateResponse @strato_column(path : "graphql/gryphon/putAccountsyncOnboardingState") @strato_op(value : Execute)
  """
  Creates a simple ad campaign to promote a tweet with basic targeting criteria.
  
  Generated from Strato column: [graphql/quick-promote/quickPromoteCampaign](https://strato.twitter.biz/web/browse/graphql/quick-promote/quickPromoteCampaign)
  """
  quick_promote_campaign(
    "Ad account id"
    account_id: NumericString!, 
    "Daily and total budget"
    budget: QuickPromotePromotionBudgetInput!, 
    "Id of the preferred method of payment"
    funding_instrument_id: NumericString!, 
    platform: EasypromotePlatformInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "Quick promote will setup some default targetings for your campaign. This parameter lets you override them"
    targeting_overrides: EasypromoteTargetingOverridesInput, 
    tweet_id: NumericString!, 
    "Promoting user id"
    user_id: NumericString!
  ): PromotionResponse @strato_column(path : "graphql/quick-promote/quickPromoteCampaign") @strato_op(value : Execute)
  """
  Creates a simple ad campaign to promote a tweet with basic targeting criteria.
  
  Generated from Strato column: [graphql/quick-promote/quickPromoteCampaignV2](https://strato.twitter.biz/web/browse/graphql/quick-promote/quickPromoteCampaignV2)
  """
  quick_promote_campaign_v2(
    "Ad account id"
    account_id: String!, 
    "Daily and total budget"
    budget: QuickPromotePromotionBudgetInput!, 
    "Id of the preferred method of payment"
    funding_instrument_id: String!, 
    objective: QuickPromoteObjectiveInput, 
    platform: EasypromotePlatformInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "Quick promote will setup some default targetings for your campaign. This parameter lets you override them"
    targeting_overrides: EasypromoteTargetingOverridesInput, 
    tweet_id: NumericString!, 
    "Promoting user id"
    user_id: NumericString!
  ): PromotionResponse @strato_column(path : "graphql/quick-promote/quickPromoteCampaignV2") @strato_op(value : Execute)
  """
  Enroll eligible QP coupons for user.
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteEnrollCoupons](https://strato.twitter.biz/web/browse/graphql/quick-promote/quick-promoteEnrollCoupons)
  """
  quick_promote_enroll_coupons(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): QuickPromoteCouponEnrollment @strato_column(path : "graphql/quick-promote/quick-promoteEnrollCoupons") @strato_op(value : Execute)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rapidPrototypeField](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/rapidPrototypeField)
  """
  rapid_prototype_field_delete(developer_content_filter_id: NumericString!, field_name: String!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/rapidPrototypeField") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter Rapid Prototype Field for User
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rapidPrototypeFieldForUser](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/rapidPrototypeFieldForUser)
  """
  rapid_prototype_field_for_user_delete(developer_content_filter_id: NumericString!, field_name: String!, user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/rapidPrototypeFieldForUser") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter Rapid Prototype Field for User
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rapidPrototypeFieldForUser](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/rapidPrototypeFieldForUser)
  """
  rapid_prototype_field_for_user_put(developer_content_filter_id: NumericString!, field_name: String!, field_value: String!, user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/rapidPrototypeFieldForUser") @strato_op(value : Put)
  """
  [DevPlatform Content Controls] Mutate Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/rapidPrototypeField](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/rapidPrototypeField)
  """
  rapid_prototype_field_put(developer_content_filter_id: NumericString!, field_name: String!, field_value: String!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/rapidPrototypeField") @strato_op(value : Put)
  """
  The column that handles client facing tweet reaction Put and Delete operations.
  
  Generated from Strato column: [graphql/signals/reaction](https://strato.twitter.biz/web/browse/graphql/signals/reaction)
  """
  reaction_delete(
    "Holds engagement information required for creating Ad Callback event"
    engagement_request: EngagementRequestInput, 
    tweet_id: NumericString!
  ): DoneStatus @development @strato_column(path : "graphql/signals/reaction") @strato_op(value : Delete)
  """
  The column that handles client facing tweet reaction Put and Delete operations.
  
  Generated from Strato column: [graphql/signals/reaction](https://strato.twitter.biz/web/browse/graphql/signals/reaction)
  """
  reaction_put(
    "Holds engagement information required for creating Ad Callback event"
    engagement_request: EngagementRequestInput, 
    reaction_type: SignalsReactionTypeInput!, 
    tweet_id: NumericString!
  ): DoneStatus @development @strato_column(path : "graphql/signals/reaction") @strato_op(value : Put)
  """
  This endpoint records the response that a user had after receiving a nudge. It can take one or both of the optional input params. For more detailed documentation, see go/docbird/jiminy
  
  Generated from Strato column: [graphql/incentives/recordNudgeEvent](https://strato.twitter.biz/web/browse/graphql/incentives/recordNudgeEvent)
  """
  record_nudge_event(nudge_action_event: NudgeActionEventInput, nudge_result_event: NudgeResultEventInput): DoneStatus @strato_column(path : "graphql/incentives/recordNudgeEvent") @strato_op(value : Execute)
  """
  Remove a follower for an authenticated twitter user.
  
  Generated from Strato column: [graphql/consumer-privacy/removeFollower](https://strato.twitter.biz/web/browse/graphql/consumer-privacy/removeFollower)
  """
  remove_follower(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): UnfollowResult @strato_column(path : "graphql/consumer-privacy/removeFollower") @strato_op(value : Execute)
  """
  Removes the privacy preference from the super follow relationship between the view and the provided creator
  
  Generated from Strato column: [graphql/audiencerewards/removeSuperFollowerPrivacy](https://strato.twitter.biz/web/browse/graphql/audiencerewards/removeSuperFollowerPrivacy)
  """
  remove_super_follower_privacy(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): RemoveSuperFollowerPrivacyResult @strato_column(path : "graphql/audiencerewards/removeSuperFollowerPrivacy") @strato_op(value : Execute)
  """
  For testing a rogue one subscription feature flow from end to end for a mutation.
  
  Generated from Strato column: [graphql/rogueone/rogueoneSampleFeaturePut](https://strato.twitter.biz/web/browse/graphql/rogueone/rogueoneSampleFeaturePut)
  """
  rogueone_sample_feature_put(access_token: String!, resource: String!): DoneStatus @development @strato_column(path : "graphql/rogueone/rogueoneSampleFeaturePut") @strato_op(value : Put)
  """
  Subscribing / unsubscribing a user to a scheduled space
  
  Generated from Strato column: [graphql/frigate/scheduledSpaceSubscriber](https://strato.twitter.biz/web/browse/graphql/frigate/scheduledSpaceSubscriber)
  """
  scheduled_space_subscriber_delete(audio_space_id: String!): DoneStatus @development @strato_column(path : "graphql/frigate/scheduledSpaceSubscriber") @strato_op(value : Delete)
  """
  Subscribing / unsubscribing a user to a scheduled space
  
  Generated from Strato column: [graphql/frigate/scheduledSpaceSubscriber](https://strato.twitter.biz/web/browse/graphql/frigate/scheduledSpaceSubscriber)
  """
  scheduled_space_subscriber_put(audio_space_id: String!): DoneStatus @development @strato_column(path : "graphql/frigate/scheduledSpaceSubscriber") @strato_op(value : Put)
  "Generated from Strato column: [graphql/schedule/delete.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/delete)"
  scheduledtweet_delete(scheduled_tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/schedule/delete.ScheduledTweet") @strato_op(value : Delete)
  "Generated from Strato column: [graphql/schedule/insert.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/insert)"
  scheduledtweet_insert(execute_at: Int53!, post_retweet_request: PostRetweetRequestInput, post_tweet_request: PostTweetRequestInput): ScheduledTweet @deprecated(reason : "This mutation has no Visibility Filtering support. Use scheduledtweet_insert_v2 mutation instead") @strato_column(path : "graphql/schedule/insert.ScheduledTweet") @strato_op(value : Insert)
  "Generated from Strato column: [graphql/schedule/put.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/put)"
  scheduledtweet_put(execute_at: Int53!, post_retweet_request: PostRetweetRequestInput, post_tweet_request: PostTweetRequestInput, scheduled_tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/schedule/put.ScheduledTweet") @strato_op(value : Put)
  "Generated from Strato column: [graphql/schedule/insertV2.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/insertV2)"
  scheduledtweet_v2_insert(
    execute_at: Int53!, 
    post_retweet_request: PostRetweetRequestInput, 
    post_tweet_request: PostTweetRequestInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ScheduledTweet @strato_column(path : "graphql/schedule/insertV2.ScheduledTweet") @strato_op(value : Insert)
  """
  Submit application to sell content on twitter. Provide user choices from closed list and/or free form input as elements of corresponding arrays. Content category and content creation platform are required for superfollows track. Content creation platform is required for tip jar track.
  
  Generated from Strato column: [graphql/audiospace/sellerApplication](https://strato.twitter.biz/web/browse/graphql/audiospace/sellerApplication)
  """
  seller_application_put(content_category: [String!], content_creation_platform: [String!], ethnicity: [String!], gender: [String!], purpose: String!, track: SellerTrackInput!): DoneStatus @strato_column(path : "graphql/audiospace/sellerApplication") @strato_op(value : Put)
  """
  Send reaction to tipper associated with paid Strike tip
  
  Generated from Strato column: [graphql/tipjar/sendStrikeTipQuickReply](https://strato.twitter.biz/web/browse/graphql/tipjar/sendStrikeTipQuickReply)
  """
  send_strike_tip_quick_reply(
    emote: StrikeQuickReplyEmoteInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tip_id: NumericString!
  ): DoneStatus @strato_column(path : "graphql/tipjar/sendStrikeTipQuickReply") @strato_op(value : Execute)
  """
  Sets user creator benefits offered from the Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/setCreatorBenefits](https://strato.twitter.biz/web/browse/graphql/audiencerewards/setCreatorBenefits)
  """
  set_creator_benefits_put(benefits_data: [AudienceRewardsSetBenefitInfoInput!]!, creator_intro: String!): DoneStatus @strato_column(path : "graphql/audiencerewards/setCreatorBenefits") @strato_op(value : Put)
  """
  Sets creator price selection in the Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/setCreatorPriceMetadata](https://strato.twitter.biz/web/browse/graphql/audiencerewards/setCreatorPriceMetadata)
  """
  set_creator_price_metadata(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    selected_price: String!
  ): AudienceRewardsResponseCode @strato_column(path : "graphql/audiencerewards/setCreatorPriceMetadata") @strato_op(value : Execute)
  """
  Advertisers can save column grouping as 'column sets'. This column's purpose is to set a specific column set as a default, so that the column groupings are always selected on intital load.
  
  Generated from Strato column: [graphql/customer-experience-apps/setDefaultColumnSet](https://strato.twitter.biz/web/browse/graphql/customer-experience-apps/setDefaultColumnSet)
  """
  set_default_column_set_put(account_id: NumericString!, column_set_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/customer-experience-apps/setDefaultColumnSet") @strato_op(value : Put)
  """
  Advertisers can save filter grouping as 'filter sets'. This column's purpose is to set a specific filter set as a default, so that the filter groupings are always selected on intital load.
  
  Generated from Strato column: [graphql/customer-experience-apps/setDefaultFilterSet](https://strato.twitter.biz/web/browse/graphql/customer-experience-apps/setDefaultFilterSet)
  """
  set_default_filter_set_put(account_id: NumericString!, filter_set_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/customer-experience-apps/setDefaultFilterSet") @strato_op(value : Put)
  """
  Set a payment method as the default payment method
  
  Generated from Strato column: [graphql/payments/setPaymentMethodAsDefault](https://strato.twitter.biz/web/browse/graphql/payments/setPaymentMethodAsDefault)
  """
  set_payment_method_as_default(
    payment_method_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SetPaymentMethodDefaultResult @strato_column(path : "graphql/payments/setPaymentMethodAsDefault") @strato_op(value : Execute)
  """
  Executes a space device follow from the viewer to the provided target user
  
  Generated from Strato column: [graphql/notifications/spaceDeviceFollow](https://strato.twitter.biz/web/browse/graphql/notifications/spaceDeviceFollow)
  """
  space_device_follow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): SpaceDeviceFollowResult @strato_column(path : "graphql/notifications/spaceDeviceFollow") @strato_op(value : Execute)
  """
  Executes a space device unfollow from the viewer to the provided target user
  
  Generated from Strato column: [graphql/notifications/spaceDeviceUnfollow](https://strato.twitter.biz/web/browse/graphql/notifications/spaceDeviceUnfollow)
  """
  space_device_unfollow(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): SpaceDeviceUnfollowResult @strato_column(path : "graphql/notifications/spaceDeviceUnfollow") @strato_op(value : Execute)
  """
  [DevPlatform Content Controls] Mutate Static Timelines
  
  Generated from Strato column: [graphql/dataproducts/content_controls/static_timelines](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/static_timelines)
  """
  static_timelines_delete(static_timeline_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/static_timelines") @strato_op(value : Delete)
  """
  [DevPlatform Content Controls] Mutate Static Timelines
  
  Generated from Strato column: [graphql/dataproducts/content_controls/static_timelines](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/static_timelines)
  """
  static_timelines_insert(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    static_timeline_json: String!
  ): NumericString @development @strato_column(path : "graphql/dataproducts/content_controls/static_timelines") @strato_op(value : Insert)
  """
  [DevPlatform Content Controls] Mutate Static Timelines
  
  Generated from Strato column: [graphql/dataproducts/content_controls/static_timelines](https://strato.twitter.biz/web/browse/graphql/dataproducts/content_controls/static_timelines)
  """
  static_timelines_put(static_timeline_id: NumericString!, static_timeline_json: String!): DoneStatus @development @strato_column(path : "graphql/dataproducts/content_controls/static_timelines") @strato_op(value : Put)
  """
  Create stripe account and return stripe onboarding link
  
  Generated from Strato column: [graphql/audiospace/stripeAccountCreateOnboardingURL](https://strato.twitter.biz/web/browse/graphql/audiospace/stripeAccountCreateOnboardingURL)
  """
  stripe_account_create_onboarding_url(
    refresh_url: String, 
    return_url: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): String @strato_column(path : "graphql/audiospace/stripeAccountCreateOnboardingURL") @strato_op(value : Execute)
  """
  Subscribe a User to a Drop.
  
  Generated from Strato column: [graphql/commerce/drops/subscribeToDrop](https://strato.twitter.biz/web/browse/graphql/commerce/drops/subscribeToDrop)
  """
  subscribe_to_drop(
    drop_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @development @strato_column(path : "graphql/commerce/drops/subscribeToDrop") @strato_op(value : Execute)
  """
  Subscribe to a Revue newsletter using email associated with Twitter account
  
  Generated from Strato column: [graphql/longform/subscribeToRevueAccount](https://strato.twitter.biz/web/browse/graphql/longform/subscribeToRevueAccount)
  """
  subscribe_to_revue_account(
    "Attribution for the client/device source of the subscription (e.g. DesktopWeb)"
    client: RevueSubscriptionClientAttributionInput, 
    double_opt_in: Boolean, 
    "Sub-attribution for the source of the subscription (e.g. read-sample-issue)"
    element: String, 
    revue_account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "Attribution for the source of the subscription (e.g. profile-page-header)"
    via: String
  ): RevueSubscribeResult @strato_column(path : "graphql/longform/subscribeToRevueAccount") @strato_op(value : Execute)
  """
  Create a new Web Subscription Checkout Session for the given price id
  
  Generated from Strato column: [graphql/payments/create.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/create)
  """
  subscriptioncheckoutsession_create(
    cancel_url: String!, 
    price_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    success_url: String!
  ): WebSubscriptionCheckoutSession @strato_column(path : "graphql/payments/create.SubscriptionCheckoutSession") @strato_op(value : Execute)
  """
  Create a new Web Subscription Checkout Session for the given product id. This is version 2 for create checkout session.
  
  Generated from Strato column: [graphql/payments/create_v2.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/create_v2)
  """
  subscriptioncheckoutsession_create_v2(
    cancel_url: String!, 
    external_product_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    success_url: String!
  ): WebSubscriptionCheckoutSession @strato_column(path : "graphql/payments/create_v2.SubscriptionCheckoutSession") @strato_op(value : Execute)
  """
  Feature Settings query column
  
  Generated from Strato column: [graphql/subscription-product-features/undoTweetFeatureSettings.SubscriptionProductFeature](https://strato.twitter.biz/web/browse/SubscriptionProductFeature/graphql/subscription-product-features/undoTweetFeatureSettings)
  """
  subscriptionproductfeature_undo_tweet_feature_settings_put(feature_name: String!, undo_original_tweet_enabled: Boolean, undo_poll_tweet_enabled: Boolean, undo_quote_tweet_enabled: Boolean, undo_reply_tweet_enabled: Boolean, undo_thread_tweet_enabled: Boolean, undo_tweet_duration_secs: Int, view_tweet_after_sending_enabled: Boolean): DoneStatus @development @strato_column(path : "graphql/subscription-product-features/undoTweetFeatureSettings.SubscriptionProductFeature") @strato_op(value : Put)
  """
  Super Likes is Twitter's way of enabling virtual gifting on a tweet. The action can be taken by a logged in user on an eligible tweet.
  
  Generated from Strato column: [graphql/audiencerewards/superLike](https://strato.twitter.biz/web/browse/graphql/audiencerewards/superLike)
  """
  super_like(idempotency_key: String!, product_id: String!, tweet_id: NumericString!): AudienceRewardsResponseCode @deprecated(reason : "This mutation has no Visibility Filtering support. Use super_like_v2 mutation instead") @strato_column(path : "graphql/audiencerewards/superLike") @strato_op(value : Execute)
  """
  Super Likes is Twitter's way of enabling virtual gifting on a tweet. The action can be taken by a logged in user on an eligible tweet.
  
  Generated from Strato column: [graphql/audiencerewards/superLikeV2](https://strato.twitter.biz/web/browse/graphql/audiencerewards/superLikeV2)
  """
  super_like_v2(
    idempotency_key: String!, 
    product_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): AudienceRewardsResponseCode @development @strato_column(path : "graphql/audiencerewards/superLikeV2") @strato_op(value : Execute)
  """
  Handle feedback about timeline entities provided by users
  
  Generated from Strato column: [graphql/timelines/feedback.Timelines](https://strato.twitter.biz/web/browse/Timelines/graphql/timelines/feedback)
  """
  timelines_feedback(
    "An encoded payload included in the URT resopnse and intended to be completely opaque to the client."
    encoded_feedback_request: String!, 
    "flag sent by the client that will undo previously sent feedback, effectively deleting it."
    undo: Boolean!
  ): DoneStatus @strato_column(path : "graphql/timelines/feedback.Timelines") @strato_op(value : Execute)
  """
  Set notInterested field to false
  
  Generated from Strato column: [graphql/topic/deleteNotInterested.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/deleteNotInterested)
  """
  topic_delete_not_interested(topic_id: String!): Topic @deprecated(reason : "This mutation has no Visibility Filtering support. Use topic_delete_not_interested_v2 mutation instead") @strato_column(path : "graphql/topic/deleteNotInterested.Topic") @strato_op(value : Execute)
  """
  Set notInterested field to false
  
  Generated from Strato column: [graphql/topic/deleteNotInterestedV2.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/deleteNotInterestedV2)
  """
  topic_delete_not_interested_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    topic_id: String!
  ): Topic @strato_column(path : "graphql/topic/deleteNotInterestedV2.Topic") @strato_op(value : Execute)
  """
  Set following field to true
  
  Generated from Strato column: [graphql/topic/follow.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/follow)
  """
  topic_follow(topic_id: String!): Topic @deprecated(reason : "This mutation has no Visibility Filtering support. Use topic_follow_v2 mutation instead") @strato_column(path : "graphql/topic/follow.Topic") @strato_op(value : Execute)
  """
  Set following field to true
  
  Generated from Strato column: [graphql/topic/followV2.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/followV2)
  """
  topic_follow_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    topic_id: String!
  ): Topic @strato_column(path : "graphql/topic/followV2.Topic") @strato_op(value : Execute)
  """
  Set notInterested field to true
  
  Generated from Strato column: [graphql/topic/setNotInterested.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/setNotInterested)
  """
  topic_set_not_interested(topic_id: String!): Topic @deprecated(reason : "This mutation has no Visibility Filtering support. Use topic_set_not_interested_v2 mutation instead") @strato_column(path : "graphql/topic/setNotInterested.Topic") @strato_op(value : Execute)
  """
  Set notInterested field to true
  
  Generated from Strato column: [graphql/topic/setNotInterestedV2.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/setNotInterestedV2)
  """
  topic_set_not_interested_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    topic_id: String!
  ): Topic @strato_column(path : "graphql/topic/setNotInterestedV2.Topic") @strato_op(value : Execute)
  """
  Set following field to false
  
  Generated from Strato column: [graphql/topic/unfollow.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/unfollow)
  """
  topic_unfollow(topic_id: String!): Topic @deprecated(reason : "This mutation has no Visibility Filtering support. Use topic_unfollow_v2 mutation instead") @strato_column(path : "graphql/topic/unfollow.Topic") @strato_op(value : Execute)
  """
  Set following field to false
  
  Generated from Strato column: [graphql/topic/unfollowV2.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/unfollowV2)
  """
  topic_unfollow_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    topic_id: String!
  ): Topic @strato_column(path : "graphql/topic/unfollowV2.Topic") @strato_op(value : Execute)
  """
  Create a TrustedFriendsList
  
  Generated from Strato column: [graphql/trusted-friends/trustedFriendsListCreate](https://strato.twitter.biz/web/browse/graphql/trusted-friends/trustedFriendsListCreate)
  """
  trusted_friends_list_create(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TrustedFriendsListCreateResult @development @strato_column(path : "graphql/trusted-friends/trustedFriendsListCreate") @strato_op(value : Execute)
  """
  Add members to a TrustedFriendsList
  
  Generated from Strato column: [graphql/trusted-friends/trustedFriendsListMemberAdd](https://strato.twitter.biz/web/browse/graphql/trusted-friends/trustedFriendsListMemberAdd)
  """
  trusted_friends_list_member_add(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    trusted_friends_list_id: NumericString!, 
    user_id: NumericString!
  ): TrustedFriendsListMemberAddResult @development @strato_column(path : "graphql/trusted-friends/trustedFriendsListMemberAdd") @strato_op(value : Execute)
  """
  Remove members from a TrustedFriendsList
  
  Generated from Strato column: [graphql/trusted-friends/trustedFriendsListMemberRemove](https://strato.twitter.biz/web/browse/graphql/trusted-friends/trustedFriendsListMemberRemove)
  """
  trusted_friends_list_member_remove(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    trusted_friends_list_id: NumericString!, 
    user_id: NumericString!
  ): TrustedFriendsListMemberRemoveResult @development @strato_column(path : "graphql/trusted-friends/trustedFriendsListMemberRemove") @strato_op(value : Execute)
  """
  Removes a Tweet from the Bookmarks of the caller.
  
  Generated from Strato column: [graphql/timelines/tweetBookmarkDelete](https://strato.twitter.biz/web/browse/graphql/timelines/tweetBookmarkDelete)
  """
  tweet_bookmark_delete(tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/timelines/tweetBookmarkDelete") @strato_op(value : Execute)
  """
  Adds a Tweet to the Bookmarks of the caller. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/tweetBookmarkPost](https://strato.twitter.biz/web/browse/graphql/dataproducts/tweetBookmarkPost)
  """
  tweet_bookmark_post(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DoneStatus @development @strato_column(path : "graphql/dataproducts/tweetBookmarkPost") @strato_op(value : Execute)
  """
  Adds a Tweet to the Bookmarks of the caller.
  
  Generated from Strato column: [graphql/timelines/tweetBookmarkPut](https://strato.twitter.biz/web/browse/graphql/timelines/tweetBookmarkPut)
  """
  tweet_bookmark_put(tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/timelines/tweetBookmarkPut") @strato_op(value : Execute)
  """
  A column for mutating the Conversation Control of a Tweet (http://go/dont-at-me).
  
  Generated from Strato column: [graphql/convo-safety/conversationControl.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/convo-safety/conversationControl)
  """
  tweet_conversation_control_delete(tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/convo-safety/conversationControl.Tweet") @strato_op(value : Delete)
  """
  A column for mutating the Conversation Control of a Tweet (http://go/dont-at-me).
  
  Generated from Strato column: [graphql/convo-safety/conversationControl.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/convo-safety/conversationControl)
  """
  tweet_conversation_control_put(mode: ConversationControlModeInput!, tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/convo-safety/conversationControl.Tweet") @strato_op(value : Put)
  """
  Product features applied on top of existing tweet in prod
  
  Generated from Strato column: [graphql/creative-entity-enrichments/enrichments.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/creative-entity-enrichments/enrichments)
  """
  tweet_enrichments_delete(tweet_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/creative-entity-enrichments/enrichments.Tweet") @strato_op(value : Delete)
  """
  Product features applied on top of existing tweet in staging
  
  Generated from Strato column: [graphql/creative-entity-enrichments/enrichmentsStaging.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/creative-entity-enrichments/enrichmentsStaging)
  """
  tweet_enrichments_staging_delete(tweet_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/creative-entity-enrichments/enrichmentsStaging.Tweet") @strato_op(value : Delete)
  """
  Twitter-owned-client endpoint for hiding tweets. Hides a Tweet by calling the tcs strato column for moderate. See go/amr and go/amr-backend for more info.
  
  Generated from Strato column: [graphql/tweetconvosvc/moderate.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/tweetconvosvc/moderate)
  """
  tweet_moderate_put(tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/tweetconvosvc/moderate.Tweet") @strato_op(value : Put)
  """
  Reactive Prompt After Tweet Like
  
  Generated from Strato column: [graphql/timelines/reactivePromptLike.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/timelines/reactivePromptLike)
  """
  tweet_reactive_prompt_like(
    display_location: ReactivePromptDisplayLocationInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sort_index: NumericString, 
    tweet_id: NumericString!
  ): TimelineTimeline @development @strato_column(path : "graphql/timelines/reactivePromptLike.Tweet") @strato_op(value : Execute)
  """
  Reactive Topcial Tweet Injection After Yes on Relevance Prompt
  
  Generated from Strato column: [graphql/timelines/reactiveTweetIsRelevant.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/timelines/reactiveTweetIsRelevant)
  """
  tweet_reactive_tweet_is_relevant(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sort_index: NumericString, 
    tweet_id: NumericString!
  ): TimelineTimeline @development @strato_column(path : "graphql/timelines/reactiveTweetIsRelevant.Tweet") @strato_op(value : Execute)
  """
  Super likes are a way of virtual gifting on a tweet. Anyone can view a tweet's super like eligibility and only a tweet's author is able to set it.
  
  Generated from Strato column: [graphql/audiencerewards/superLikesEligible.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superLikesEligible)
  """
  tweet_super_likes_eligible_put(super_likes_eligible: Boolean!, tweet_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/audiencerewards/superLikesEligible.Tweet") @strato_op(value : Put)
  """
  Unmoderates a Tweet by calling the tcs strato column for unmoderate. See go/amr and go/amr-backend for more info.
  
  Generated from Strato column: [graphql/tweetconvosvc/unmoderate.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/tweetconvosvc/unmoderate)
  """
  tweet_unmoderate_put(tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/tweetconvosvc/unmoderate.Tweet") @strato_op(value : Put)
  """
  Performs the reversal of a Super Like action
  
  Generated from Strato column: [graphql/audiencerewards/unSuperLike](https://strato.twitter.biz/web/browse/graphql/audiencerewards/unSuperLike)
  """
  un_super_like(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): AudienceRewardsUnSuperLikeResponse @development @strato_column(path : "graphql/audiencerewards/unSuperLike") @strato_op(value : Execute)
  """
  *You must get approval from DES Insights to use this column* An unblock account action on behalf of a user. 
  
  Generated from Strato column: [graphql/dataproducts/unblockByRestId](https://strato.twitter.biz/web/browse/graphql/dataproducts/unblockByRestId)
  """
  unblock_by_rest_id(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): UnblockResult @strato_column(path : "graphql/dataproducts/unblockByRestId") @strato_op(value : Execute)
  """
  Unfavorite Tweet Operation
  
  Generated from Strato column: [graphql/timelines/unfavoriteTweet](https://strato.twitter.biz/web/browse/graphql/timelines/unfavoriteTweet)
  """
  unfavorite_tweet(
    "Holds engagement information required for creating Ad Callback event"
    engagement_request: EngagementRequestInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DoneStatus @strato_column(path : "graphql/timelines/unfavoriteTweet") @strato_op(value : Execute)
  """
  *You must get approval from DES Insights to use this column* An unfollow account action on behalf of a user. 
  
  Generated from Strato column: [graphql/dataproducts/unfollow_by_rest_id_v2](https://strato.twitter.biz/web/browse/graphql/dataproducts/unfollow_by_rest_id_v2)
  """
  unfollow_by_rest_id_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): UnfollowResult @strato_column(path : "graphql/dataproducts/unfollow_by_rest_id_v2") @strato_op(value : Execute)
  """
  Unfollow the retweets of the target user. By default, retweets are followed when following a user, calling this will stops the retweets from being followed.
  
  Generated from Strato column: [graphql/socialgraph/unfollowRetweets](https://strato.twitter.biz/web/browse/graphql/socialgraph/unfollowRetweets)
  """
  unfollow_retweets(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): UnfollowRetweetsResult @development @strato_column(path : "graphql/socialgraph/unfollowRetweets") @strato_op(value : Execute)
  """
  Unmention a user from the conversation.
  
  Generated from Strato column: [graphql/consumer-privacy/unmentionUser](https://strato.twitter.biz/web/browse/graphql/consumer-privacy/unmentionUser)
  """
  unmention_user(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DoneStatus @strato_column(path : "graphql/consumer-privacy/unmentionUser") @strato_op(value : Execute)
  """
  A single unmute account action on behalf of a user.
  
  Generated from Strato column: [graphql/dataproducts/unmuteUserByRestId](https://strato.twitter.biz/web/browse/graphql/dataproducts/unmuteUserByRestId)
  """
  unmute_user_by_rest_id(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    target_user_id: NumericString!
  ): UnmuteResult @strato_column(path : "graphql/dataproducts/unmuteUserByRestId") @strato_op(value : Execute)
  """
  Removes any retweets by the calling user of the given source tweet.
  
  Generated from Strato column: [graphql/tweetypie/unretweet](https://strato.twitter.biz/web/browse/graphql/tweetypie/unretweet)
  """
  unretweet(
    "Correlates requests originating from REST endpoints and GraphQL endpoints."
    comparison_id: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "The source tweet to be unretweeted."
    source_tweet_id: NumericString!
  ): UnretweetResponse @strato_column(path : "graphql/tweetypie/unretweet") @strato_op(value : Execute)
  """
  Un-Subscribe a User to a Drop.
  
  Generated from Strato column: [graphql/commerce/drops/unsubscribeFromDrop](https://strato.twitter.biz/web/browse/graphql/commerce/drops/unsubscribeFromDrop)
  """
  unsubscribe_from_drop(
    drop_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DoneStatus @development @strato_column(path : "graphql/commerce/drops/unsubscribeFromDrop") @strato_op(value : Execute)
  """
  Updates a Catalog
  
  Generated from Strato column: [graphql/commerce/catalog/operations/updateCommerceCatalog](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/updateCommerceCatalog)
  """
  update_commerce_catalog(
    catalog_id: NumericString!, 
    catalog_name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceCatalogWriteResult @strato_column(path : "graphql/commerce/catalog/operations/updateCommerceCatalog") @strato_op(value : Execute)
  """
  Updates an existing Product Set
  
  Generated from Strato column: [graphql/commerce/catalog/operations/updateManuallySelectedProductSet](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/updateManuallySelectedProductSet)
  """
  update_manually_selected_product_set(
    product_set_description: String, 
    product_set_id: NumericString!, 
    product_set_items: [ProductSetItemInput!]! = [], 
    product_set_name: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductSetResult @strato_column(path : "graphql/commerce/catalog/operations/updateManuallySelectedProductSet") @strato_op(value : Execute)
  """
  Update profile image from NFT asset image owned by connected wallet
  
  Generated from Strato column: [graphql/tweb3/updateNftProfileImage](https://strato.twitter.biz/web/browse/graphql/tweb3/updateNftProfileImage)
  """
  update_nft_profile_image(
    erc1155_address: String, 
    erc721_address: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    token_id: String!
  ): AvatarUpdateResult @strato_column(path : "graphql/tweb3/updateNftProfileImage") @strato_op(value : Execute)
  """
  Update ShopModule using the provided ShopModuleConfig
  
  Generated from Strato column: [graphql/commerce/shopmodule/updateShopModule](https://strato.twitter.biz/web/browse/graphql/commerce/shopmodule/updateShopModule)
  """
  update_shop_module(
    commerce_config_request: CommerceConfigRequestInput!, 
    display_type: ShopModuleDisplayTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    shop_module_id: NumericString!
  ): NumericString @strato_column(path : "graphql/commerce/shopmodule/updateShopModule") @strato_op(value : Execute)
  """
  This column allows the author of the Tweet to update voice/storage/info.Tweet.strato
  
  Generated from Strato column: [graphql/voice/updateTweetVoiceInfo](https://strato.twitter.biz/web/browse/graphql/voice/updateTweetVoiceInfo)
  """
  update_tweet_voice_info(audio_space_id: String, audiowave_values: [Short!], clip_index: Short, number_of_clips: Short, total_duration_millis: Int, tweet_id: NumericString!): DoneStatus @strato_column(path : "graphql/voice/updateTweetVoiceInfo") @strato_op(value : Execute)
  """
  Update the core data for a Twitter Article.
  
  Generated from Strato column: [graphql/longform/updateTwitterArticle](https://strato.twitter.biz/web/browse/graphql/longform/updateTwitterArticle)
  """
  update_twitter_article(
    data: TwitterArticleDataInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    twitter_article_id: NumericString!
  ): TwitterArticle @development @strato_column(path : "graphql/longform/updateTwitterArticle") @strato_op(value : Execute)
  """
  Update the cover image for a Twitter Article.
  
  Generated from Strato column: [graphql/longform/updateTwitterArticleCoverImage](https://strato.twitter.biz/web/browse/graphql/longform/updateTwitterArticleCoverImage)
  """
  update_twitter_article_cover_image(
    media_id: NumericString, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    twitter_article_id: NumericString!
  ): TwitterArticle @development @strato_column(path : "graphql/longform/updateTwitterArticleCoverImage") @strato_op(value : Execute)
  """
  Update the media data for a Twitter Article.
  
  Generated from Strato column: [graphql/longform/updateTwitterArticleMedia](https://strato.twitter.biz/web/browse/graphql/longform/updateTwitterArticleMedia)
  """
  update_twitter_article_media(
    media_keys: [TwitterArticleMediaKeyInput!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    twitter_article_id: NumericString!
  ): TwitterArticle @development @strato_column(path : "graphql/longform/updateTwitterArticleMedia") @strato_op(value : Execute)
  """
  Update the title for a Twitter Article.
  
  Generated from Strato column: [graphql/longform/updateTwitterArticleTitle](https://strato.twitter.biz/web/browse/graphql/longform/updateTwitterArticleTitle)
  """
  update_twitter_article_title(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    title: String!, 
    twitter_article_id: NumericString!
  ): TwitterArticle @development @strato_column(path : "graphql/longform/updateTwitterArticleTitle") @strato_op(value : Execute)
  """
  Update the visibility for a Twitter Article.
  
  Generated from Strato column: [graphql/longform/updateTwitterArticleVisibility](https://strato.twitter.biz/web/browse/graphql/longform/updateTwitterArticleVisibility)
  """
  update_twitter_article_visibility(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    twitter_article_id: NumericString!, 
    visibility: TwitterArticleVisibilityInput!
  ): TwitterArticle @development @strato_column(path : "graphql/longform/updateTwitterArticleVisibility") @strato_op(value : Execute)
  """
  For uploading product data. Validates and then creates or updates product data as needed
  
  Generated from Strato column: [graphql/commerce/catalog/operations/uploadProducts](https://strato.twitter.biz/web/browse/graphql/commerce/catalog/operations/uploadProducts)
  """
  upload_products(
    catalog_id: NumericString!, 
    product_data: [UploadProductDataInput!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    twitter_user_id: NumericString
  ): UploadProductsResponse @strato_column(path : "graphql/commerce/catalog/operations/uploadProducts") @strato_op(value : Execute)
  """
  A business entity
  
  Generated from Strato column: [graphql/bizprofiles/business.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/business)
  """
  user_business_delete(user_id: NumericString!): DoneStatus @strato_column(path : "graphql/bizprofiles/business.User") @strato_op(value : Delete)
  """
  Stores metadata describing how a user has configured their canvas profile.
  
  Generated from Strato column: [graphql/canvas/canvasCanvasConfig.User](https://strato.twitter.biz/web/browse/User/graphql/canvas/canvasCanvasConfig)
  """
  user_canvas_canvas_config_delete(user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/canvas/canvasCanvasConfig.User") @strato_op(value : Delete)
  """
  Stores metadata describing how a user has configured their canvas profile.
  
  Generated from Strato column: [graphql/canvas/canvasCanvasConfig.User](https://strato.twitter.biz/web/browse/User/graphql/canvas/canvasCanvasConfig)
  """
  user_canvas_canvas_config_put(metadata: String!, user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/canvas/canvasCanvasConfig.User") @strato_op(value : Put)
  """
  Changes the type of a professional
  
  Generated from Strato column: [graphql/bizprofiles/changeProfessionalAccountType.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/changeProfessionalAccountType)
  """
  user_change_professional_account_type(
    professional_type: ProfessionalTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): User @deprecated(reason : "Use user_change_professional_account_type_v2") @strato_column(path : "graphql/bizprofiles/changeProfessionalAccountType.User") @strato_op(value : Execute)
  """
  Changes the type of a professional
  
  Generated from Strato column: [graphql/bizprofiles/changeProfessionalAccountTypeV2.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/changeProfessionalAccountTypeV2)
  """
  user_change_professional_account_type_v2(
    professional_type: ProfessionalTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): UserProfessionalTypeUpdateResponse @development @strato_column(path : "graphql/bizprofiles/changeProfessionalAccountTypeV2.User") @strato_op(value : Execute)
  """
  Invites a user to join a community.
  
  Generated from Strato column: [graphql/communities/userCommunityInvite](https://strato.twitter.biz/web/browse/graphql/communities/userCommunityInvite)
  """
  user_community_invite(
    community_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): UserCommunityInviteMutationResult @strato_column(path : "graphql/communities/userCommunityInvite") @strato_op(value : Execute)
  """
  Creates an about module for a user
  
  Generated from Strato column: [graphql/bizprofiles/createAboutModuleFromVenue.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/createAboutModuleFromVenue)
  """
  user_create_about_module_from_venue(
    config: AboutModuleConfigInputSimplifiedInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    venue_data: BusinessVenueInput!, 
    visible_on_creation: Boolean
  ): UserOrValidationErrorResponse @strato_column(path : "graphql/bizprofiles/createAboutModuleFromVenue.User") @strato_op(value : Execute)
  """
  The user's invitation preferences - who is allowed to send invitation requests.
  
  Generated from Strato column: [graphql/account-delegation/delegate/delegationInvitationPreferences.User](https://strato.twitter.biz/web/browse/User/graphql/account-delegation/delegate/delegationInvitationPreferences)
  """
  user_delegation_invitation_preferences_put(allow_from: DelegationInvitationPreferencesInput!, user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/account-delegation/delegate/delegationInvitationPreferences.User") @strato_op(value : Put)
  """
  Deletes an about module for a user
  
  Generated from Strato column: [graphql/bizprofiles/deleteAboutModuleAndVenue.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/deleteAboutModuleAndVenue)
  """
  user_delete_about_module_and_venue(
    module_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UserOrValidationErrorResponse @strato_column(path : "graphql/bizprofiles/deleteAboutModuleAndVenue.User") @strato_op(value : Execute)
  """
  Dismisses all Rito-suggested actions between the perspectival user and the userIdToAction
  
  Generated from Strato column: [graphql/interventions/dismissRitoSuggestedAction.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/dismissRitoSuggestedAction)
  """
  user_dismiss_rito_suggested_action(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id_to_action: NumericString!
  ): DoneStatus @strato_column(path : "graphql/interventions/dismissRitoSuggestedAction.User") @strato_op(value : Execute)
  """
  A column for reading and writing a DM user's nsfw setting
  
  Generated from Strato column: [graphql/directmessages/dmNsfwMediaFilter.User](https://strato.twitter.biz/web/browse/User/graphql/directmessages/dmNsfwMediaFilter)
  """
  user_dm_nsfw_media_filter_put(nsfw_media_filter: Boolean!, user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/directmessages/dmNsfwMediaFilter.User") @strato_op(value : Put)
  """
  Uploads an in-app-purchase receipt for server verification and product redemption. Returns a list of transactions from the receipt for which the product was redeemed.
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseRedeem.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/inAppPurchaseRedeem)
  """
  user_in_app_purchase_redeem(receipt: PaymentReceiptInput!): InAppPurchaseRedemption @deprecated(reason : "This mutation has no Visibility Filtering support. Use user_in_app_purchase_redeem_v2 mutation instead") @strato_column(path : "graphql/audiencerewards/inAppPurchaseRedeem.User") @strato_op(value : Execute)
  """
  Uploads an in-app-purchase receipt for server verification and product redemption.Returns a list of transactions from the receipt for which the product was redeemed.Obscures any Balance data as Seeds.
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseRedeemExperimental.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/inAppPurchaseRedeemExperimental)
  """
  user_in_app_purchase_redeem_experimental(
    receipt: PaymentReceiptInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): InAppPurchaseRedemption @deprecated(reason : "This mutation has no Visibility Filtering support. Use in_app_purchase_redeem_experimental_v2 mutation instead") @strato_column(path : "graphql/audiencerewards/inAppPurchaseRedeemExperimental.User") @strato_op(value : Execute)
  """
  Uploads an in-app-purchase receipt for server verification and product redemption.Returns a list of transactions from the receipt for which the product was redeemed.Obscures any Balance data as Seeds.
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseRedeemExperimentalV2.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/inAppPurchaseRedeemExperimentalV2)
  """
  user_in_app_purchase_redeem_experimental_v2(
    receipt: PaymentReceiptInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): InAppPurchaseRedemption @development @strato_column(path : "graphql/audiencerewards/inAppPurchaseRedeemExperimentalV2.User") @strato_op(value : Execute)
  """
  Uploads an in-app-purchase receipt for server verification and product redemption. Returns a list of transactions from the receipt for which the product was redeemed.
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseRedeemV2.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/inAppPurchaseRedeemV2)
  """
  user_in_app_purchase_redeem_v2(
    receipt: PaymentReceiptInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): InAppPurchaseRedemption @strato_column(path : "graphql/audiencerewards/inAppPurchaseRedeemV2.User") @strato_op(value : Execute)
  """
  This query gets email notification settings for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsEmailNotifications_put.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsEmailNotifications_put)
  """
  user_notifications_email_notifications_put(settings: EmailNotificationSettingsInput!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsEmailNotifications_put.User") @strato_op(value : Put)
  """
  This query manages 'sendAccountUpdatesEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendAccountUpdatesEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendAccountUpdatesEmail)
  """
  user_notifications_send_account_updates_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendAccountUpdatesEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendActivationEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendActivationEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendActivationEmail)
  """
  user_notifications_send_activation_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendActivationEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendAddressBookNotificationEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendAddressBookNotificationEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendAddressBookNotificationEmail)
  """
  user_notifications_send_address_book_notification_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendAddressBookNotificationEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendEmailNewsletter' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendEmailNewsletter.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendEmailNewsletter)
  """
  user_notifications_send_email_newsletter_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendEmailNewsletter.User") @strato_op(value : Put)
  """
  This query manages 'sendEmailVitWeekly' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendEmailVitWeekly.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendEmailVitWeekly)
  """
  user_notifications_send_email_vit_weekly_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendEmailVitWeekly.User") @strato_op(value : Put)
  """
  This query manages 'sendFollowRecsEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendFollowRecsEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendFollowRecsEmail)
  """
  user_notifications_send_follow_recs_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendFollowRecsEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendLoginNotificationEmail' for a given user.
  
  Generated from Strato column: [graphql/notifications/notificationsSendLoginNotificationEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendLoginNotificationEmail)
  """
  user_notifications_send_login_notification_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendLoginNotificationEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendNetworkActivityEmail' for a given user.
  
  Generated from Strato column: [graphql/notifications/notificationsSendNetworkActivityEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendNetworkActivityEmail)
  """
  user_notifications_send_network_activity_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendNetworkActivityEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendFollowRecsEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendNetworkDigest.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendNetworkDigest)
  """
  user_notifications_send_network_digest_put(schedule: DigestScheduleInput!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendNetworkDigest.User") @strato_op(value : Put)
  """
  This query manages 'sendNewDirectTextEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendNewDirectTextEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendNewDirectTextEmail)
  """
  user_notifications_send_new_direct_text_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendNewDirectTextEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendPartnerEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendPartnerEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendPartnerEmail)
  """
  user_notifications_send_partner_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendPartnerEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendPerformanceDigest' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendPerformanceDigest.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendPerformanceDigest)
  """
  user_notifications_send_performance_digest_put(schedule: DigestScheduleInput!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendPerformanceDigest.User") @strato_op(value : Put)
  """
  This query manages 'sendResurrectionEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendResurrectionEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendResurrectionEmail)
  """
  user_notifications_send_resurrection_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendResurrectionEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendSharedTweetEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendSharedTweetEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSharedTweetEmail)
  """
  user_notifications_send_shared_tweet_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendSharedTweetEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendSimilarPeopleEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendSimilarPeopleEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSimilarPeopleEmail)
  """
  user_notifications_send_similar_people_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendSimilarPeopleEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendSmbSalesMarketingEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode)
  
  Generated from Strato column: [graphql/notifications/notificationsSendSmbSalesMarketingEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSmbSalesMarketingEmail)
  """
  user_notifications_send_smb_sales_marketing_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendSmbSalesMarketingEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendSurveyEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendSurveyEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSurveyEmail)
  """
  user_notifications_send_survey_email_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendSurveyEmail.User") @strato_op(value : Put)
  """
  This query manages 'sendTwitterEmails' for a given user, which controls all email sending.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendTwitterEmails.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendTwitterEmails)
  """
  user_notifications_send_twitter_emails_put(enabled: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/notifications/notificationsSendTwitterEmails.User") @strato_op(value : Put)
  """
  QueryColumn for Pronouns on a User
  
  Generated from Strato column: [graphql/profile-foundations/pronouns.User](https://strato.twitter.biz/web/browse/User/graphql/profile-foundations/pronouns)
  """
  user_pronouns_delete(user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/profile-foundations/pronouns.User") @strato_op(value : Delete)
  """
  QueryColumn for Pronouns on a User
  
  Generated from Strato column: [graphql/profile-foundations/pronouns.User](https://strato.twitter.biz/web/browse/User/graphql/profile-foundations/pronouns)
  """
  user_pronouns_put(pronouns_text: String!, user_id: NumericString!): DoneStatus @development @strato_column(path : "graphql/profile-foundations/pronouns.User") @strato_op(value : Put)
  """
  Reactive Prompt After User Follow
  
  Generated from Strato column: [graphql/timelines/reactivePromptFollow.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/reactivePromptFollow)
  """
  user_reactive_prompt_follow(
    display_location: ReactivePromptDisplayLocationInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sort_index: NumericString, 
    user_id: NumericString!
  ): TimelineTimeline @development @strato_column(path : "graphql/timelines/reactivePromptFollow.User") @strato_op(value : Execute)
  """
  Replace Entry After Dismiss in WTF Module
  
  Generated from Strato column: [graphql/timelines/reactiveWTFDismiss.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/reactiveWTFDismiss)
  """
  user_reactive_wtf_dismiss(
    entry_id: String!, 
    excluded_user_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sort_index: NumericString, 
    target_user_id: NumericString!
  ): TimelineTimeline @development @strato_column(path : "graphql/timelines/reactiveWTFDismiss.User") @strato_op(value : Execute)
  """
  Replace Entry After Follow in WTF Module
  
  Generated from Strato column: [graphql/timelines/reactiveWTFFollow.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/reactiveWTFFollow)
  """
  user_reactive_wtf_follow(
    entry_id: String!, 
    excluded_user_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sort_index: NumericString, 
    target_user_id: NumericString!
  ): TimelineTimeline @development @strato_column(path : "graphql/timelines/reactiveWTFFollow.User") @strato_op(value : Execute)
  """
  Returns the current safety mode settings for a given user.
  
  Generated from Strato column: [graphql/interventions/safetyModeSettings.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/safetyModeSettings)
  """
  user_safety_mode_settings_put(expiration_timestamp_ms: NumericString, is_safety_mode_enabled: Boolean!, safety_mode_duration: SafetyModeDurationInput, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/interventions/safetyModeSettings.User") @strato_op(value : Put)
  """
  A column for reading and writing a spaces user's listener data sharing setting
  
  Generated from Strato column: [graphql/audiospace/sharingListeningDataWithFollowers.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/sharingListeningDataWithFollowers)
  """
  user_sharing_listening_data_with_followers_put(sharing_listening_data_with_followers: Boolean!, user_id: NumericString!): DoneStatus @strato_column(path : "graphql/audiospace/sharingListeningDataWithFollowers.User") @strato_op(value : Put)
  """
  Example column for use in Building Product Features classes. Not for production use.
  
  Generated from Strato column: [graphql/stack/stackMood.User](https://strato.twitter.biz/web/browse/User/graphql/stack/stackMood)
  """
  user_stack_mood_delete(user_id: NumericString!): DoneStatus @example @strato_column(path : "graphql/stack/stackMood.User") @strato_op(value : Delete)
  """
  Example column for use in Building Product Features classes. Not for production use.
  
  Generated from Strato column: [graphql/stack/stackMood.User](https://strato.twitter.biz/web/browse/User/graphql/stack/stackMood)
  """
  user_stack_mood_put(mood: String!, user_id: NumericString!): DoneStatus @example @strato_column(path : "graphql/stack/stackMood.User") @strato_op(value : Put)
  """
  Changes the type of a professional
  
  Generated from Strato column: [graphql/bizprofiles/switchToNonProfessional.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/switchToNonProfessional)
  """
  user_switch_to_non_professional(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): User @deprecated(reason : "Use user_switch_to_non_professional_v2") @strato_column(path : "graphql/bizprofiles/switchToNonProfessional.User") @strato_op(value : Execute)
  """
  Changes the type of a professional
  
  Generated from Strato column: [graphql/bizprofiles/switchToNonProfessionalV2.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/switchToNonProfessionalV2)
  """
  user_switch_to_non_professional_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): SwitchToNonProfessionalResponse @development @strato_column(path : "graphql/bizprofiles/switchToNonProfessionalV2.User") @strato_op(value : Execute)
  """
  Updates TipJar settings for a given user
  
  Generated from Strato column: [graphql/tipjar/tipjarUpdateSettings.User](https://strato.twitter.biz/web/browse/User/graphql/tipjar/tipjarUpdateSettings)
  """
  user_tipjar_update_settings_put(bandcamp_handle: String, bitcoin_handle: String, cash_app_handle: String, chipper_handle: String, ethereum_handle: String, flutterwave_handle: String, gofundme_handle: String, is_enabled: Boolean, kakao_handle: String, paga_handle: String, patreon_handle: String, pay_pal_handle: String, paytm_handle: String, picpay_handle: String, razorpay_handle: String, strike_handle: String, user_id: NumericString!, venmo_handle: String, wealthsimple_handle: String): DoneStatus @strato_column(path : "graphql/tipjar/tipjarUpdateSettings.User") @strato_op(value : Put)
  """
  Updates an about module for a user
  
  Generated from Strato column: [graphql/bizprofiles/updateAboutModuleFromVenue.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/updateAboutModuleFromVenue)
  """
  user_update_about_module_from_venue(
    config: AboutModuleConfigInputSimplifiedInput!, 
    module_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    venue_data: BusinessVenueInput!
  ): UserOrValidationErrorResponse @strato_column(path : "graphql/bizprofiles/updateAboutModuleFromVenue.User") @strato_op(value : Execute)
  """
  Updates a given module visibility for a user
  
  Generated from Strato column: [graphql/bizprofiles/updateModuleVisibility.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/updateModuleVisibility)
  """
  user_update_module_visibility(
    enabled_for_display: Boolean!, 
    module_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UserModuleVisibilityUpdateResponse @strato_column(path : "graphql/bizprofiles/updateModuleVisibility.User") @strato_op(value : Execute)
  """
  Updates categories display for a professional
  
  Generated from Strato column: [graphql/bizprofiles/updateProfessionalCategoryDisplay.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/updateProfessionalCategoryDisplay)
  """
  user_update_professional_category_display(
    display_category: Boolean!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): UserProfessionalCategoriesDisplayUpdateResponse @strato_column(path : "graphql/bizprofiles/updateProfessionalCategoryDisplay.User") @strato_op(value : Execute)
  """
  Set enabledForDisplay value in User Business Module
  
  Generated from Strato column: [graphql/bizprofiles/updateEnabledForDisplay.UserBusinessModule](https://strato.twitter.biz/web/browse/UserBusinessModule/graphql/bizprofiles/updateEnabledForDisplay)
  """
  userbusinessmodule_update_enabled_for_display(
    enabled_for_display: Boolean!, 
    module_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    user_id: NumericString!
  ): DoneStatus @strato_column(path : "graphql/bizprofiles/updateEnabledForDisplay.UserBusinessModule") @strato_op(value : Execute)
  """
  Tweb3.VerifyWallet is a verification endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/verifyWallet](https://strato.twitter.biz/web/browse/graphql/tweb3/verifyWallet)
  """
  verify_wallet(
    address: String!, 
    network: NetworkInput!, 
    nickname: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    signature: String!
  ): Web3WalletResult @strato_column(path : "graphql/tweb3/verifyWallet") @strato_op(value : Execute)
  """
  disconnect wallet by address endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/web3Wallet](https://strato.twitter.biz/web/browse/graphql/tweb3/web3Wallet)
  """
  web3_wallet_delete(address: String!): DoneStatus @strato_column(path : "graphql/tweb3/web3Wallet") @strato_op(value : Delete)
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteFailedResult`](http://go/sg.thrift/MuteFailedResult)"
type MuteFailedResult @thrift_type(name : "MuteFailedResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  mute_failed_reason: MuteFailedReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteInvalidRequestResult`](http://go/sg.thrift/MuteInvalidRequestResult)"
type MuteInvalidRequestResult @thrift_type(name : "MuteInvalidRequestResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  mute_invalid_request_reason: MuteInvalidRequestReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteSuccessResult`](http://go/sg.thrift/MuteSuccessResult)"
type MuteSuccessResult @thrift_type(name : "MuteSuccessResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  mute_success_reason: MuteSuccessReason!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.NFT`](http://go/sg.thrift/NFT)"
type NFT @thrift_type(name : "NFT", package : "com.twitter.tweb3.graphql.model") {
  metadata: NFTMetadata!
  smart_contract: SmartContract!
  token_id: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.NFTCollection`](http://go/sg.thrift/NFTCollection)"
type NFTCollection @thrift_type(name : "NFTCollection", package : "com.twitter.tweb3.graphql.model") {
  metadata: NFTCollectionMetadata!
  name: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.NFTCollectionWithNFTs`](http://go/sg.thrift/NFTCollectionWithNFTs)"
type NFTCollectionWithNFTs @thrift_type(name : "NFTCollectionWithNFTs", package : "com.twitter.tweb3.graphql.model") {
  collection: NFTCollection!
  nfts: [NFT!]!
}

"Generated from type: [`com.twitter.tweb3.graphql.result.NFTCollectionsSlice`](http://go/sg.thrift/NFTCollectionsSlice)"
type NFTCollectionsSlice @thrift_type(name : "NFTCollectionsSlice", package : "com.twitter.tweb3.graphql.result") {
  collections_slice_info: SliceInfo!
  items: [NFTCollectionWithNFTs!]!
}

"Generated from type: [`com.twitter.tweb3.graphql.result.NFTContractAddressError`](http://go/sg.thrift/NFTContractAddressError)"
type NFTContractAddressError @thrift_type(name : "NFTContractAddressError", package : "com.twitter.tweb3.graphql.result") {
  msg: String
}

"Generated from type: [`com.twitter.tweb3.graphql.result.NFTOwnershipError`](http://go/sg.thrift/NFTOwnershipError)"
type NFTOwnershipError @thrift_type(name : "NFTOwnershipError", package : "com.twitter.tweb3.graphql.result") {
  msg: String
}

"Generated from type: [`com.twitter.tweb3.graphql.result.NFTUnverifiedWallet`](http://go/sg.thrift/NFTUnverifiedWallet)"
type NFTUnverifiedWallet @thrift_type(name : "NFTUnverifiedWallet", package : "com.twitter.tweb3.graphql.result") {
  msg: String
}

"Generated from type: [`com.twitter.tweb3.graphql.result.NFTsSlice`](http://go/sg.thrift/NFTsSlice)"
type NFTsSlice @thrift_type(name : "NFTsSlice", package : "com.twitter.tweb3.graphql.result") {
  items: [NFT!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.graphql.NerData`](http://go/sg.thrift/NerData)"
type NerData @thrift_type(name : "NerData", package : "com.twitter.strato.graphql") {
  whole_entities: [WholeEntity!]
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.NoAccess`](http://go/sg.thrift/NoAccess)"
type NoAccess @thrift_type(name : "NoAccess", package : "com.twitter.dataproducts.metrics.graphql") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.tweb3.graphql.result.NoVerificationSession`](http://go/sg.thrift/NoVerificationSession)"
type NoVerificationSession @thrift_type(name : "NoVerificationSession", package : "com.twitter.tweb3.graphql.result") {
  msg: String
}

"Generated from type: [`com.twitter.incentives.jiminy.Nudge`](http://go/sg.thrift/Nudge)"
type Nudge @thrift_type(name : "Nudge", package : "com.twitter.incentives.jiminy") {
  id: NumericString!
  nudge_type: NudgeType!
  proposed_tweet_language: String @development
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.ObfuscatedIdResult`](http://go/sg.thrift/ObfuscatedIdResult)"
type ObfuscatedIdResult @thrift_type(name : "ObfuscatedIdResult", package : "com.twitter.in_app_purchases.graphql") {
  obfuscated_id: String!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.OpenCloseTimeNext`](http://go/sg.thrift/OpenCloseTimeNext)"
type OpenCloseTimeNext @thrift_type(name : "OpenCloseTimeNext", package : "com.twitter.bizprofiles.graphql") {
  day: Weekday!
  time: HourMinute!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.OpenseaCollectionMetadata`](http://go/sg.thrift/OpenseaCollectionMetadata)"
type OpenseaCollectionMetadata @thrift_type(name : "OpenseaCollectionMetadata", package : "com.twitter.tweb3.graphql.model") {
  banner_image_url: String
  created_date_msec: Int53
  description: String
  featured: Boolean
  featured_image_url: String
  image_url: String
  name: String
  slug: String
  verified: Boolean
}

"Generated from type: [`com.twitter.tweb3.graphql.model.OpenseaNFTMetadata`](http://go/sg.thrift/OpenseaNFTMetadata)"
type OpenseaNFTMetadata @thrift_type(name : "OpenseaNFTMetadata", package : "com.twitter.tweb3.graphql.model") {
  collection: NFTCollection
  creator_address: String
  creator_profile_image_url: String
  creator_username: String
  description: String
  image_url: String
  name: String
  owner_address: String
  owner_profile_image_url: String
  owner_username: String
  schema: String
  traits: [OpenseaNFTTrait!]
}

"Generated from type: [`com.twitter.tweb3.graphql.model.OpenseaNFTTrait`](http://go/sg.thrift/OpenseaNFTTrait)"
type OpenseaNFTTrait @thrift_type(name : "OpenseaNFTTrait", package : "com.twitter.tweb3.graphql.model") {
  display_type: String
  trait_type: String
  value: String
}

"Generated from Strato space: `Organization`"
type Organization @strato_space(name : "Organization") {
  """
  Fetch the account backup data for claimed ad accounts.
  
  Generated from Strato column: [graphql/steam/accountClaimBackup.Organization](https://strato.twitter.biz/web/browse/Organization/graphql/steam/accountClaimBackup)
  """
  account_claim_backup(ad_account_id: NumericString!): [AdAccountClaimBackup!] @strato_column(path : "graphql/steam/accountClaimBackup.Organization") @strato_op(value : Fetch)
  """
  Fetch the staging account backup data for claimed ad accounts.
  
  Generated from Strato column: [graphql/steam/accountClaimBackupStaging.Organization](https://strato.twitter.biz/web/browse/Organization/graphql/steam/accountClaimBackupStaging)
  """
  account_claim_backup_staging(ad_account_id: NumericString!): [AdAccountClaimBackup!] @development @strato_column(path : "graphql/steam/accountClaimBackupStaging.Organization") @strato_op(value : Fetch)
  """
  Fetch all the features an organization has access to.
  
  Generated from Strato column: [graphql/steam/features.Organization](https://strato.twitter.biz/web/browse/Organization/graphql/steam/features)
  """
  features: [OrganizationFeature!] @strato_column(path : "graphql/steam/features.Organization") @strato_op(value : Fetch)
  """
  Fetch all the features an organization has access to.
  
  Generated from Strato column: [graphql/steam/featuresStaging.Organization](https://strato.twitter.biz/web/browse/Organization/graphql/steam/featuresStaging)
  """
  features_staging: [OrganizationFeature!] @development @strato_column(path : "graphql/steam/featuresStaging.Organization") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The name of the organisation
  
  Generated from Strato column: [graphql/collaborate/name.Organization](https://strato.twitter.biz/web/browse/Organization/graphql/collaborate/name)
  """
  name: String @development @strato_column(path : "graphql/collaborate/name.Organization") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  The teams within an organisation
  
  Generated from Strato column: [graphql/collaborate/teams.Organization](https://strato.twitter.biz/web/browse/Organization/graphql/collaborate/teams)
  """
  teams: [Team!] @development @strato_column(path : "graphql/collaborate/teams.Organization") @strato_op(value : Fetch)
}

"""
generic page that supports any valid combination of timelines, tabs, headers, etc

Generated from type: [`com.twitter.pages.render.Page`](http://go/sg.thrift/Page)
"""
type Page @thrift_type(name : "Page", package : "com.twitter.pages.render") {
  id: String!
  page_body: PageBody!
  page_header: PageHeader
  page_nav_bar: PageNavBar
  scribe_config: TimelineTimelineScribeConfig
}

"Generated from type: [`com.twitter.strato.graphql.problems.ParameterNameAndValue`](http://go/sg.thrift/ParameterNameAndValue)"
type ParameterNameAndValue @thrift_type(name : "ParameterNameAndValue", package : "com.twitter.strato.graphql.problems") {
  parameter_name: String!
  parameter_value: String!
}

"Generated from type: [`com.twitter.strato.graphql.problems.ParameterValidationError`](http://go/sg.thrift/ParameterValidationError)"
type ParameterValidationError @thrift_type(name : "ParameterValidationError", package : "com.twitter.strato.graphql.problems") {
  error_message: String!
  parameters: [ParameterNameAndValue!]!
}

"Generated from type: [`com.twitter.strato.graphql.problems.ParameterValidationErrorResponse`](http://go/sg.thrift/ParameterValidationErrorResponse)"
type ParameterValidationErrorResponse @thrift_type(name : "ParameterValidationErrorResponse", package : "com.twitter.strato.graphql.problems") {
  parameter_errors: [ParameterValidationError!]!
}

"Generated from type: [`com.twitter.convosvc.strato.ParticipantConversationMetadata`](http://go/sg.thrift/ParticipantConversationMetadata)"
type ParticipantConversationMetadata @thrift_type(name : "ParticipantConversationMetadata", package : "com.twitter.convosvc.strato") {
  join_conversation_event_id: NumericString
  join_time_millis: NumericString
  last_read_event_id: NumericString
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.ubs.ParticipantUser`](http://go/sg.thrift/ParticipantUser)"
type ParticipantUser @thrift_type(name : "ParticipantUser", package : "com.twitter.ubs") {
  avatar_url: String
  display_name: String
  is_following: Boolean
  "Renamed from is_requesting_user in proxsee"
  is_invoking_user: Boolean
  is_muted_by_admin: Boolean
  is_muted_by_guest: Boolean
  is_mutual_follow: Boolean
  is_verified: Boolean
  n_followers: Int53
  n_followings: Int53
  raise_hand_emoji: String
  start: Int53
  twitter_screen_name: String
  user: User @deprecated(reason : "migrated to user_results")
  user_id: String
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults
}

"Generated from type: [`com.twitter.ubs.Participants`](http://go/sg.thrift/Participants)"
type Participants @thrift_type(name : "Participants", package : "com.twitter.ubs") {
  admins: [ParticipantUser!]
  broadcast_id: String
  listeners: [ParticipantUser!]
  poll_interval_sec: Int53
  speakers: [ParticipantUser!]
  total: Int53
  total_public: Int53
}

"Generated from type: [`com.twitter.bff.BFFPayPalDetails`](http://go/sg.thrift/BFFPayPalDetails)"
type PayPalDetails @thrift_type(name : "BFFPayPalDetails", package : "com.twitter.bff") {
  img_src_url: String!
  user_name: String!
}

"Generated from type: [`com.twitter.bff.BFFPaymentMethod`](http://go/sg.thrift/BFFPaymentMethod)"
type PaymentMethod @thrift_type(name : "BFFPaymentMethod", package : "com.twitter.bff") {
  details: PaymentMethodDetails!
  id: NumericString!
  is_default: Boolean!
  is_deleted: Boolean!
  payment_method_type: PaymentMethodType!
}

"Generated from type: [`com.twitter.strato.graphql.PeriscopeUser`](http://go/sg.thrift/PeriscopeUser)"
type PeriscopeUser @thrift_type(name : "PeriscopeUser", package : "com.twitter.strato.graphql") {
  "The display name of the Periscope user."
  display_name: String!
  "The URL of the profile image of the Periscope user."
  profile_image_url: String
  "The ID of the Periscope user."
  rest_id: String!
  "The username of the Periscope user."
  username: String!
}

"Generated from type: [`com.twitter.convosvc.strato.PerspectivalConversationMetadata`](http://go/sg.thrift/PerspectivalConversationMetadata)"
type PerspectivalConversationMetadata @thrift_type(name : "PerspectivalConversationMetadata", package : "com.twitter.convosvc.strato") {
  last_read_event_id: NumericString
  low_quality: Boolean
  muted: Boolean
  muted_due_to_muted_user: Boolean
  read_only: Boolean
  trusted: Boolean
}

"Generated from type: [`com.twitter.channels.management.pin_list.v3.PinListInvalidRequestResult`](http://go/sg.thrift/PinListInvalidRequestResult)"
type PinListInvalidRequestResult @thrift_type(name : "PinListInvalidRequestResult", package : "com.twitter.channels.management.pin_list.v3") {
  parameter_error_response: ParameterValidationErrorResponse!
  pin_list_invalid_request_reason: PinListInvalidRequestReason!
}

"Generated from type: [`com.twitter.channels.management.pin_list.v3.PinListSuccessResult`](http://go/sg.thrift/PinListSuccessResult)"
type PinListSuccessResult @thrift_type(name : "PinListSuccessResult", package : "com.twitter.channels.management.pin_list.v3") {
  pinned_lists: [List!]!
}

"Generated from Strato space: `Place`"
type Place @strato_space(name : "Place") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Provide a NumericString version of rest_id of a place which can be negative.
  
  Generated from Strato column: [graphql/place/restIdSigned.Place](https://strato.twitter.biz/web/browse/Place/graphql/place/restIdSigned)
  """
  rest_id_signed: NumericString @strato_column(path : "graphql/place/restIdSigned.Place") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.scheduleanddraftapi.PostRetweetRequest`](http://go/sg.thrift/PostRetweetRequest)"
type PostRetweetRequest @thrift_type(name : "PostRetweetRequest", package : "com.twitter.scheduleanddraftapi") {
  source_status_id: NumericString!
}

"Generated from type: [`com.twitter.scheduleanddraftapi.PostTweetRequest`](http://go/sg.thrift/PostTweetRequest)"
type PostTweetRequest @thrift_type(name : "PostTweetRequest", package : "com.twitter.scheduleanddraftapi") {
  attachment_url: String
  auto_populate_reply_metadata: Boolean!
  exclude_reply_user_ids: [NumericString!]
  in_reply_to_status_id: NumericString
  media_ids: [NumericString!]
  possibly_sensitive: Boolean
  status: String!
}

"Generated from type: [`com.twitter.incentives.jiminy.PotentiallyToxicTweet`](http://go/sg.thrift/PotentiallyToxicTweet)"
type PotentiallyToxicTweet @thrift_type(name : "PotentiallyToxicTweet", package : "com.twitter.incentives.jiminy") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.dataproducts.search.counthunter.CountHunterSuccessResponse`](http://go/sg.thrift/CountHunterSuccessResponse)"
type PowerTrackFoundTweetCounts @thrift_type(name : "CountHunterSuccessResponse", package : "com.twitter.dataproducts.search.counthunter") {
  counts: [PowerTrackTweetCount!]!
  next_token: String
}

"Generated from type: [`com.twitter.dataproducts.search.idhunter.IdHunterSuccessResponse`](http://go/sg.thrift/IdHunterSuccessResponse)"
type PowerTrackFoundTweets @thrift_type(name : "IdHunterSuccessResponse", package : "com.twitter.dataproducts.search.idhunter") {
  next_token: String
  tweets: [Tweet!]! @deprecated(reason : "migrated to tweets_results")
  tweets_result: [TweetResult] @deprecated(reason : "migrated to tweets_results; field will always be null")
  tweets_results: [TweetResults!]!
}

"Generated from Strato space: `PowerTrackQuery`"
type PowerTrackQuery @strato_space(name : "PowerTrackQuery") {
  "A globally unique identifier"
  id: ID!
  "Generated from Strato column: [graphql/dataproducts/matchedTweetCounts.PowerTrackQuery](https://strato.twitter.biz/web/browse/PowerTrackQuery/graphql/dataproducts/matchedTweetCounts)"
  matched_tweet_counts(from_date: String, granularity: PowerTrackTweetCountGranularityInput, max_days_back: Int, max_id: NumericString, max_query_length: Int, next_token: String, operator_set: Int, since_id: NumericString, to_date: String): PowerTrackTweetCountResponse @strato_column(path : "graphql/dataproducts/matchedTweetCounts.PowerTrackQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/dataproducts/matchedTweets.PowerTrackQuery](https://strato.twitter.biz/web/browse/PowerTrackQuery/graphql/dataproducts/matchedTweets)"
  matched_tweets(from_date: String, max_days_back: Int, max_id: NumericString, max_query_length: Int, max_results: Int, max_results_allowed: Int, next_token: String, operator_set: Int, since_id: NumericString, sort_order_type: SortOrderTypeInput, to_date: String): PowerTrackTweetSearchResponse @strato_column(path : "graphql/dataproducts/matchedTweets.PowerTrackQuery") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.dataproducts.search.counthunter.Count`](http://go/sg.thrift/Count)"
type PowerTrackTweetCount @thrift_type(name : "Count", package : "com.twitter.dataproducts.search.counthunter") {
  count: Int!
  end_date: NumericString!
  start_date: NumericString!
}

"Generated from type: [`com.twitter.vibes.GetPreCuratedVibesResponse`](http://go/sg.thrift/GetPreCuratedVibesResponse)"
type PreCuratedVibes @thrift_type(name : "GetPreCuratedVibesResponse", package : "com.twitter.vibes") {
  active_precurated_vibes: [Vibe!]!
}

"Generated from type: [`com.twitter.incentives.jiminy.PreemptiveNudge`](http://go/sg.thrift/PreemptiveNudge)"
type PreemptiveNudge @thrift_type(name : "PreemptiveNudge", package : "com.twitter.incentives.jiminy") {
  id: NumericString!
  nudge_type: PreemptiveNudgeType!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.Price`](http://go/sg.thrift/Price)"
type Price @thrift_type(name : "Price", package : "com.twitter.commerce.catalog.api.graphql") {
  currency_code: CurrencyCode!
  micro_value: NumericString!
  "Deprecated( Replaced with microValue)"
  value: Int! @deprecated(reason : "Replaced with microValue")
}

"Generated from type: [`com.twitter.payments.web.PriceDetail`](http://go/sg.thrift/PriceDetail)"
type PriceDetail @thrift_type(name : "PriceDetail", package : "com.twitter.payments.web") {
  amount_local_micro: Int53!
  currency_code: WebSubscriptionsCurrencyCode!
  external_price_id: String!
  price_type: PriceType!
}

"Generated from type: [`com.twitter.subsverify.Principal`](http://go/sg.thrift/Principal)"
type Principal @thrift_type(name : "Principal", package : "com.twitter.subsverify") {
  kind: PrincipalKind!
  principal_id: NumericString!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductAdQualityValidityDetail`](http://go/sg.thrift/ProductAdQualityValidityDetail)"
type ProductAdQualityValidityDetail @thrift_type(name : "ProductAdQualityValidityDetail", package : "com.twitter.commerce.catalog.api.graphql") {
  errors: [ProductAdQualityValidityDetailError!]! @development
  is_processing: Boolean! @development
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductAdQualityValidityDetailError`](http://go/sg.thrift/ProductAdQualityValidityDetailError)"
type ProductAdQualityValidityDetailError @thrift_type(name : "ProductAdQualityValidityDetailError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String @development
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductCharacteristics`](http://go/sg.thrift/ProductCharacteristics)"
type ProductCharacteristics @thrift_type(name : "ProductCharacteristics", package : "com.twitter.commerce.catalog.api.graphql") {
  age_group: ProductAgeGroup
  color: String
  gender: ProductGender
  material: String
  popularity_rank: Int
  size: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductCoreData`](http://go/sg.thrift/ProductCoreData)"
type ProductCoreData @thrift_type(name : "ProductCoreData", package : "com.twitter.commerce.catalog.api.graphql") {
  product_characteristics: ProductCharacteristics
  product_details: ProductDetails!
  product_identifiers: ProductIdentifiers
  product_metadata: ProductMetadata!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductCoverMediaValidityDetail`](http://go/sg.thrift/ProductCoverMediaValidityDetail)"
type ProductCoverMediaValidityDetail @thrift_type(name : "ProductCoverMediaValidityDetail", package : "com.twitter.commerce.catalog.api.graphql") {
  errors: [ProductCoverMediaValidityDetailError!]! @development
  is_processing: Boolean! @development
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductCoverMediaValidityDetailError`](http://go/sg.thrift/ProductCoverMediaValidityDetailError)"
type ProductCoverMediaValidityDetailError @thrift_type(name : "ProductCoverMediaValidityDetailError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String @development
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductDetails`](http://go/sg.thrift/ProductDetails)"
type ProductDetails @thrift_type(name : "ProductDetails", package : "com.twitter.commerce.catalog.api.graphql") {
  additional_media: [ApiMedia!]
  availability: ProductAvailability!
  condition: ProductCondition
  cover_media: ApiMedia!
  description: String!
  external_url: ApiShortenedUrl!
  inventory: Int
  mobile_url: ApiShortenedUrl
  original_additional_media_urls: [String!]
  original_cover_media_url: String
  price: Price!
  product_sale: ProductSale
  title: String!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductGroupCoreData`](http://go/sg.thrift/ProductGroupCoreData)"
type ProductGroupCoreData @thrift_type(name : "ProductGroupCoreData", package : "com.twitter.commerce.catalog.api.graphql") {
  catalog: CommerceCatalog!
  default_product_variant: CommerceProduct @deprecated(reason : "migrated to default_product_variant_results")
  default_product_variant_results: CommerceProductResults
  product_group_id: String!
  product_group_key: NumericString!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductIdentifiers`](http://go/sg.thrift/ProductIdentifiers)"
type ProductIdentifiers @thrift_type(name : "ProductIdentifiers", package : "com.twitter.commerce.catalog.api.graphql") {
  brand: String
  custom_product_type: [String!]
  google_product_category: GoogleProductCategory
  gtin: String
  mpn: String
  product_group_id: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductItemsLimitError`](http://go/sg.thrift/ProductItemsLimitError)"
type ProductItemsLimitError @thrift_type(name : "ProductItemsLimitError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductMetadata`](http://go/sg.thrift/ProductMetadata)"
type ProductMetadata @thrift_type(name : "ProductMetadata", package : "com.twitter.commerce.catalog.api.graphql") {
  catalog_id: NumericString!
  created_from_data_source: ProductDataSource
  product_id: String!
  product_key: NumericString!
  updated_from_data_source: ProductDataSource
}

"Generated from Strato space: `ProductResource`"
type ProductResource @strato_space(name : "ProductResource") {
  """
  Returns access for the fetched ProductResource.
  
  Generated from Strato column: [graphql/subscription-services/access.ProductResource](https://strato.twitter.biz/web/browse/ProductResource/graphql/subscription-services/access)
  """
  access: String @strato_column(path : "graphql/subscription-services/access.ProductResource") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns path for the fetched ProductResource.
  
  Generated from Strato column: [graphql/subscription-services/path.ProductResource](https://strato.twitter.biz/web/browse/ProductResource/graphql/subscription-services/path)
  """
  path: String @strato_column(path : "graphql/subscription-services/path.ProductResource") @strato_op(value : Fetch)
  """
  Returns type for the fetched ProductResource.
  
  Generated from Strato column: [graphql/subscription-services/resourceType.ProductResource](https://strato.twitter.biz/web/browse/ProductResource/graphql/subscription-services/resourceType)
  """
  resource_type: String @strato_column(path : "graphql/subscription-services/resourceType.ProductResource") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductSale`](http://go/sg.thrift/ProductSale)"
type ProductSale @thrift_type(name : "ProductSale", package : "com.twitter.commerce.catalog.api.graphql") {
  end_time: String
  price: Price!
  start_time: String
}

"Generated from type: [`com.twitter.commerce.catalog.common.ProductSetConfig`](http://go/sg.thrift/ProductSetConfig)"
type ProductSetConfig @thrift_type(name : "ProductSetConfig", package : "com.twitter.commerce.catalog.common") {
  product_set_id: NumericString!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductSetCoreData`](http://go/sg.thrift/ProductSetCoreData)"
type ProductSetCoreData @thrift_type(name : "ProductSetCoreData", package : "com.twitter.commerce.catalog.api.graphql") {
  catalog: CommerceCatalog!
  product_set_description: String
  product_set_name: String!
  product_set_type: ProductSetType!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductSetDescriptionError`](http://go/sg.thrift/ProductSetDescriptionError)"
type ProductSetDescriptionError @thrift_type(name : "ProductSetDescriptionError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from type: [`com.twitter.commerce.drops.api.graphql.ProductSetDropData`](http://go/sg.thrift/ProductSetDropData)"
type ProductSetDropData @thrift_type(name : "ProductSetDropData", package : "com.twitter.commerce.drops.api.graphql") {
  drop_time: String!
  hashtag: String
  id: NumericString!
  merchant_user_id: NumericString!
  product_set_id: NumericString!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductSetIdError`](http://go/sg.thrift/ProductSetIdError)"
type ProductSetIdError @thrift_type(name : "ProductSetIdError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductSetNameError`](http://go/sg.thrift/ProductSetNameError)"
type ProductSetNameError @thrift_type(name : "ProductSetNameError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductSetTypeError`](http://go/sg.thrift/ProductSetTypeError)"
type ProductSetTypeError @thrift_type(name : "ProductSetTypeError", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
}

"Generated from Strato space: `ProductSubscription`"
type ProductSubscription @strato_space(name : "ProductSubscription") {
  """
  Returns createdAt for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/createdAt.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/createdAt)
  """
  created_at: NumericString @strato_column(path : "graphql/subscription-services/createdAt.ProductSubscription") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns paymentSource for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/paymentSource.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/paymentSource)
  """
  payment_source: UserSubscriptionPaymentSource @strato_column(path : "graphql/subscription-services/paymentSource.ProductSubscription") @strato_op(value : Fetch)
  """
  Returns SubscriptionProduct for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/product.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/product)
  """
  product: SubscriptionProduct @strato_column(path : "graphql/subscription-services/product.ProductSubscription") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  Returns UserSubscriptionState for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/state.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/state)
  """
  state: UserSubscriptionState @strato_column(path : "graphql/subscription-services/state.ProductSubscription") @strato_op(value : Fetch)
  """
  Returns user for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/user.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/user)
  """
  user: User @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/subscription-services/user.ProductSubscription") @strato_op(value : Fetch)
  """
  Result field; Returns user for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/user.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/user)
  """
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/subscription-services/user.ProductSubscription") @strato_op(value : Fetch)
  """
  Result field; Returns user for the fetched ProductSubscription.
  
  Generated from Strato column: [graphql/subscription-services/user.ProductSubscription](https://strato.twitter.biz/web/browse/ProductSubscription/graphql/subscription-services/user)
  """
  user_results: UserResults @strato_column(path : "graphql/subscription-services/user.ProductSubscription") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductUpsertError`](http://go/sg.thrift/ProductUpsertError)"
type ProductUpsertError @thrift_type(name : "ProductUpsertError", package : "com.twitter.commerce.catalog.api.graphql") {
  error_type: ProductUpsertErrorType!
  message: String
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductUpsertWarning`](http://go/sg.thrift/ProductUpsertWarning)"
type ProductUpsertWarning @thrift_type(name : "ProductUpsertWarning", package : "com.twitter.commerce.catalog.api.graphql") {
  message: String
  warning_type: ProductUpsertWarningType!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductValidity`](http://go/sg.thrift/ProductValidity)"
type ProductValidity @thrift_type(name : "ProductValidity", package : "com.twitter.commerce.catalog.api.graphql") {
  details: [ProductValidityDetail!]! @development
  status: ProductValidityStatus! @development
}

"Generated from Strato space: `Professional`"
type Professional @strato_space(name : "Professional") {
  """
  The category of a business
  
  Generated from Strato column: [graphql/bizprofiles/category.Professional](https://strato.twitter.biz/web/browse/Professional/graphql/bizprofiles/category)
  """
  category: [BusinessCategory!] @development @strato_column(path : "graphql/bizprofiles/category.Professional") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The type of the professional
  
  Generated from Strato column: [graphql/bizprofiles/professionalType.Professional](https://strato.twitter.biz/web/browse/Professional/graphql/bizprofiles/professionalType)
  """
  professional_type: ProfessionalType @development @strato_column(path : "graphql/bizprofiles/professionalType.Professional") @strato_op(value : Fetch)
  """
  Retrieve eligible coupons for user.
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteCoupons.Professional](https://strato.twitter.biz/web/browse/Professional/graphql/quick-promote/quick-promoteCoupons)
  """
  quick_promote_coupons(
    "Country code"
    country_code: String!
  ): QuickPromoteCoupons @development @strato_column(path : "graphql/quick-promote/quick-promoteCoupons.Professional") @strato_op(value : Fetch)
  """
  Retrieve eligible coupons for user.
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteCouponsV2.Professional](https://strato.twitter.biz/web/browse/Professional/graphql/quick-promote/quick-promoteCouponsV2)
  """
  quick_promote_coupons_v2: QuickPromoteCoupons @strato_column(path : "graphql/quick-promote/quick-promoteCouponsV2.Professional") @strato_op(value : Fetch)
  """
  Check user eligibility for Quick Promote
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteEligibility.Professional](https://strato.twitter.biz/web/browse/Professional/graphql/quick-promote/quick-promoteEligibility)
  """
  quick_promote_eligibility: UserQuickPromoteEligibilityResponse @strato_column(path : "graphql/quick-promote/quick-promoteEligibility.Professional") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.ProfessionalUnavailable`](http://go/sg.thrift/ProfessionalUnavailable)"
type ProfessionalUnavailable @thrift_type(name : "ProfessionalUnavailable", package : "com.twitter.bizprofiles.graphql") {
  reason: ProfessionalUnavailableReason!
}

"Generated from type: [`com.twitter.strato.graphql.ProfileGeoEnrichment`](http://go/sg.thrift/ProfileGeoEnrichment)"
type ProfileGeoEnrichment @thrift_type(name : "ProfileGeoEnrichment", package : "com.twitter.strato.graphql") {
  potential_locations: [GeoEntityWrapper!]
}

"Generated from type: [`com.twitter.ceapromotableuser.PromotableUser`](http://go/sg.thrift/PromotableUser)"
type PromotableUser @thrift_type(name : "PromotableUser", package : "com.twitter.ceapromotableuser") {
  is_primary: Boolean!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

type Pronouns {
  pronouns_text: String!
}

type PublicInterestNotice {
  action_label: String!
  landing_url: String!
  text: String!
}

type Query {
  """
  Column to retrieve AccountsyncOnboardingState object for the authenticated user
  
  Generated from Strato column: [graphql/gryphon/accountsyncOnboardingState.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/gryphon/accountsyncOnboardingState)
  """
  accountsync_onboarding_state(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AccountSyncOnboardingStateResponse @strato_column(path : "graphql/gryphon/accountsyncOnboardingState.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch Ad Accounts by ID
  
  Generated from Strato column: [graphql/ads/hubble/queries/adAccountsByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/ads/hubble/queries/adAccountsByRestId)
  """
  ad_accounts_by_rest_id(
    ad_account_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [AdvertiserAccount!] @development @strato_column(path : "graphql/ads/hubble/queries/adAccountsByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  This endpoint is used for ad free articles. It returns a list of all domains belonging to partners who participate in the ad free article program. This is a thin wrapper around our ConfigBusColumn in order to connect it to GraphQL.
  
  Generated from Strato column: [graphql/longform/adFreeArticleDomains.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/longform/adFreeArticleDomains)
  """
  ad_free_article_domains(
    domain_list_type: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [String!] @strato_column(path : "graphql/longform/adFreeArticleDomains.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the account perspective if user has access to account, which includes account features, timezone, and service level.
  
  Generated from Strato column: [graphql/customer-experience-apps/adsAccountPerspective.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/adsAccountPerspective)
  """
  ads_account_perspective(account_id: Int53!): AdsAccountPerspectiveResponse @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/adsAccountPerspective.GraphQlQuery") @strato_op(value : Fetch)
  """
  Advertiser account queried by account id
  
  Generated from Strato column: [graphql/customer-experience-apps/advertiserAccountByAccountId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/advertiserAccountByAccountId)
  """
  advertiser_account_by_account_id(
    account_id: Int53!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AdvertiserAccount @development @strato_column(path : "graphql/customer-experience-apps/advertiserAccountByAccountId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch Ad Accounts by where the Primary Promotable User is the current user
  
  Generated from Strato column: [graphql/ads/hubble/queries/advertiserAccountsByPrimaryPromotableUser.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/ads/hubble/queries/advertiserAccountsByPrimaryPromotableUser)
  """
  advertiser_accounts_by_primary_promotable_user(
    cursor: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AdvertiserAccountsSlice @strato_column(path : "graphql/ads/hubble/queries/advertiserAccountsByPrimaryPromotableUser.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a sample-mixer getUrtResponse timeline for the alpha product.
  
  Generated from Strato column: [graphql/product-mixer/alphaSampleMixerTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/product-mixer/alphaSampleMixerTimeline)
  """
  alpha_sample_mixer_timeline: Timeline @development @strato_column(path : "graphql/product-mixer/alphaSampleMixerTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch operation for alt text prompt.
  
  Generated from Strato column: [graphql/accessibility/altTextPromptPreference.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/accessibility/altTextPromptPreference)
  """
  alt_text_prompt_preference(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AltTextPromptType @development @strato_column(path : "graphql/accessibility/altTextPromptPreference.GraphQlQuery") @strato_op(value : Fetch)
  """
  Gets Video Data based on media keys if user has access to account and is promotable user
  
  Generated from Strato column: [graphql/customer-experience-apps/amplifyVideosForAccount.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/amplifyVideosForAccount)
  """
  amplify_videos_for_account(account_id: NumericString!, cursor: String, limit: Int): AmplifyVideosSlice @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/amplifyVideosForAccount.GraphQlQuery") @strato_op(value : Fetch)
  api_media(id: ID!): ApiMedia @deprecated(reason : "Migrated to: api_media_v2")
  api_media_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ApiMedia
  """
  Article queried by ID
  
  Generated from Strato column: [graphql/longform/articleByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/longform/articleByRestId)
  """
  article_by_rest_id(
    rest_id: Int!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Article @strato_column(path : "graphql/longform/articleByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns an article-mixer getUrtResponse timeline for the Article List product.
  
  Generated from Strato column: [graphql/longform/articleTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/longform/articleTimeline)
  """
  article_timeline(article_list_seed: ArticleListSeedInput, article_list_seed_type: ArticleListSeedTypeInput, time_window_millis: Int53): Timeline @strato_column(path : "graphql/longform/articleTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Audio space queried by id.
  
  Generated from Strato column: [graphql/audiospace/audioSpaceByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiospace/audioSpaceByRestId)
  """
  audio_space_by_rest_id(
    rest_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): AudioSpace @strato_column(path : "graphql/audiospace/audioSpaceByRestId.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch multiple Audio Spaces by rest ids and SafetyLevel"
  audio_spaces_by_rest_ids(
    rest_ids: [String!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [AudioSpace]! @strato_column(path : "graphql/audioSpacesByRestIds.GraphQlQuery") @strato_op(value : Fetch)
  """
  All Birdwatch notes written by the authenticated user, ordered by recency.
  
  Generated from Strato column: [graphql/birdwatch/authenticatedUserAllBirdwatchNotes.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/authenticatedUserAllBirdwatchNotes)
  """
  authenticated_user_all_birdwatch_notes(
    count: Int, 
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchNotesSlice @strato_column(path : "graphql/birdwatch/authenticatedUserAllBirdwatchNotes.GraphQlQuery") @strato_op(value : Fetch)
  """
  Birdwatch alias self-selection options.
  
  Generated from Strato column: [graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelectOptions.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelectOptions)
  """
  authenticated_user_birdwatch_alias_self_select_options(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchAliasSelfSelectOptions @strato_column(path : "graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelectOptions.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the alias self selection status for a contributor.
  
  Generated from Strato column: [graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelectStatus.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelectStatus)
  """
  authenticated_user_birdwatch_alias_self_select_status(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchAliasSelfSelectStatus @strato_column(path : "graphql/birdwatch/authenticatedUserBirdwatchAliasSelfSelectStatus.GraphQlQuery") @strato_op(value : Fetch)
  """
  Birdwatch profile of the authenticated user.
  
  Generated from Strato column: [graphql/birdwatch/authenticatedUserBirdwatchProfile.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/authenticatedUserBirdwatchProfile)
  """
  authenticated_user_birdwatch_profile(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchProfile @strato_column(path : "graphql/birdwatch/authenticatedUserBirdwatchProfile.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns if the authenticated user has written any Birdwatch notes or not.
  
  Generated from Strato column: [graphql/birdwatch/authenticatedUserHasBirdwatchNotes.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/authenticatedUserHasBirdwatchNotes)
  """
  authenticated_user_has_birdwatch_notes(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Boolean @strato_column(path : "graphql/birdwatch/authenticatedUserHasBirdwatchNotes.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch all TrustedFriendsLists for the authenticated User
  
  Generated from Strato column: [graphql/trusted-friends/authenticatedUserTrustedFriendsLists.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/trusted-friends/authenticatedUserTrustedFriendsLists)
  """
  authenticated_user_trusted_friends_lists(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [TrustedFriendsList!]! @development @strato_column(path : "graphql/trusted-friends/authenticatedUserTrustedFriendsLists.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a sample-mixer getUrtResponse timeline for the beta product.
  
  Generated from Strato column: [graphql/product-mixer/betaSampleMixerTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/product-mixer/betaSampleMixerTimeline)
  """
  beta_sample_mixer_timeline: Timeline @development @strato_column(path : "graphql/product-mixer/betaSampleMixerTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns default and available bid strategies, along with localized bid amount suggestions
  
  Generated from Strato column: [graphql/customer-experience-apps/bidStrategySuggestions.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/bidStrategySuggestions)
  """
  bid_strategy_suggestions(account_features: [String!]!, currency_code: String!, goal: String!, objective: String!, service_level: String!): BidStrategySuggestionResponse @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/bidStrategySuggestions.GraphQlQuery") @strato_op(value : Fetch)
  """
  URLs pointing to latest Birdwatch data in .TSV (Tab-separated values) format for public download, research, and consumption.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchLatestPublicDataFileBundle.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/birdwatchLatestPublicDataFileBundle)
  """
  birdwatch_latest_public_data_file_bundle(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchPublicDataFileBundle @strato_column(path : "graphql/birdwatch/birdwatchLatestPublicDataFileBundle.GraphQlQuery") @strato_op(value : Fetch)
  """
  Birdwatch Note queried by id.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchNoteByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/birdwatchNoteByRestId)
  """
  birdwatch_note_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchNote @strato_column(path : "graphql/birdwatch/birdwatchNoteByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Birdwatch profile of the contributor with alias in key.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchProfileByAlias.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/birdwatch/birdwatchProfileByAlias)
  """
  birdwatch_profile_by_alias(
    alias: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): BirdwatchProfile @strato_column(path : "graphql/birdwatch/birdwatchProfileByAlias.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a paginated list of who a user is blocking
  
  Generated from Strato column: [graphql/dataproducts/blockingSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/blockingSlice)
  """
  blocking_slice(
    cursor: String, 
    max_results: Int, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UsersSlice @strato_column(path : "graphql/dataproducts/blockingSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users a user is blocking, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/blockingSliceV2.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/socialgraph/blockingSliceV2)
  """
  blocking_slice_v2(
    count: Int, 
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/blockingSliceV2.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the BonusFollow product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/bonusFollowTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/bonusFollowTimeline)
  """
  bonus_follow_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/bonusFollowTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Timeline of Tweets in a Bookmark Collection
  
  Generated from Strato column: [graphql/timelines/bookmarkCollectionTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/bookmarkCollectionTimeline)
  """
  bookmark_collection_timeline(bookmark_collection_id: NumericString!): Timeline @strato_column(path : "graphql/timelines/bookmarkCollectionTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Generates a timeline of bookmarked tweets matching the users search query.
  
  Generated from Strato column: [graphql/timelines/bookmarkSearchTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/bookmarkSearchTimeline)
  """
  bookmark_search_timeline(
    "Bookmark Collection ID aka Folder ID to search. `0` or `None` searches all bookmarked content."
    bookmark_collection_id: NumericString, 
    "For pagination, how many documents to return."
    page_size: Int, 
    "For pagination, how many documents to skip."
    page_start: Int, 
    "The textual query string entered by the user."
    query: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TimelineTimeline @development @strato_column(path : "graphql/timelines/bookmarkSearchTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  The user's Bookmark Timeline
  
  Generated from Strato column: [graphql/timelines/bookmarkTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/bookmarkTimeline)
  """
  bookmark_timeline: Timeline @strato_column(path : "graphql/timelines/bookmarkTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
   Provides a list of tweet IDs the user has bookmarked. Depending on options also including replies and retweets. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/bookmarksSliceResult.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/bookmarksSliceResult)
  """
  bookmarks_slice_result(
    end_time: String, 
    max_results: Short, 
    next_token: String, 
    pagination_token: String, 
    previous_token: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    since_id: NumericString, 
    start_time: String, 
    until_id: NumericString
  ): UserBookmarksSliceResult @development @strato_column(path : "graphql/dataproducts/bookmarksSliceResult.GraphQlQuery") @strato_op(value : Fetch)
  broadcast(id: ID!): Broadcast @deprecated(reason : "Migrated to: broadcast_v2")
  "Fetch a Broadcast by rest id"
  broadcast_by_rest_id(
    "A String ID that uniquely identifies a periscope broadcast"
    rest_id: String!
  ): Broadcast! @safety_level(value : "TweetDetail") @strato_column(path : "graphql/broadcastByRestId.GraphQlQuery") @strato_op(value : Fetch)
  broadcast_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Broadcast
  "Fetch multiple Broadcasts by rest ids"
  broadcasts_by_rest_ids(rest_ids: [String!]!): [Broadcast]! @safety_level(value : "TweetDetail") @strato_column(path : "graphql/broadcastsByRestIds.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns topic categories and subtopics for the Spaces tab
  
  Generated from Strato column: [graphql/audiospace/browseSpaceTopics.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiospace/browseSpaceTopics)
  """
  browse_space_topics(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    seed_category_id: NumericString, 
    sub_topic_limit: Int
  ): BrowseTopicsResponse @development @strato_column(path : "graphql/audiospace/browseSpaceTopics.GraphQlQuery") @strato_op(value : Fetch)
  """
  This is used in the campaign creator form to return a list of recommended followers based on the list of followers that the user enters in.
  
  Generated from Strato column: [graphql/customer-experience-apps/campaignFollowerRecommendations.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/campaignFollowerRecommendations)
  """
  campaign_follower_recommendations(
    follower_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [CampaignFollower!] @strato_column(path : "graphql/customer-experience-apps/campaignFollowerRecommendations.GraphQlQuery") @strato_op(value : Fetch)
  """
  This is used in the campaign creator form to return a list of keyword recommendations. The user will enter a list of keywords to match on and negated keywords that will be left out of the returned list. This filters out all blocked keywords.
  
  Generated from Strato column: [graphql/customer-experience-apps/campaignKeywordSuggestions.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/campaignKeywordSuggestions)
  """
  campaign_keyword_suggestions(keywords: [String!]!, negated_keywords: [String!]!): [String!] @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/campaignKeywordSuggestions.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the searched for tweets if user has access to account and is promotable user, which includes tweet ids
  
  Generated from Strato column: [graphql/customer-experience-apps/campaignTweetLookup.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/campaignTweetLookup)
  """
  campaign_tweet_lookup(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    scheduled_tweet_ids: [NumericString!], 
    tweet_ids: [NumericString!], 
    user_id: NumericString!
  ): CampaignTweetLookupResponse @strato_column(path : "graphql/customer-experience-apps/campaignTweetLookup.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the searched for tweets if user has access to account and is promotable user, which includes tweet ids and optional cursor
  
  Generated from Strato column: [graphql/customer-experience-apps/campaignTweetSearch.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/campaignTweetSearch)
  """
  campaign_tweet_search(
    account_id: NumericString!, 
    cursor: String, 
    is_pre_advertiser: Boolean, 
    line_item_id: NumericString, 
    objective: ObjectiveInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    search_filter: SearchFilterInput, 
    search_query: String, 
    show_replies: Boolean, 
    user_id: NumericString!
  ): CampaignTweetSearchSlice @strato_column(path : "graphql/customer-experience-apps/campaignTweetSearch.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a Card by card_uri"
  card_by_card_uri(
    "A String Uri that uniquely identifies a card"
    card_uri: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Card! @development @strato_column(path : "graphql/cardByCardUri.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch multiple Cards by card_uri"
  cards_by_card_uri(
    card_uris: [String!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [Card]! @development @strato_column(path : "graphql/cardsByCardUri.GraphQlQuery") @strato_op(value : Fetch)
  """
  This column will return all possible metrics and their metadata based on advertiser-account-access level
  
  Generated from Strato column: [graphql/customer-experience-apps/columnQuery.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/columnQuery)
  """
  column_query(
    account_id: NumericString!, 
    cursor: String, 
    metric_count: Int, 
    metric_names: [String!], 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ColumnQuerySlice @development @strato_column(path : "graphql/customer-experience-apps/columnQuery.GraphQlQuery") @strato_op(value : Fetch)
  """
  An Advertiser Account can have saved column sets. This column will return all column sets of an advertiser-account
  
  Generated from Strato column: [graphql/customer-experience-apps/columnSet.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/columnSet)
  """
  column_set(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [AdvertiserColumnSet!] @development @strato_column(path : "graphql/customer-experience-apps/columnSet.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch a Catalog by rest_id (Catalog ID)
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceCatalogByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/commerce/catalog/operations/commerceCatalogByRestId)
  """
  commerce_catalog_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceCatalog @strato_column(path : "graphql/commerce/catalog/operations/commerceCatalogByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch a Product by Rest ID (Product Key)
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/commerce/catalog/operations/commerceProductByRestId)
  """
  commerce_product_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProduct @strato_column(path : "graphql/commerce/catalog/operations/commerceProductByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch a Product Group by Rest ID (Product Group Key)
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductGroupByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/commerce/catalog/operations/commerceProductGroupByRestId)
  """
  commerce_product_group_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductGroup @strato_column(path : "graphql/commerce/catalog/operations/commerceProductGroupByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Result field; Fetch a Product Group Result by Rest ID (Product Group Key)
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductGroupResultByRestId.GraphQlQueryResult](https://strato.twitter.biz/web/browse/GraphQlQueryResult/graphql/commerce/catalog/operations/commerceProductGroupResultByRestId)
  """
  commerce_product_group_result_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductGroupResults @strato_column(path : "graphql/commerce/catalog/operations/commerceProductGroupResultByRestId.GraphQlQueryResult") @strato_op(value : Fetch)
  """
  Result field; Fetch a Product Result by Rest ID (Product Key)
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductResultByRestId.GraphQlQueryResult](https://strato.twitter.biz/web/browse/GraphQlQueryResult/graphql/commerce/catalog/operations/commerceProductResultByRestId)
  """
  commerce_product_result_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductResults @strato_column(path : "graphql/commerce/catalog/operations/commerceProductResultByRestId.GraphQlQueryResult") @strato_op(value : Fetch)
  """
  Fetch a Commerce Product Set by rest_id (Product Set ID)
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceProductSetByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/commerce/catalog/operations/commerceProductSetByRestId)
  """
  commerce_product_set_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductSet @strato_column(path : "graphql/commerce/catalog/operations/commerceProductSetByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch a ProductSetDrop by dropId
  
  Generated from Strato column: [graphql/commerce/drops/commerceProductSetDropByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/commerce/drops/commerceProductSetDropByRestId)
  """
  commerce_product_set_drop_by_rest_id(
    drop_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommerceProductSetDrop @development @strato_column(path : "graphql/commerce/drops/commerceProductSetDropByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Slice of communities matching the search query
  
  Generated from Strato column: [graphql/communities/communitiesSearchSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/communities/communitiesSearchSlice)
  """
  communities_search_slice(
    count: Int, 
    cursor: String, 
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunitySearchSlice! @development @strato_column(path : "graphql/communities/communitiesSearchSlice.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a Community by Twitter ID"
  community_by_rest_id(
    "A snowflake-like string-encoded Long ID"
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Community! @development @strato_column(path : "graphql/communityByRestId.GraphQlQuery") @strato_op(value : Fetch)
  community_join_request(id: ID!): CommunityJoinRequest @deprecated(reason : "Migrated to: community_join_request_v2")
  community_join_request_actions(id: ID!): CommunityJoinRequestActions @deprecated(reason : "Migrated to: community_join_request_actions_v2")
  community_join_request_actions_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityJoinRequestActions
  community_join_request_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityJoinRequest
  community_moderation_tweet_case(id: ID!): CommunityModerationTweetCase @deprecated(reason : "Migrated to: community_moderation_tweet_case_v2")
  community_moderation_tweet_case_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): CommunityModerationTweetCase
  "Generated from Strato column: [graphql/dataproducts/complianceJobByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/complianceJobByRestId)"
  compliance_job_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ComplianceJob @development @strato_column(path : "graphql/dataproducts/complianceJobByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns account-recommendations-mixer getUrtResponse timeline for the ConnectTab product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/connectTabTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/connectTabTimeline)
  """
  connect_tab_timeline: Timeline @development @strato_column(path : "graphql/account-recommendations-mixer/connectTabTimeline.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/dataproducts/contentComplianceByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/contentComplianceByRestId)"
  content_compliance_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): ContentCompliance @strato_column(path : "graphql/dataproducts/contentComplianceByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Get a list of all user IDs that are unmentioned from the conversation.
  
  Generated from Strato column: [graphql/consumer-privacy/conversationByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/consumer-privacy/conversationByRestId)
  """
  conversation_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Conversation @strato_column(path : "graphql/consumer-privacy/conversationByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetches a conversation timeline for a tweet
  
  Generated from Strato column: [graphql/tweetconvosvc/conversationTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweetconvosvc/conversationTimeline)
  """
  conversation_timeline(
    "Controller data from the clicked tweet that led to creation of the query"
    controller_data: String, 
    cursor: String, 
    exclude_ancestors: Boolean, 
    max_indentation: Int, 
    "The page in the app that user was on before generating the query"
    referrer: String, 
    tweet_id: NumericString!, 
    view_cnt: Int
  ): TimelineTimeline @safety_level(value : "TimelineFocalTweet") @strato_column(path : "graphql/tweetconvosvc/conversationTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Retrieve cookie catalog
  
  Generated from Strato column: [graphql/cookies/cookieCatalog.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/cookies/cookieCatalog)
  """
  cookie_catalog(include_third_party: Boolean! = false): CookieCatalogResponse @safety_level(value : "FilterAll") @strato_column(path : "graphql/cookies/cookieCatalog.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the CuratedAccountsPacks product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/curatedAccountsPacksTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/curatedAccountsPacksTimeline)
  """
  curated_accounts_packs_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/curatedAccountsPacksTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch DataItems by UID
  
  Generated from Strato column: [graphql/data-api/queries/dataItemsByUid.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/data-api/queries/dataItemsByUid)
  """
  data_items_by_uid(
    data_item_uids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [DataItem!] @development @strato_column(path : "graphql/data-api/queries/dataItemsByUid.GraphQlQuery") @strato_op(value : Fetch)
  """
  Column to fetch a DeckColumn object, give its rest_id. The Column is returned if the DeckColumn has Public SharingStatus, or if the requesting user owns the DeckColumn.
  
  Generated from Strato column: [graphql/gryphon/deckColumnByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/gryphon/deckColumnByRestId)
  """
  deck_column_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DeckColumn @development @strato_column(path : "graphql/gryphon/deckColumnByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Advertisers can set a saved column grouping as 'default column set'. Column sets are constructed based on the user selections's of multiple column views and each column set will generate a unique ID. This column's purpose is to get the id of the default column set so it can be selected on page-load
  
  Generated from Strato column: [graphql/customer-experience-apps/DefaultColumnSetQuery.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/DefaultColumnSetQuery)
  """
  default_column_set_query(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): NumericString @development @strato_column(path : "graphql/customer-experience-apps/DefaultColumnSetQuery.GraphQlQuery") @strato_op(value : Fetch)
  """
  Advertisers can set a saved filter grouping as 'default filter set'. This column's purpose is to get the id of the default filter set so it can be selected on page-load
  
  Generated from Strato column: [graphql/customer-experience-apps/DefaultFilterSetQuery.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/DefaultFilterSetQuery)
  """
  default_filter_set_query(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): NumericString @development @strato_column(path : "graphql/customer-experience-apps/DefaultFilterSetQuery.GraphQlQuery") @strato_op(value : Fetch)
  delegation_group(id: ID!): DelegationGroup @deprecated(reason : "Migrated to: delegation_group_v2")
  delegation_group_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DelegationGroup
  """
  [DevPlatform Content Controls] Query by id for Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilterById.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/content_controls/developerContentFilterById)
  """
  developer_content_filter_by_id(
    developer_content_filter_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DeveloperContentFilter @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilterById.GraphQlQuery") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Get Developer Content Filter Tweet Decision by Ids
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFilterTweetDecisionById.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/content_controls/developerContentFilterTweetDecisionById)
  """
  developer_content_filter_tweet_decision_by_id(
    developer_content_filter_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    tweet_id: NumericString!
  ): DeveloperContentFilterDecision @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFilterTweetDecisionById.GraphQlQuery") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Get all Developer Content Filters.
  
  Generated from Strato column: [graphql/dataproducts/content_controls/developerContentFiltersSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/content_controls/developerContentFiltersSlice)
  """
  developer_content_filters_slice(
    cursor: String, 
    include_development: Boolean, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DeveloperContentFilterSlice @development @strato_column(path : "graphql/dataproducts/content_controls/developerContentFiltersSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns all Twitter Mobile Measurement Partners that are undeleted and displayable on Events Manager.
  
  Generated from Strato column: [graphql/conversion-event-manager/displayableMactProviders.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/conversion-event-manager/displayableMactProviders)
  """
  displayable_mact_providers(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [DisplayableMactProviderModel!] @development @strato_column(path : "graphql/conversion-event-manager/displayableMactProviders.GraphQlQuery") @strato_op(value : Fetch)
  """
  Convert from rest id to global id for conversation id
  
  Generated from Strato column: [graphql/directmessages/dmConversationByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmConversationByRestId)
  """
  dm_conversation_by_rest_id(
    conversation_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMConversation @development @strato_column(path : "graphql/directmessages/dmConversationByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch DMs Inbox initial state
  
  Generated from Strato column: [graphql/directmessages/dmConvoListSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmConvoListSlice)
  """
  dm_convo_list_slice(
    count: Int, 
    cursor: String, 
    desired_lists: [ConversationListTypeInput!]!, 
    known_lists: [ConversationListTypeInput!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    sort_by: ConversationListSortByInput
  ): DMConvoListSliceResult @development @strato_column(path : "graphql/directmessages/dmConvoListSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch DMEvent by given event id
  
  Generated from Strato column: [graphql/directmessages/dmEventByEventId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmEventByEventId)
  """
  dm_event_by_event_id(
    event_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMEvent @development @strato_column(path : "graphql/directmessages/dmEventByEventId.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/dmGroupConvoSliceResult.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmGroupConvoSliceResult)"
  dm_group_convo_slice_result(
    count: Int, 
    cursor: String, 
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMGroupConvoSliceResult @development @strato_column(path : "graphql/directmessages/dmGroupConvoSliceResult.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/dmMessageSliceResult.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmMessageSliceResult)"
  dm_message_slice_result(
    count: Int, 
    cursor: String, 
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMMessageSliceResult @development @strato_column(path : "graphql/directmessages/dmMessageSliceResult.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/directmessages/dmPeopleConvoSliceResult.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmPeopleConvoSliceResult)"
  dm_people_convo_slice_result(
    count: Int, 
    cursor: String, 
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMPeopleConvoSliceResult @development @strato_column(path : "graphql/directmessages/dmPeopleConvoSliceResult.GraphQlQuery") @strato_op(value : Fetch)
  """
  graphQL for Dm Search
  
  Generated from Strato column: [graphql/directmessages/dmSearch.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/dmSearch)
  """
  dm_search(
    perspectival_user_id: NumericString!, 
    request_id: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    search_query: SearchQueryInput!
  ): DmSearchResponse @development @strato_column(path : "graphql/directmessages/dmSearch.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users who favorited a given tweet.
  
  Generated from Strato column: [graphql/timelines/favoritersTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/favoritersTimeline)
  """
  favoriters_timeline(tweet_id: NumericString!): Timeline @strato_column(path : "graphql/timelines/favoritersTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Return all filterSets saved for an account_id by performing a scan operation on filterSetStore MH column.
  
  Generated from Strato column: [graphql/customer-experience-apps/filterSet.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/filterSet)
  """
  filter_set(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [AdvertiserFilterSet!] @development @strato_column(path : "graphql/customer-experience-apps/filterSet.GraphQlQuery") @strato_op(value : Fetch)
  """
  Column that returns all filters and their metadata. These filters will be used on the reporting dashboard for specifying the reporting data.
  
  Generated from Strato column: [graphql/customer-experience-apps/filtersQuery.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/filtersQuery)
  """
  filters_query(
    account_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [AdvertiserFiltersDetails!] @development @strato_column(path : "graphql/customer-experience-apps/filtersQuery.GraphQlQuery") @strato_op(value : Fetch)
  """
  Main entry point for Fleets-Client to request ads.
  
  Generated from Strato column: [graphql/ads/fleetAds.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/ads/fleetAds)
  """
  fleet_ads(autoplay_enabled: Boolean, mobile_device_id: String, num_organic_fleet_threads: Short): [FleetAd!] @deprecated(reason : "ADSUP-190: fleets and fleet ads no longer exist") @safety_level(value : "UserProfileHeader") @strato_column(path : "graphql/ads/fleetAds.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a explore-mixer getUrtResponse timeline for the forYou product.
  
  Generated from Strato column: [graphql/explore/forYouExploreMixerTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/explore/forYouExploreMixerTimeline)
  """
  for_you_explore_mixer_timeline: Timeline @development @strato_column(path : "graphql/explore/forYouExploreMixerTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  This column handles the vibes (aka status) getPreCuratedVibes fetch operation, which fetches the available vibes in the user's country on the day of the request. More details can be found at go/vibe-backend-tdd
  
  Generated from Strato column: [graphql/vibes/getPreCuratedVibes.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/vibes/getPreCuratedVibes)
  """
  get_pre_curated_vibes(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    vibe_verb: VibeVerbInput
  ): PreCuratedVibes @development @strato_column(path : "graphql/vibes/getPreCuratedVibes.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the default and available goals.
  
  Generated from Strato column: [graphql/customer-experience-apps/goalSuggestions.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/goalSuggestions)
  """
  goal_suggestions(account_features: [String!]!, objective: String!, service_level: String!, targeted_os_types: [String!]): BidGoalSuggestionResponse @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/goalSuggestions.GraphQlQuery") @strato_op(value : Fetch)
  """
  Home timeline in pure reverse-chronological order without tweet injections.
  
  Generated from Strato column: [graphql/timelines/homeLatestTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/homeLatestTimeline)
  """
  home_latest_timeline: Timeline @strato_column(path : "graphql/timelines/homeLatestTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  V2 Home timeline in pure reverse-chronological order without tweet injections which does not contain URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone).
  
  Generated from Strato column: [graphql/timelines/homeLatestTimelineV2.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/homeLatestTimelineV2)
  """
  home_latest_timeline_v2: Timeline @development @strato_column(path : "graphql/timelines/homeLatestTimelineV2.GraphQlQuery") @strato_op(value : Fetch)
  """
  Ranked Home timeline made up of injections as well as the tweets, retweets made by those who a given user follows.
  
  Generated from Strato column: [graphql/timelines/homeTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/homeTimeline)
  """
  home_timeline: Timeline @strato_column(path : "graphql/timelines/homeTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  V2 Ranked Home timeline made up of injections as well as the tweets, retweets made by those who a given user follows and which does not contain URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone).
  
  Generated from Strato column: [graphql/timelines/homeTimelineV2.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/homeTimelineV2)
  """
  home_timeline_v2: Timeline @development @strato_column(path : "graphql/timelines/homeTimelineV2.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users requesting to follow a user, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/incomingFollowRequestsSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/socialgraph/incomingFollowRequestsSlice)
  """
  incoming_follow_requests_slice(
    count: Int, 
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/incomingFollowRequestsSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Query to fetch conversations IDs by DMConversationLabels
  
  Generated from Strato column: [graphql/dmConversationLabels/labeledConversationSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dmConversationLabels/labeledConversationSlice)
  """
  labeled_conversation_slice(
    label: DMConversationLabelInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMLabeledConversationsSlice @strato_column(path : "graphql/dmConversationLabels/labeledConversationSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Retreive the User Event Timeline for the authentiated user, provide no cursor to begin the timeline from the current time.
  
  Generated from Strato column: [graphql/directmessages/legacyUserEventTimelineSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/directmessages/legacyUserEventTimelineSlice)
  """
  legacy_user_event_timeline_slice(
    count: Int, 
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): DMEventSliceResult @development @strato_column(path : "graphql/directmessages/legacyUserEventTimelineSlice.GraphQlQuery") @strato_op(value : Fetch)
  list(id: ID!): List @deprecated(reason : "Migrated to: list_v2")
  "Fetch a List by Twitter ID"
  list_by_rest_id(
    "A snowflake-like string-encoded Long ID"
    rest_id: String!
  ): List! @deprecated(reason : "migrated to Query.list_by_rest_id_v2") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/listByRestId.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a List by Twitter ID."
  list_by_rest_id_v2(
    "A snowflake-like string-encoded Long ID"
    rest_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List @strato_column(path : "graphql/listByRestIdV2.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/dataproducts/listComplianceJobs.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/listComplianceJobs)"
  list_compliance_jobs(
    acl_account_id: NumericString, 
    job_type: ContentComplianceJobTypeInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    status: ContentComplianceJobStatusInput
  ): [ComplianceJob!] @strato_column(path : "graphql/dataproducts/listComplianceJobs.GraphQlQuery") @strato_op(value : Fetch)
  list_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): List
  """
  Returns a LiveEvent strato space
  
  Generated from Strato column: [graphql/liveVideo/liveEventByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/liveVideo/liveEventByRestId)
  """
  live_event_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): LiveEvent @strato_column(path : "graphql/liveVideo/liveEventByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the suggested bid range localized to provided currency code.
  
  Generated from Strato column: [graphql/customer-experience-apps/localizedBidSuggestions.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/localizedBidSuggestions)
  """
  localized_bid_suggestions(bid_unit: BidUnitInput!, currency_code: String!, objective: LineItemObjectiveInput!, optimization_preference: OptimizationPreferenceInput!, promoted_product_type: PromotedProductTypeInput!): LocalizedBidSuggestionResponse @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/localizedBidSuggestions.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a list of recommended trend names for logged out users
  
  Generated from Strato column: [graphql/events-recos/loggedOutTrendsList.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/events-recos/loggedOutTrendsList)
  """
  logged_out_trends_list(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): LoggedOutTrendsList @strato_column(path : "graphql/events-recos/loggedOutTrendsList.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users a user is muting, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/mutingSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/socialgraph/mutingSlice)
  """
  muting_slice(
    count: Int, 
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/mutingSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the NuxForYou category timeline.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxForYouCategoryTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/nuxForYouCategoryTimeline)
  """
  nux_for_you_category_timeline: Timeline @development @strato_column(path : "graphql/account-recommendations-mixer/nuxForYouCategoryTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the NuxGeo category timeline.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxGeoCategoryTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/nuxGeoCategoryTimeline)
  """
  nux_geo_category_timeline: Timeline @development @strato_column(path : "graphql/account-recommendations-mixer/nuxGeoCategoryTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the NuxPymk category timeline.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxPymkCategoryTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/nuxPymkCategoryTimeline)
  """
  nux_pymk_category_timeline: Timeline @development @strato_column(path : "graphql/account-recommendations-mixer/nuxPymkCategoryTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrpResponse timeline for the NuxUserRecommendationsPage product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxUserRecommendationsPage.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/nuxUserRecommendationsPage)
  """
  nux_user_recommendations_page(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Page @development @strato_column(path : "graphql/account-recommendations-mixer/nuxUserRecommendationsPage.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the NuxUserRecommendations product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxUserRecommendationsTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/nuxUserRecommendationsTimeline)
  """
  nux_user_recommendations_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/nuxUserRecommendationsTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Organization queried by organization id
  
  Generated from Strato column: [graphql/steam/organizationByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/steam/organizationByRestId)
  """
  organization_by_rest_id(
    organization_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Organization @strato_column(path : "graphql/steam/organizationByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Organisations for the current user
  
  Generated from Strato column: [graphql/collaborate/organizations.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/collaborate/organizations)
  """
  organizations(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [Organization!] @development @strato_column(path : "graphql/collaborate/organizations.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users that a user has requested to follow, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/outgoingFollowRequestsSlice.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/socialgraph/outgoingFollowRequestsSlice)
  """
  outgoing_follow_requests_slice(
    count: Int, 
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/outgoingFollowRequestsSlice.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the default and available pay bys
  
  Generated from Strato column: [graphql/customer-experience-apps/payBySuggestions.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/payBySuggestions)
  """
  pay_by_suggestions(account_features: [String!]!, bid_strategy: String, goal: String!, objective: String!, service_level: String!): BidPayBySuggestionResponse @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/payBySuggestions.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a list of the users payment methods.
  
  Generated from Strato column: [graphql/payments/paymentMethods.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/payments/paymentMethods)
  """
  payment_methods(
    ads_account_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [PaymentMethod!] @strato_column(path : "graphql/payments/paymentMethods.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a timeline ID to fetch social proof for a podcast recommendation.
  
  Generated from Strato column: [graphql/audiospace/podcastSocialProofTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiospace/podcastSocialProofTimeline)
  """
  podcast_social_proof_timeline(episode_id: String): Timeline @development @strato_column(path : "graphql/audiospace/podcastSocialProofTimeline.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a PowerTrackQuery by a Query String"
  powertrack_query_by_query_string(query: String!): PowerTrackQuery! @deprecated(reason : "migrated to Query.powertrack_query_by_query_string_v2") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/powertrackQueryByQueryString.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a PowerTrackQuery by a Query String"
  powertrack_query_by_query_string_v2(
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): PowerTrackQuery @strato_column(path : "graphql/powertrackQueryByQueryStringV2.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the promotable users for the account only if user has access to ad account
  
  Generated from Strato column: [graphql/customer-experience-apps/promotableUsers.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/promotableUsers)
  """
  promotable_users(
    account_id: Int53!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [PromotableUser!] @strato_column(path : "graphql/customer-experience-apps/promotableUsers.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetches the audience estimations for certain targeting criteria and budget
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteAudienceEstimationV2.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/quick-promote/quick-promoteAudienceEstimationV2)
  """
  quick_promote_audience_estimation_v2(
    budget: QuickPromotePromotionBudgetInput!, 
    objective: QuickPromoteObjectiveInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    targeting: EasypromoteTargetingOverridesInput!, 
    tweet_id: NumericString!, 
    user: QuickPromotePromotionContextV2Input!
  ): QuickPromoteAudienceEstimates @strato_column(path : "graphql/quick-promote/quick-promoteAudienceEstimationV2.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/quick-promote/quick-promotePromoteValidation.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/quick-promote/quick-promotePromoteValidation)"
  quick_promote_promote_validation(
    "Ad account id"
    account_id: String!, 
    "Daily and total budget"
    budget: QuickPromotePromotionBudgetInput!, 
    objective: QuickPromoteObjectiveInput!, 
    platform: EasypromotePlatformInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "Quick promote will setup some default targetings for your campaign. This parameter lets you override them"
    targeting_overrides: EasypromoteTargetingOverridesInput, 
    tweet_id: NumericString!, 
    "Promoting user id"
    user_id: NumericString!
  ): QuickPromoteValidationResult @development @strato_column(path : "graphql/quick-promote/quick-promotePromoteValidation.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a CustomTimelineMixer getUrtResponse timeline for the TwitterBlue product.
  
  Generated from Strato column: [graphql/rogueone/readTweetsTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/rogueone/readTweetsTimeline)
  """
  read_tweets_timeline: Timeline @development @strato_column(path : "graphql/rogueone/readTweetsTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch the recommended topics for the given space description and user.
  
  Generated from Strato column: [graphql/audiospace/recommendedSpaceTopics.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiospace/recommendedSpaceTopics)
  """
  recommended_space_topics(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    title: String!
  ): [Topic!] @development @strato_column(path : "graphql/audiospace/recommendedSpaceTopics.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users who retweeted a given tweet.
  
  Generated from Strato column: [graphql/timelines/retweetersTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/timelines/retweetersTimeline)
  """
  retweeters_timeline(tweet_id: NumericString!): Timeline @strato_column(path : "graphql/timelines/retweetersTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Revue account queried by id.
  
  Generated from Strato column: [graphql/longform/revueAccountByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/longform/revueAccountByRestId)
  """
  revue_account_by_rest_id(
    rest_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): RevueAccount @strato_column(path : "graphql/longform/revueAccountByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  For testing a rogue one subscription feature flow from end to end. It returns only a placeholder value.
  
  Generated from Strato column: [graphql/rogueone/rogueoneSampleFeature.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/rogueone/rogueoneSampleFeature)
  """
  rogueone_sample_feature(
    access_token: String!, 
    resource: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Boolean @development @strato_column(path : "graphql/rogueone/rogueoneSampleFeature.GraphQlQuery") @strato_op(value : Fetch)
  """
  Search query string
  
  Generated from Strato column: [graphql/search/searchByRawQuery.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/search/searchByRawQuery)
  """
  search_by_raw_query(
    raw_query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SearchQuery @development @strato_column(path : "graphql/search/searchByRawQuery.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns topic categories and subtopics for the Spaces tab
  
  Generated from Strato column: [graphql/audiospace/searchSpaceTopics.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiospace/searchSpaceTopics)
  """
  search_space_topics(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    size: Int! = 20, 
    typed_query: String!
  ): [Topic!] @development @strato_column(path : "graphql/audiospace/searchSpaceTopics.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetches a Shop by rest_id (ShopId)
  
  Generated from Strato column: [graphql/commerce/shopmodule/shopByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/commerce/shopmodule/shopByRestId)
  """
  shop_by_rest_id(
    rest_id: ShopIdInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Shop @strato_column(path : "graphql/commerce/shopmodule/shopByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the SimilarToRecommendations product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/similarToRecommendationsTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/similarToRecommendationsTimeline)
  """
  similar_to_recommendations_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/similarToRecommendationsTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the SpaceHosts product.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/spaceHostsTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/account-recommendations-mixer/spaceHostsTimeline)
  """
  space_hosts_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/spaceHostsTimeline.GraphQlQuery") @strato_op(value : Fetch)
  """
  [DevPlatform Content Controls] Query by id for Developer Content Filter
  
  Generated from Strato column: [graphql/dataproducts/content_controls/static_timeline_by_id.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/dataproducts/content_controls/static_timeline_by_id)
  """
  static_timeline_by_id(static_timeline_id: NumericString!): Timeline @development @strato_column(path : "graphql/dataproducts/content_controls/static_timeline_by_id.GraphQlQuery") @strato_op(value : Fetch)
  """
  Searches for stickers in Fleets
  
  Generated from Strato column: [graphql/stickers/stickerSearchQueryBySearchString.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/stickers/stickerSearchQueryBySearchString)
  """
  sticker_search_query_by_search_string(
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): StickerSearchQuery @development @strato_column(path : "graphql/stickers/stickerSearchQueryBySearchString.GraphQlQuery") @strato_op(value : Fetch)
  strike_tip(id: ID!): StrikeTip @deprecated(reason : "Migrated to: strike_tip_v2")
  """
  Strike Tip queried by id.
  
  Generated from Strato column: [graphql/tipjar/strikeTipByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tipjar/strikeTipByRestId)
  """
  strike_tip_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): StrikeTip @strato_column(path : "graphql/tipjar/strikeTipByRestId.GraphQlQuery") @strato_op(value : Fetch)
  strike_tip_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): StrikeTip
  """
  [Proof of Concept] Returns a string if the user has the necessary subscription permissions, and an error otherwise
  
  Generated from Strato column: [graphql/subscription-services/subscriptionResource.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/subscription-services/subscriptionResource)
  """
  subscription_resource(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): String @development @strato_column(path : "graphql/subscription-services/subscriptionResource.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch suggested stickers in Fleets
  
  Generated from Strato column: [graphql/stickers/suggestedStickers.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/stickers/suggestedStickers)
  """
  suggested_stickers(
    cursor: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): MatchedStickerSectionsSlice @development @strato_column(path : "graphql/stickers/suggestedStickers.GraphQlQuery") @strato_op(value : Fetch)
  """
  Exposes a Map of price offer to price value to clients to avoid hard coding in clients.
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsPriceOfferings.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiencerewards/superFollowsPriceOfferings)
  """
  super_follows_price_offerings(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): SuperFollowsPriceOfferings @strato_column(path : "graphql/audiencerewards/superFollowsPriceOfferings.GraphQlQuery") @strato_op(value : Fetch)
  """
  Users who superliked a given tweet.
  
  Generated from Strato column: [graphql/audiencerewards/superLikersTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/audiencerewards/superLikersTimeline)
  """
  super_likers_timeline(tweet_id: NumericString!): Timeline @development @strato_column(path : "graphql/audiencerewards/superLikersTimeline.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/customer-experience-apps/targetingCatalogByCriteria.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/targetingCatalogByCriteria)"
  targeting_catalog_by_criteria(
    account_id: Int53!, 
    criteria: [SimplifiedTargetingCriterionInput!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [TargetingCriterion!] @strato_column(path : "graphql/customer-experience-apps/targetingCatalogByCriteria.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns a list of targeting criterion data under the domain and category
  
  Generated from Strato column: [graphql/customer-experience-apps/targetingCatalogList.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/targetingCatalogList)
  """
  targeting_catalog_list(
    account_id: Int53!, 
    category_domain_id: Int53, 
    domain: TargetingTypeInput!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [TargetingCriterion!] @strato_column(path : "graphql/customer-experience-apps/targetingCatalogList.GraphQlQuery") @strato_op(value : Fetch)
  """
  Returns the matching location criteria from the bulk list of location names provided
  
  Generated from Strato column: [graphql/customer-experience-apps/targetingCatalogLocations.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/targetingCatalogLocations)
  """
  targeting_catalog_locations(country_code: String, location_names: [String!]!, location_type: LocationTypeInput!): [TargetingCriterion!] @safety_level(value : "FilterAll") @strato_column(path : "graphql/customer-experience-apps/targetingCatalogLocations.GraphQlQuery") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/customer-experience-apps/targetingCatalogSearch.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/targetingCatalogSearch)"
  targeting_catalog_search(
    account_id: Int53!, 
    domains: [TargetingTypeInput!]! = [], 
    query: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [TargetingCriterion!] @strato_column(path : "graphql/customer-experience-apps/targetingCatalogSearch.GraphQlQuery") @strato_op(value : Fetch)
  team(id: ID!): Team @deprecated(reason : "Migrated to: team_v2")
  team_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Team
  """
  Teams for the current user
  
  Generated from Strato column: [graphql/collaborate/teams.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/collaborate/teams)
  """
  teams(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [Team!] @development @strato_column(path : "graphql/collaborate/teams.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetches tweet details (aka conversation timeline) with injections
  
  Generated from Strato column: [graphql/tweetconvosvc/threadedConversationWithInjections.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweetconvosvc/threadedConversationWithInjections)
  """
  threaded_conversation_with_injections(
    "Controller data from the clicked tweet that led to creation of the query"
    controller_data: String, 
    cursor: String, 
    focal_tweet_id: NumericString!, 
    "Flag to request a Reader mode response"
    is_reader_mode: Boolean, 
    "The page in the app that user was on before generating the query"
    referrer: String, 
    "Encoded RUX context added in the URL for accessing the tweet"
    rux_context: String, 
    "Flag to request RUX injections"
    with_rux_injections: Boolean
  ): TimelineTimeline @development @safety_level(value : "TweetDetailWithInjectionsHydration") @strato_column(path : "graphql/tweetconvosvc/threadedConversationWithInjections.GraphQlQuery") @strato_op(value : Fetch)
  """
  Timeline of a conversation without URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone)
  
  Generated from Strato column: [graphql/tweetconvosvc/threadedConversationWithInjectionsV2.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweetconvosvc/threadedConversationWithInjectionsV2)
  """
  threaded_conversation_with_injections_v2(
    "Controller data from the clicked tweet that led to creation of the query"
    controller_data: String, 
    cursor: String, 
    focal_tweet_id: NumericString!, 
    "Flag to request a Reader mode response"
    is_reader_mode: Boolean, 
    "The page in the app that user was on before generating the query"
    referrer: String, 
    "Encoded RUX context added in the URL for accessing the tweet"
    rux_context: String, 
    "Flag to request RUX injections"
    with_rux_injections: Boolean
  ): TimelineTimeline @safety_level(value : "ConversationReply") @strato_column(path : "graphql/tweetconvosvc/threadedConversationWithInjectionsV2.GraphQlQuery") @strato_op(value : Fetch)
  timeline(id: ID!): Timeline
  """
  Cryptocurrency exchange rates
  
  Generated from Strato column: [graphql/tipjar/tipjarExchangeRates.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tipjar/tipjarExchangeRates)
  """
  tipjar_exchange_rates(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TipJarExchangeRates @strato_column(path : "graphql/tipjar/tipjarExchangeRates.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a Topic by Twitter ID"
  topic_by_rest_id(
    "A String ID that uniquely identifies a Topic"
    rest_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Topic! @strato_column(path : "graphql/topicByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Nearby timeline to get tweets posted by local user and tweet from local topic
  
  Generated from Strato column: [graphql/topic/topicNearbyTimeline.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/topic/topicNearbyTimeline)
  """
  topic_nearby_timeline(search_text: String): Timeline @development @strato_column(path : "graphql/topic/topicNearbyTimeline.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch multiple Topics by Twitter ID"
  topics_by_rest_ids(
    rest_ids: [String!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [Topic]! @strato_column(path : "graphql/topicsByRestIds.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetches tweet details (aka conversation timeline) with injections
  
  Generated from Strato column: [graphql/tweetconvosvc/treeConversationWithInjections.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweetconvosvc/treeConversationWithInjections)
  """
  tree_conversation_with_injections(
    "Controller data from the clicked tweet that led to creation of the query"
    controller_data: String, 
    cursor: String, 
    exclude_ancestors: Boolean, 
    focal_tweet_id: NumericString!, 
    max_indentation: Int, 
    "The page in the app that user was on before generating the query"
    referrer: String, 
    view_cnt: Int
  ): TimelineTimeline @development @safety_level(value : "TweetDetailWithInjectionsHydration") @strato_column(path : "graphql/tweetconvosvc/treeConversationWithInjections.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch a particular TrustedFriendsList by restId
  
  Generated from Strato column: [graphql/trusted-friends/trustedFriendsListByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/trusted-friends/trustedFriendsListByRestId)
  """
  trusted_friends_list_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TrustedFriendsList! @development @strato_column(path : "graphql/trusted-friends/trustedFriendsListByRestId.GraphQlQuery") @strato_op(value : Fetch)
  tweet(id: ID!): Tweet @deprecated(reason : "Migrated to: tweet_v2")
  "Fetch a Tweet by Twitter ID"
  tweet_by_rest_id(
    "A snowflake-like string-encoded Long ID"
    rest_id: String!
  ): Tweet! @deprecated(reason : "migrated to Query.tweet_result_by_rest_id") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/tweetByRestId.GraphQlQuery") @strato_op(value : Fetch)
  "Result field; Fetch a Tweet Result by Twitter ID and SafetyLevel"
  tweet_result_by_rest_id(
    "A snowflake-like string-encoded Long ID"
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TweetResults! @strato_column(path : "graphql/tweetResultByRestId.GraphQlQueryResult") @strato_op(value : Fetch)
  "Result field; Fetch multiple Tweets by Twitter ID"
  tweet_results_by_rest_ids(
    rest_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [TweetResults]! @strato_column(path : "graphql/tweetResultsByRestIds.GraphQlQueryResult") @strato_op(value : Fetch)
  tweet_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Tweet
  "Fetch multiple Tweets by Twitter ID"
  tweets_by_rest_ids(rest_ids: [String!]!): [Tweet]! @deprecated(reason : "migrated to Query.tweet_results_by_rest_ids") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/tweetsByRestIds.GraphQlQuery") @strato_op(value : Fetch)
  """
  Gets all Tweets in Amplify Program by Amplify Program ID after verifying user has access to ad account
  
  Generated from Strato column: [graphql/customer-experience-apps/tweetsInAmplifyProgram.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/customer-experience-apps/tweetsInAmplifyProgram)
  """
  tweets_in_amplify_program(
    account_id: NumericString!, 
    program_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [Tweet!] @strato_column(path : "graphql/customer-experience-apps/tweetsInAmplifyProgram.GraphQlQuery") @strato_op(value : Fetch)
  """
  TwitterArticle queried by id.
  
  Generated from Strato column: [graphql/longform/twitterArticleByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/longform/twitterArticleByRestId)
  """
  twitter_article_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TwitterArticle @deprecated(reason : "migrated to twitterArticleResultByRestId.GraphQlQueryResult.strato") @strato_column(path : "graphql/longform/twitterArticleByRestId.GraphQlQuery") @strato_op(value : Fetch)
  """
  Result field; TwitterArticleResult queried by id.
  
  Generated from Strato column: [graphql/longform/twitterArticleResultByRestId.GraphQlQueryResult](https://strato.twitter.biz/web/browse/GraphQlQueryResult/graphql/longform/twitterArticleResultByRestId)
  """
  twitter_article_result_by_rest_id(
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): TwitterArticleResults @development @strato_column(path : "graphql/longform/twitterArticleResultByRestId.GraphQlQueryResult") @strato_op(value : Fetch)
  """
  Fetch Unified Card By Card Uri
  
  Generated from Strato column: [graphql/unified-cards/unifiedCardByCardUri.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/unified-cards/unifiedCardByCardUri)
  """
  unified_card_by_card_uri(
    card_uri: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UnifiedCard @strato_column(path : "graphql/unified-cards/unifiedCardByCardUri.GraphQlQuery") @strato_op(value : Fetch)
  """
  Fetch Multiple Unified Cards By Card Uri
  
  Generated from Strato column: [graphql/unified-cards/unifiedCardsByCardUris.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/unified-cards/unifiedCardsByCardUris)
  """
  unified_cards_by_card_uris(
    card_uris: [String!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [UnifiedCard!] @strato_column(path : "graphql/unified-cards/unifiedCardsByCardUris.GraphQlQuery") @strato_op(value : Fetch)
  user(id: ID!): User @deprecated(reason : "Migrated to: user_v2")
  "Fetch a Twitter user by Twitter ID"
  user_by_rest_id(
    "A snowflake-like string-encoded Long ID"
    rest_id: String!
  ): User! @deprecated(reason : "migrated to Query.user_result_by_rest_id") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/userByRestId.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch a Twitter user by screen name"
  user_by_screen_name(
    "A Twitter user screen name"
    screen_name: String!
  ): User @deprecated(reason : "migrated to Query.user_result_by_screen_name") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/userByScreenName.GraphQlQuery") @strato_op(value : Fetch)
  "Result field; Fetch a Twitter user result by Twitter ID and SafetyLevel"
  user_result_by_rest_id(
    "A snowflake-like string-encoded Long ID"
    rest_id: NumericString!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UserResults! @strato_column(path : "graphql/userResultByRestId.GraphQlQueryResult") @strato_op(value : Fetch)
  "Result field; Fetch a Twitter user result by screen name and SafetyLevel"
  user_result_by_screen_name(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    "A Twitter user screen name"
    screen_name: String!
  ): UserResults @strato_column(path : "graphql/userResultByScreenName.GraphQlQueryResult") @strato_op(value : Fetch)
  "Result field; Fetch multiple Twitter user results by Twitter ID and SafetyLevel"
  user_results_by_rest_ids(
    rest_ids: [NumericString!]!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [UserResults]! @strato_column(path : "graphql/userResultsByRestIds.GraphQlQueryResult") @strato_op(value : Fetch)
  "Result field; Fetch multiple Twitter users by screen name"
  user_results_by_screen_names(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    screen_names: [String!]!
  ): [UserResults]! @strato_column(path : "graphql/userResultsByScreenNames.GraphQlQueryResult") @strato_op(value : Fetch)
  """
  This strato column queries gizmoduck for authenticated user type.
  
  Generated from Strato column: [graphql/open-app/userType.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/open-app/userType)
  """
  user_type(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): UserType @strato_column(path : "graphql/open-app/userType.GraphQlQuery") @strato_op(value : Fetch)
  user_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): User
  "Fetch multiple Twitter users by Twitter ID"
  users_by_rest_ids(rest_ids: [String!]!): [User]! @deprecated(reason : "migrated to Query.user_results_by_rest_ids") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/usersByRestIds.GraphQlQuery") @strato_op(value : Fetch)
  "Fetch multiple Twitter users by screen name"
  users_by_screen_names(screen_names: [String!]!): [User]! @deprecated(reason : "migrated to Query.user_results_by_screen_names") @safety_level(value : "TweetDetail") @strato_column(path : "graphql/usersByScreenNames.GraphQlQuery") @strato_op(value : Fetch)
  viewer: Viewer @deprecated(reason : "Migrated to: viewer_v2")
  viewer_v2(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Viewer
  """
  get nft asset endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/web3GetNft.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweb3/web3GetNft)
  """
  web3_get_nft(
    erc1155_address: String, 
    erc721_address: String, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    token_id: String!
  ): NFT @strato_column(path : "graphql/tweb3/web3GetNft.GraphQlQuery") @strato_op(value : Fetch)
  """
  get nft collections endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/web3GetNftCollections.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweb3/web3GetNftCollections)
  """
  web3_get_nft_collections(
    collection_pagination: PaginatedInput, 
    nft_pagination: PaginatedInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    wallet_address: String!
  ): GetNFTCollectionsResult @strato_column(path : "graphql/tweb3/web3GetNftCollections.GraphQlQuery") @strato_op(value : Fetch)
  """
  get nft assets endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/web3GetNfts.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweb3/web3GetNfts)
  """
  web3_get_nfts(
    collection_identifier: String, 
    pagination: PaginatedInput, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!, 
    wallet_address: String!
  ): GetNFTsResult @strato_column(path : "graphql/tweb3/web3GetNfts.GraphQlQuery") @strato_op(value : Fetch)
  """
  get wallet by address endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/web3WalletByAddress.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweb3/web3WalletByAddress)
  """
  web3_wallet_by_address(
    address: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): Web3Wallet @strato_column(path : "graphql/tweb3/web3WalletByAddress.GraphQlQuery") @strato_op(value : Fetch)
  """
  get wallets endpoint exposed by web3 for the NFT avatar use case
  
  Generated from Strato column: [graphql/tweb3/web3Wallets.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/tweb3/web3Wallets)
  """
  web3_wallets(
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): [Web3Wallet!] @strato_column(path : "graphql/tweb3/web3Wallets.GraphQlQuery") @strato_op(value : Fetch)
  web_subscription_product_details(id: ID!): WebSubscriptionProductDetails @deprecated(reason : "Migrated to: web_subscription_product_details_v2")
  """
  Returns web subscription product details for the given product id.
  
  Generated from Strato column: [graphql/payments/webSubscriptionProductDetailsByRestId.GraphQlQuery](https://strato.twitter.biz/web/browse/GraphQlQuery/graphql/payments/webSubscriptionProductDetailsByRestId)
  """
  web_subscription_product_details_by_rest_id(
    rest_id: String!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): WebSubscriptionProductDetails @strato_column(path : "graphql/payments/webSubscriptionProductDetailsByRestId.GraphQlQuery") @strato_op(value : Fetch)
  web_subscription_product_details_v2(
    id: ID!, 
    "SafetyLevel determines the visibility filtering policies used to filter Tweets, Users and other entities. Contact VF team in #visibility-filtering slack channel for choosing an appropriate safety level for your use case. You can unblock yourself for now by using 'ForDevelopmentOnly' safety level."
    safety_level: SafetyLevelInput!
  ): WebSubscriptionProductDetails
}

"Generated from type: [`com.twitter.quick_promote.AudienceEstimates`](http://go/sg.thrift/AudienceEstimates)"
type QuickPromoteAudienceEstimates @thrift_type(name : "AudienceEstimates", package : "com.twitter.quick_promote") {
  app_installs: EasypromoteRange
  clicks: EasypromoteRange
  engagements: EasypromoteRange
  follows: EasypromoteRange
  impressions: EasypromoteRange
  leads: EasypromoteRange
  users: EasypromoteRange
}

"Generated from type: [`com.twitter.quick_promote.QuickPromoteBudgets`](http://go/sg.thrift/QuickPromoteBudgets)"
type QuickPromoteBudgets @thrift_type(name : "QuickPromoteBudgets", package : "com.twitter.quick_promote") {
  currency_code: String!
  default_budget: NumericString!
  values: [NumericString!]!
}

"Generated from type: [`com.twitter.easypromote.QuickPromoteCoupon`](http://go/sg.thrift/QuickPromoteCoupon)"
type QuickPromoteCoupon @thrift_type(name : "QuickPromoteCoupon", package : "com.twitter.easypromote") {
  currency_code: String
  total_amount: Int53
}

"Generated from type: [`com.twitter.easypromote.CouponEnrollmentResponse`](http://go/sg.thrift/CouponEnrollmentResponse)"
type QuickPromoteCouponEnrollmentDetails @thrift_type(name : "CouponEnrollmentResponse", package : "com.twitter.easypromote") {
  available_balance: [QuickPromoteCoupon!]!
  enrolled_coupon: QuickPromoteCoupon
}

"Generated from type: [`com.twitter.easypromote.CouponEnrollmentError`](http://go/sg.thrift/CouponEnrollmentError)"
type QuickPromoteCouponEnrollmentError @thrift_type(name : "CouponEnrollmentError", package : "com.twitter.easypromote") {
  error_code: QuickPromoteCouponEnrollmentErrorCode!
}

"Generated from type: [`com.twitter.easypromote.QuickPromoteCouponsResponse`](http://go/sg.thrift/QuickPromoteCouponsResponse)"
type QuickPromoteCoupons @thrift_type(name : "QuickPromoteCouponsResponse", package : "com.twitter.easypromote") {
  eligible_coupon: QuickPromoteCoupon
  existing_balance: [QuickPromoteCoupon!]!
}

"Generated from type: [`com.twitter.quick_promote.PromoteError`](http://go/sg.thrift/PromoteError)"
type QuickPromoteError @thrift_type(name : "PromoteError", package : "com.twitter.quick_promote") {
  error_code: QuickPromoteErrorCode!
  message: String!
}

"Generated from type: [`com.twitter.quick_promote.SetupError`](http://go/sg.thrift/SetupError)"
type QuickPromoteSetupError @thrift_type(name : "SetupError", package : "com.twitter.quick_promote") {
  error_code: QuickPromoteErrorCode!
}

"Generated from type: [`com.twitter.quick_promote.Validation`](http://go/sg.thrift/Validation)"
type QuickPromoteValidation @thrift_type(name : "Validation", package : "com.twitter.quick_promote") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.quick_promote.ValidationError`](http://go/sg.thrift/ValidationError)"
type QuickPromoteValidationError @thrift_type(name : "ValidationError", package : "com.twitter.quick_promote") {
  reason: QuickPromoteValidationErrorReason!
}

"Generated from type: [`com.twitter.timelines.graphql.slices.quote_tweets.QuoteTweetsSlice`](http://go/sg.thrift/QuoteTweetsSlice)"
type QuoteTweetsSlice @thrift_type(name : "QuoteTweetsSlice", package : "com.twitter.timelines.graphql.slices.quote_tweets") {
  items: [TweetItem!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.RemoveListMemberFailure`](http://go/sg.thrift/RemoveListMemberFailure)"
type RemoveListMemberFailure @thrift_type(name : "RemoveListMemberFailure", package : "com.twitter.dataproducts.devo.lists.graphql") {
  failure_reason: RemoveListMemberFailureReason!
  parameter_error_response: ParameterValidationErrorResponse!
  user_id: NumericString
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.RemoveListMemberSuccess`](http://go/sg.thrift/RemoveListMemberSuccess)"
type RemoveListMemberSuccess @thrift_type(name : "RemoveListMemberSuccess", package : "com.twitter.dataproducts.devo.lists.graphql") {
  success_reason: RemoveListMemberSuccessReason!
  user_id: NumericString
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.RemoveSuperFollowerPrivacyResult`](http://go/sg.thrift/RemoveSuperFollowerPrivacyResult)"
type RemoveSuperFollowerPrivacyResult @thrift_type(name : "RemoveSuperFollowerPrivacyResult", package : "com.twitter.strato.columns.audience_rewards") {
  result_code: RemoveSuperFollowerPrivacyResultCode! @development
}

type ReportDetail {
  create_time: NumericString!
  follow_up_text: String!
  header: String!
  id: NumericString!
  report_entities: [ReportEntity!]! @deprecated(reason : "migrated to report_entities_results")
  report_entities_result: [ReportEntityResult] @deprecated(reason : "migrated to report_entities_results; field will always be null")
  report_entities_results: [ReportEntityResults]!
}

type RequestParamsEntry {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.RetweetersBySlice`](http://go/sg.thrift/RetweetersBySlice)"
type RetweetersBySlice @thrift_type(name : "RetweetersBySlice", package : "com.twitter.dataproducts.aaa.graphql") {
  items: [RetweetersBySliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [RetweetersBySliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [RetweetersBySliceItemResults]!
  slice_info: SliceInfo
}

type ReviewedReportDetail {
  header: String!
  id: NumericString!
  outcome_text: String!
  report_entities: [ReportEntity!]! @deprecated(reason : "migrated to report_entities_results")
  report_entities_result: [ReportEntityResult] @deprecated(reason : "migrated to report_entities_results; field will always be null")
  report_entities_results: [ReportEntityResults]!
  report_outcome: NumericString!
  rule_link: String!
  update_time: NumericString!
}

"Generated from type: [`com.twitter.incentives.jiminy.ReviseOrBlock`](http://go/sg.thrift/ReviseOrBlock)"
type ReviseOrBlock @thrift_type(name : "ReviseOrBlock", package : "com.twitter.incentives.jiminy") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.incentives.jiminy.ReviseOrHideThenBlock`](http://go/sg.thrift/ReviseOrHideThenBlock)"
type ReviseOrHideThenBlock @thrift_type(name : "ReviseOrHideThenBlock", package : "com.twitter.incentives.jiminy") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.incentives.jiminy.ReviseOrMute`](http://go/sg.thrift/ReviseOrMute)"
type ReviseOrMute @thrift_type(name : "ReviseOrMute", package : "com.twitter.incentives.jiminy") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from Strato space: `RevueAccount`"
type RevueAccount @strato_space(name : "RevueAccount") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Hydrate user-specific card context for a revue account
  
  Generated from Strato column: [graphql/longform/revueCardContext.RevueAccount](https://strato.twitter.biz/web/browse/RevueAccount/graphql/longform/revueCardContext)
  """
  revue_card_context: RevueCardContext @strato_column(path : "graphql/longform/revueCardContext.RevueAccount") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.longform.api.RevueAccount`](http://go/sg.thrift/RevueAccount)"
type RevueAccountProfile @thrift_type(name : "RevueAccount", package : "com.twitter.longform.api") {
  account_settings: RevueAccountSettings!
  newsletter_info: RevueNewsletterInfo!
  profile_info: RevueProfileInfo!
  revue_account_id: NumericString!
}

"Generated from type: [`com.twitter.longform.api.AccountSettings`](http://go/sg.thrift/AccountSettings)"
type RevueAccountSettings @thrift_type(name : "AccountSettings", package : "com.twitter.longform.api") {
  twitter_profile_subscriptions_enabled: Boolean!
}

"Generated from type: [`com.twitter.longform.api.RevueCardContext`](http://go/sg.thrift/RevueCardContext)"
type RevueCardContext @thrift_type(name : "RevueCardContext", package : "com.twitter.longform.api") {
  terms_of_service: RevueTermsOfService!
  user_masked_email: String
  user_subscription_status: RevueSubscriptionStatus
}

"Generated from type: [`com.twitter.longform.api.Image`](http://go/sg.thrift/Image)"
type RevueImage @thrift_type(name : "Image", package : "com.twitter.longform.api") {
  image_variants: [RevueImageInfo!]
  original_image: RevueImageInfo!
}

"Generated from type: [`com.twitter.longform.api.ImageInfo`](http://go/sg.thrift/ImageInfo)"
type RevueImageInfo @thrift_type(name : "ImageInfo", package : "com.twitter.longform.api") {
  height: Int!
  url: String!
  width: Int!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.RevueModule`](http://go/sg.thrift/RevueModule)"
type RevueModule @thrift_type(name : "RevueModule", package : "com.twitter.bizprofiles.graphql") {
  config: RevueModuleConfig!
  context: RevueModuleContext!
  data: RevueModuleData!
}

"Generated from type: [`com.twitter.longform.api.RevueModuleConfig`](http://go/sg.thrift/RevueModuleConfig)"
type RevueModuleConfig @thrift_type(name : "RevueModuleConfig", package : "com.twitter.longform.api") {
  revue_account_id: NumericString!
}

"Generated from type: [`com.twitter.longform.api.RevueModuleContext`](http://go/sg.thrift/RevueModuleContext)"
type RevueModuleContext @thrift_type(name : "RevueModuleContext", package : "com.twitter.longform.api") {
  terms_of_service: RevueTermsOfService!
  user_masked_email: String
  user_subscription_status: RevueSubscriptionStatus
}

"Generated from type: [`com.twitter.longform.api.RevueModuleData`](http://go/sg.thrift/RevueModuleData)"
type RevueModuleData @thrift_type(name : "RevueModuleData", package : "com.twitter.longform.api") {
  account_analytics: RevueUserAnalytics!
  revue_account: RevueAccountProfile!
  sample_issue: RevueSampleIssue
  "Deprecated( 2021-06-22 Moved to RevueModuleContext)"
  terms_of_service: RevueTermsOfService! @deprecated(reason : "2021-06-22 Moved to RevueModuleContext")
}

"Generated from type: [`com.twitter.longform.api.NewsletterInfo`](http://go/sg.thrift/NewsletterInfo)"
type RevueNewsletterInfo @thrift_type(name : "NewsletterInfo", package : "com.twitter.longform.api") {
  author: String
  description: String!
  title: String!
}

"Generated from type: [`com.twitter.longform.api.ProfileInfo`](http://go/sg.thrift/ProfileInfo)"
type RevueProfileInfo @thrift_type(name : "ProfileInfo", package : "com.twitter.longform.api") {
  profile_image: RevueImage
  profile_url: String
  slug: String!
}

"Generated from type: [`com.twitter.longform.api.SampleIssue`](http://go/sg.thrift/SampleIssue)"
type RevueSampleIssue @thrift_type(name : "SampleIssue", package : "com.twitter.longform.api") {
  sample_issue_url: String!
}

"Generated from type: [`com.twitter.longform.api.RevueSubscribeResult`](http://go/sg.thrift/RevueSubscribeResult)"
type RevueSubscribeResult @thrift_type(name : "RevueSubscribeResult", package : "com.twitter.longform.api") {
  revue_account_id: NumericString!
  subscription_status: RevueSubscriptionStatus
}

"Generated from type: [`com.twitter.longform.api.RevueTermsOfService`](http://go/sg.thrift/RevueTermsOfService)"
type RevueTermsOfService @thrift_type(name : "RevueTermsOfService", package : "com.twitter.longform.api") {
  privacy_policy_url: String!
  terms_of_service_url: String!
}

"Generated from type: [`com.twitter.longform.api.AccountAnalytics`](http://go/sg.thrift/AccountAnalytics)"
type RevueUserAnalytics @thrift_type(name : "AccountAnalytics", package : "com.twitter.longform.api") {
  issue_count: NumericString
  subscriber_count: NumericString
}

"Generated from type: [`com.twitter.interventions.rito.RitoSuggestedActionsFacePile`](http://go/sg.thrift/RitoSuggestedActionsFacePile)"
type RitoSuggestedActionsFacePile @thrift_type(name : "RitoSuggestedActionsFacePile", package : "com.twitter.interventions.rito") {
  count: Int!
  users: [User!] @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!]
}

"Generated from type: [`com.twitter.dataproducts.vnext.context_annotations.graphql.SCDomain`](http://go/sg.thrift/SCDomain)"
type SCDomain @thrift_type(name : "SCDomain", package : "com.twitter.dataproducts.vnext.context_annotations.graphql") {
  description: String
  name: String
  rest_id: NumericString!
}

"Generated from type: [`com.twitter.dataproducts.vnext.context_annotations.graphql.SCEntity`](http://go/sg.thrift/SCEntity)"
type SCEntity @thrift_type(name : "SCEntity", package : "com.twitter.dataproducts.vnext.context_annotations.graphql") {
  description: String
  domain: SCDomain!
  domain_id: NumericString!
  entity_id: NumericString!
  name: String
}

"Generated from type: [`com.twitter.interventions.safetymode.SafetyModeSettingsReqRes`](http://go/sg.thrift/SafetyModeSettingsReqRes)"
type SafetyModeSettingsReqRes @thrift_type(name : "SafetyModeSettingsReqRes", package : "com.twitter.interventions.safetymode") {
  expiration_timestamp_ms: NumericString
  is_safety_mode_enabled: Boolean!
  safety_mode_duration: SafetyModeDuration
}

"Generated from Strato space: `ScheduledTweet`"
type ScheduledTweet @strato_space(name : "ScheduledTweet") {
  """
  Returns the Scheduled Tweet name advertisers can give their creatives.
  
  Generated from Strato column: [graphql/customer-experience-apps/adName.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/customer-experience-apps/adName)
  """
  ad_name: String @strato_column(path : "graphql/customer-experience-apps/adName.ScheduledTweet") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "Generated from Strato column: [graphql/schedule/mediaEntities.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/mediaEntities)"
  media_entities: [ApiMedia!] @strato_column(path : "graphql/schedule/mediaEntities.ScheduledTweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/schedule/repliedTweet.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/repliedTweet)"
  replied_tweet: Tweet @deprecated(reason : "migrated to replied_tweet_results") @strato_column(path : "graphql/schedule/repliedTweet.ScheduledTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/schedule/repliedTweet.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/repliedTweet)"
  replied_tweet_result: TweetResult @deprecated(reason : "migrated to replied_tweet_results; field will always be null") @strato_column(path : "graphql/schedule/repliedTweet.ScheduledTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/schedule/repliedTweet.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/repliedTweet)"
  replied_tweet_results: TweetResults @strato_column(path : "graphql/schedule/repliedTweet.ScheduledTweet") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  "Generated from Strato column: [graphql/schedule/schedulingInfo.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/schedulingInfo)"
  scheduling_info: SchedulingInfo @strato_column(path : "graphql/schedule/schedulingInfo.ScheduledTweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/schedule/tweetCreateRequest.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/tweetCreateRequest)"
  tweet_create_request: TweetCreateRequest @strato_column(path : "graphql/schedule/tweetCreateRequest.ScheduledTweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/schedule/user.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/user)"
  user: User @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/schedule/user.ScheduledTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/schedule/user.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/user)"
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/schedule/user.ScheduledTweet") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/schedule/user.ScheduledTweet](https://strato.twitter.biz/web/browse/ScheduledTweet/graphql/schedule/user)"
  user_results: UserResults @strato_column(path : "graphql/schedule/user.ScheduledTweet") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.scheduleanddraftapi.ScheduledListResponse`](http://go/sg.thrift/ScheduledListResponse)"
type ScheduledTweetResponse @thrift_type(name : "ScheduledListResponse", package : "com.twitter.scheduleanddraftapi") {
  last_modified: Int53
  response_data: [ScheduledTweet!]
  response_status: ResponseStatus
}

"Generated from type: [`com.twitter.scheduleanddraftapi.SchedulingInfo`](http://go/sg.thrift/SchedulingInfo)"
type SchedulingInfo @thrift_type(name : "SchedulingInfo", package : "com.twitter.scheduleanddraftapi") {
  created_at: Int53
  execute_at: Int53
  state: ScheduledTweetState!
  updated_at: Int53
}

"Generated from type: [`com.twitter.timelines.render.ScoreEventSchedule`](http://go/sg.thrift/ScoreEventSchedule)"
type ScoreEventSummary @thrift_type(name : "ScoreEventSchedule", package : "com.twitter.timelines.render") {
  display_type: TimelineScoreEventCardDisplayType!
  id: String!
  score_events: [TimelineScoreEvent!]!
  title: String
}

"Generated from type: [`com.twitter.convosvc.search.SearchConversationInfo`](http://go/sg.thrift/SearchConversationInfo)"
type SearchConversationInfo @thrift_type(name : "SearchConversationInfo", package : "com.twitter.convosvc.search") {
  "Deprecated( deprecate people and group convo search in dmSearchComposite)"
  conversation_id: DMConversation! @deprecated(reason : "deprecate people and group convo search in dmSearchComposite")
  "Result field; Deprecated( deprecate people and group convo search in dmSearchComposite)"
  conversation_id_results: DMConversationResults! @deprecated(reason : "deprecate people and group convo search in dmSearchComposite")
}

"Generated from Strato space: `SearchQuery`"
type SearchQuery @strato_space(name : "SearchQuery") {
  """
  Search for AudioSpaces that match the query
  
  Generated from Strato column: [graphql/audiospace/audioSpaces.SearchQuery](https://strato.twitter.biz/web/browse/SearchQuery/graphql/audiospace/audioSpaces)
  """
  audio_spaces(filter: AudioSpacesOmnisearchFilterInput!, num_results: Int): [AudioSpace!] @strato_column(path : "graphql/audiospace/audioSpaces.SearchQuery") @strato_op(value : Fetch)
  """
  Returns audio spaces that match the search query
  
  Generated from Strato column: [graphql/audiospace/audioSpacesGroupedBySection.SearchQuery](https://strato.twitter.biz/web/browse/SearchQuery/graphql/audiospace/audioSpacesGroupedBySection)
  """
  audio_spaces_grouped_by_section(filter: AudioSpacesSearchFilterInput!, num_results: Int): AudioSpacesSearchResult @strato_column(path : "graphql/audiospace/audioSpacesGroupedBySection.SearchQuery") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  Typeahead Search Box
  
  Generated from Strato column: [graphql/search/typeahead.SearchQuery](https://strato.twitter.biz/web/browse/SearchQuery/graphql/search/typeahead)
  """
  typeahead(cursor: String, max_count: Int): TypeaheadResult @strato_column(path : "graphql/search/typeahead.SearchQuery") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.balance_service.graphql.SeedsMetadata`](http://go/sg.thrift/SeedsMetadata)"
type SeedsMetadata @thrift_type(name : "SeedsMetadata", package : "com.twitter.balance_service.graphql") {
  amount: Int!
  at_limit: Boolean!
  balance_type: AccountBalanceType!
}

"""
tab rendered in the navigation bar along with associated timeline

Generated from type: [`com.twitter.pages.render.SegmentedTimeline`](http://go/sg.thrift/SegmentedTimeline)
"""
type SegmentedTimeline @thrift_type(name : "SegmentedTimeline", package : "com.twitter.pages.render") {
  id: String!
  "localized label text (e.g. For you, 新闻, etc)"
  label_text: String!
  "determines when the timeline should poll for new results"
  refresh_interval_sec: Int53
  scribe_config: TimelineTimelineScribeConfig
  "reference to a Timeline"
  timeline: Timeline!
}

"""
segmented timeline(s) with navigation bar

Generated from type: [`com.twitter.pages.render.SegmentedTimelines`](http://go/sg.thrift/SegmentedTimelines)
"""
type SegmentedTimelines @thrift_type(name : "SegmentedTimelines", package : "com.twitter.pages.render") {
  initial_timeline: SegmentedTimeline!
  timelines: [SegmentedTimeline!]!
}

"Generated from Strato space: `SemanticCoreDomain`"
type SemanticCoreDomain @strato_space(name : "SemanticCoreDomain") {
  """
  Semantic core domain metadata description for a Public API supported tweet
  
  Generated from Strato column: [graphql/des/description.SemanticCoreDomain](https://strato.twitter.biz/web/browse/SemanticCoreDomain/graphql/des/description)
  """
  description: String @strato_column(path : "graphql/des/description.SemanticCoreDomain") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Semantic core domain metadata name for a Public API supported tweet
  
  Generated from Strato column: [graphql/des/name.SemanticCoreDomain](https://strato.twitter.biz/web/browse/SemanticCoreDomain/graphql/des/name)
  """
  name: String @strato_column(path : "graphql/des/name.SemanticCoreDomain") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from Strato space: `SemanticCoreEntity`"
type SemanticCoreEntity @strato_space(name : "SemanticCoreEntity") {
  """
  Semantic core entity description for a Public API supported tweet
  
  Generated from Strato column: [graphql/des/description.SemanticCoreEntity](https://strato.twitter.biz/web/browse/SemanticCoreEntity/graphql/des/description)
  """
  description: String @strato_column(path : "graphql/des/description.SemanticCoreEntity") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/des/domain.SemanticCoreEntity](https://strato.twitter.biz/web/browse/SemanticCoreEntity/graphql/des/domain)"
  domain: SemanticCoreDomain @strato_column(path : "graphql/des/domain.SemanticCoreEntity") @strato_op(value : Fetch)
  """
  Semantic core entity id for a Public API supported tweet
  
  Generated from Strato column: [graphql/des/entityId.SemanticCoreEntity](https://strato.twitter.biz/web/browse/SemanticCoreEntity/graphql/des/entityId)
  """
  entity_id: NumericString @strato_column(path : "graphql/des/entityId.SemanticCoreEntity") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Semantic core entity name for a Public API supported tweet
  
  Generated from Strato column: [graphql/des/name.SemanticCoreEntity](https://strato.twitter.biz/web/browse/SemanticCoreEntity/graphql/des/name)
  """
  name: String @strato_column(path : "graphql/des/name.SemanticCoreEntity") @strato_op(value : Fetch)
}

"Generated from Strato space: `SemanticCoreEvent`"
type SemanticCoreEvent @strato_space(name : "SemanticCoreEvent") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

type SendTipResult {
  invoice_id: String!
  tip_id: NumericString!
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.SensitiveMediaWarning`](http://go/sg.thrift/SensitiveMediaWarning)"
type SensitiveMediaWarning @thrift_type(name : "SensitiveMediaWarning", package : "com.twitter.mediaservices.commons.mediainformation") {
  adult_content: Boolean
  graphic_violence: Boolean
  other: Boolean
}

"Generated from type: [`com.twitter.dataproducts.search.common.ServiceUnavailableResponse`](http://go/sg.thrift/ServiceUnavailableResponse)"
type ServiceUnavailableResponse @thrift_type(name : "ServiceUnavailableResponse", package : "com.twitter.dataproducts.search.common") {
  error_message: String!
}

"Generated from type: [`com.twitter.sessions.SessionResponse`](http://go/sg.thrift/SessionResponse)"
type SessionResponse @thrift_type(name : "SessionResponse", package : "com.twitter.sessions") {
  icon_type: SessionIconType!
  is_current_session: Boolean!
  last_seen_time_ms: NumericString
  location: String
  name: String!
  summary: String!
  token: String!
}

"Generated from type: [`com.twitter.bff.SetPaymentMethodDefaultResponse`](http://go/sg.thrift/SetPaymentMethodDefaultResponse)"
type SetPaymentMethodDefaultResult @thrift_type(name : "SetPaymentMethodDefaultResponse", package : "com.twitter.bff") {
  changed: Boolean!
  reason: String
}

"Generated from Strato space: `Shop`"
type Shop @strato_space(name : "Shop") {
  """
  Returns list of CommerceItems based on Shop Module Config
  
  Generated from Strato column: [graphql/commerce/shopmodule/commerceItemsSlice.Shop](https://strato.twitter.biz/web/browse/Shop/graphql/commerce/shopmodule/commerceItemsSlice)
  """
  commerce_items_slice(cursor: String, limit: Int): CommerceItemSlice @development @strato_column(path : "graphql/commerce/shopmodule/commerceItemsSlice.Shop") @strato_op(value : Fetch)
  """
  Fetches shop data corresponding to the given config and presents it as ShopCoreData
  
  Generated from Strato column: [graphql/commerce/shopmodule/coreData.Shop](https://strato.twitter.biz/web/browse/Shop/graphql/commerce/shopmodule/coreData)
  """
  core_data: ShopCoreData @strato_column(path : "graphql/commerce/shopmodule/coreData.Shop") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: ShopId!
}

"Generated from type: [`com.twitter.commerce.shopmodule.api.graphql.ShopConfig`](http://go/sg.thrift/ShopConfig)"
type ShopConfig @thrift_type(name : "ShopConfig", package : "com.twitter.commerce.shopmodule.api.graphql") {
  enabled_for_display: Boolean!
  module_id: NumericString!
  shop_module_config: ShopModuleConfig!
}

"Generated from type: [`com.twitter.commerce.shopmodule.api.graphql.ShopCoreData`](http://go/sg.thrift/ShopCoreData)"
type ShopCoreData @thrift_type(name : "ShopCoreData", package : "com.twitter.commerce.shopmodule.api.graphql") {
  shop_description: String
  shop_name: String!
}

"Generated from type: [`com.twitter.commerce.shopmodule.api.graphql.ShopId`](http://go/sg.thrift/ShopId)"
type ShopId @thrift_type(name : "ShopId", package : "com.twitter.commerce.shopmodule.api.graphql") {
  module_id: NumericString!
  user_id: NumericString!
}

"Generated from type: [`com.twitter.commerce.shopmodule.ShopModule`](http://go/sg.thrift/ShopModule)"
type ShopModule @thrift_type(name : "ShopModule", package : "com.twitter.commerce.shopmodule") {
  data: ShopModuleData!
  display_type: ShopModuleDisplayType!
}

"Generated from type: [`com.twitter.commerce.shopmodule.ShopModuleConfig`](http://go/sg.thrift/ShopModuleConfig)"
type ShopModuleConfig @thrift_type(name : "ShopModuleConfig", package : "com.twitter.commerce.shopmodule") {
  commerce_config: CommerceConfig!
  display_type: ShopModuleDisplayType!
}

"Generated from type: [`com.twitter.commerce.shopmodule.ShopModuleData`](http://go/sg.thrift/ShopModuleData)"
type ShopModuleData @thrift_type(name : "ShopModuleData", package : "com.twitter.commerce.shopmodule") {
  items: [CommerceItem!]! @deprecated(reason : "migrated to items_results")
  items_results: [CommerceItemResults]!
}

"Generated from type: [`com.twitter.commerce.shopify.api.graphql.ShopifyMetadata`](http://go/sg.thrift/ShopifyMetadata)"
type ShopifyMetadata @thrift_type(name : "ShopifyMetadata", package : "com.twitter.commerce.shopify.api.graphql") {
  app_onboarding_complete: Boolean
  created_at: String
  shop_currency: String
  shop_domain: String!
  terms_of_service_accepted: Boolean
  updated_at: String
}

"Generated from type: [`com.twitter.signals.reactions.ReactionMetadataResponse`](http://go/sg.thrift/ReactionMetadataResponse)"
type SignalsReactionMetadataResponse @thrift_type(name : "ReactionMetadataResponse", package : "com.twitter.signals.reactions") {
  reaction_type_map: [SignalsReactionTypeMap!]
}

"Generated from type: [`com.twitter.signals.reactions.ReactionPerspectiveResponse`](http://go/sg.thrift/ReactionPerspectiveResponse)"
type SignalsReactionPerspectiveResponse @thrift_type(name : "ReactionPerspectiveResponse", package : "com.twitter.signals.reactions") {
  reaction_type: SignalsReactionType
}

type SignalsReactionTypeMap {
  key: SignalsReactionType!
  value: Int53!
}

"Generated from type: [`com.twitter.timelines.render.SkAdNetworkData`](http://go/sg.thrift/SkAdNetworkData)"
type SkAdNetworkData @thrift_type(name : "SkAdNetworkData", package : "com.twitter.timelines.render") {
  ad_network_id: String
  campaign_id: NumericString
  dst_app_id: String
  fidelity_type: Int53
  impression_time_in_millis: Int53
  nonce: String
  signature: String
  src_app_id: String
  version: String
}

"Generated from type: [`com.twitter.strato.graphql.SliceInfo`](http://go/sg.thrift/SliceInfo)"
type SliceInfo @thrift_type(name : "SliceInfo", package : "com.twitter.strato.graphql") {
  next_cursor: String
  previous_cursor: String
}

"Generated from type: [`com.twitter.strato.graphql.SocialgraphListsSlice`](http://go/sg.thrift/SocialgraphListsSlice)"
type SocialgraphListsSlice @thrift_type(name : "SocialgraphListsSlice", package : "com.twitter.strato.graphql") {
  items: [TwitterListItem]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.graphql.SocialgraphSliceParameterValidationErrorResponse`](http://go/sg.thrift/SocialgraphSliceParameterValidationErrorResponse)"
type SocialgraphSliceParameterValidationErrorResponse @thrift_type(name : "SocialgraphSliceParameterValidationErrorResponse", package : "com.twitter.strato.graphql") {
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.graphql.SocialgraphUsersSlice`](http://go/sg.thrift/SocialgraphUsersSlice)"
type SocialgraphUsersSlice @thrift_type(name : "SocialgraphUsersSlice", package : "com.twitter.strato.graphql") {
  items: [UserItem]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.graphql.SoftInterventionPivot`](http://go/sg.thrift/SoftInterventionPivot)"
type SoftInterventionPivot @thrift_type(name : "SoftInterventionPivot", package : "com.twitter.strato.graphql") {
  display_type: SoftInterventionDisplayType
  engagement_nudge: Boolean
  text: TimelineRichText!
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceFollowInvalidResult`](http://go/sg.thrift/SpaceDeviceFollowInvalidResult)"
type SpaceDeviceFollowInvalidResult @thrift_type(name : "SpaceDeviceFollowInvalidResult", package : "com.twitter.strato.columns.notifications") {
  parameter_error_response: ParameterValidationErrorResponse!
  space_device_follow_invalid_reason: SpaceDeviceFollowInvalidReason!
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceFollowSuccessResult`](http://go/sg.thrift/SpaceDeviceFollowSuccessResult)"
type SpaceDeviceFollowSuccessResult @thrift_type(name : "SpaceDeviceFollowSuccessResult", package : "com.twitter.strato.columns.notifications") {
  space_device_follow_success_reason: SpaceDeviceFollowSuccessReason!
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceUnfollowInvalidResult`](http://go/sg.thrift/SpaceDeviceUnfollowInvalidResult)"
type SpaceDeviceUnfollowInvalidResult @thrift_type(name : "SpaceDeviceUnfollowInvalidResult", package : "com.twitter.strato.columns.notifications") {
  parameter_error_response: ParameterValidationErrorResponse!
  space_device_unfollow_invalid_reason: SpaceDeviceUnfollowInvalidReason!
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceUnfollowSuccessResult`](http://go/sg.thrift/SpaceDeviceUnfollowSuccessResult)"
type SpaceDeviceUnfollowSuccessResult @thrift_type(name : "SpaceDeviceUnfollowSuccessResult", package : "com.twitter.strato.columns.notifications") {
  space_device_unfollow_success_reason: SpaceDeviceUnfollowSuccessReason!
}

"Generated from type: [`com.twitter.periscope.audio_space.SpaceSlice`](http://go/sg.thrift/SpaceSlice)"
type SpaceSlice @thrift_type(name : "SpaceSlice", package : "com.twitter.periscope.audio_space") {
  items: [AudioSpace!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.SpacesMetadata`](http://go/sg.thrift/SpacesMetadata)"
type SpacesMetadata @thrift_type(name : "SpacesMetadata", package : "com.twitter.audiencerewards.productcatalog") {
  ticket_group_id: String!
}

"Generated from type: [`com.twitter.strato.graphql.StickerImage`](http://go/sg.thrift/StickerImage)"
type StickerImage @thrift_type(name : "StickerImage", package : "com.twitter.strato.graphql") {
  height: Int!
  still_image_url: String
  url: String!
  width: Int!
}

"Generated from type: [`com.twitter.strato.graphql.StickerItem`](http://go/sg.thrift/StickerItem)"
type StickerItem @thrift_type(name : "StickerItem", package : "com.twitter.strato.graphql") {
  core: StickerCore!
  id: String!
}

"Generated from Strato space: `StickerSearchQuery`"
type StickerSearchQuery @strato_space(name : "StickerSearchQuery") {
  "A globally unique identifier"
  id: ID!
  """
  Searches for stickers in Fleets
  
  Generated from Strato column: [graphql/stickers/matchedStickerSectionsSlice.StickerSearchQuery](https://strato.twitter.biz/web/browse/StickerSearchQuery/graphql/stickers/matchedStickerSectionsSlice)
  """
  matched_sticker_sections_slice(cursor: String): MatchedStickerSectionsSlice @development @strato_column(path : "graphql/stickers/matchedStickerSectionsSlice.StickerSearchQuery") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.strato.columns.tipjar.StrikeMonetaryAmount`](http://go/sg.thrift/StrikeMonetaryAmount)"
type StrikeMonetaryAmount @thrift_type(name : "StrikeMonetaryAmount", package : "com.twitter.strato.columns.tipjar") {
  amount: String!
  currency: String!
}

"Generated from Strato space: `StrikeTip`"
type StrikeTip @strato_space(name : "StrikeTip") {
  """
  Returns metadata about strike tip
  
  Generated from Strato column: [graphql/tipjar/core.StrikeTip](https://strato.twitter.biz/web/browse/StrikeTip/graphql/tipjar/core)
  """
  core: StrikeTransfer @strato_column(path : "graphql/tipjar/core.StrikeTip") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Returns status of strike tip transfer
  
  Generated from Strato column: [graphql/tipjar/status.StrikeTip](https://strato.twitter.biz/web/browse/StrikeTip/graphql/tipjar/status)
  """
  status: StrikeTransferStatus @development @strato_column(path : "graphql/tipjar/status.StrikeTip") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.StrikeTipSlice`](http://go/sg.thrift/StrikeTipSlice)"
type StrikeTipSlice @thrift_type(name : "StrikeTipSlice", package : "com.twitter.creator_dashboard.graphql") {
  items: [StrikeTransfer!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.columns.tipjar.StrikeTransfer`](http://go/sg.thrift/StrikeTransfer)"
type StrikeTransfer @thrift_type(name : "StrikeTransfer", package : "com.twitter.strato.columns.tipjar") {
  amount_cents: Int!
  created_at: Int53!
  from_user: User! @deprecated(reason : "migrated to from_user_results")
  from_user_result: UserResult @deprecated(reason : "migrated to from_user_results; field will always be null")
  from_user_results: UserResults!
  metadata: StrikeTransferMetadata!
  "Timestamp when quick reply was sent"
  replied_at: Int53
  tipper_note: String
  to_user: User! @deprecated(reason : "migrated to to_user_results")
  to_user_result: UserResult @deprecated(reason : "migrated to to_user_results; field will always be null")
  to_user_results: UserResults!
  updated_at: Int53
}

"Generated from type: [`com.twitter.strato.columns.tipjar.StrikeTransferMetadata`](http://go/sg.thrift/StrikeTransferMetadata)"
type StrikeTransferMetadata @thrift_type(name : "StrikeTransferMetadata", package : "com.twitter.strato.columns.tipjar") {
  "Transfer description visible on third party platform"
  description: String
  expire_at: Int53!
  expiry_second: Short!
  ln_invoice: String!
  price: StrikeMonetaryAmount!
  quote_id: String!
  rate: StrikeMonetaryAmount!
  size: StrikeMonetaryAmount!
  status: StrikeTransferStatus!
}

"Generated from Strato space: `SubscriptionCheckoutSession`"
type SubscriptionCheckoutSession @strato_space(name : "SubscriptionCheckoutSession") {
  """
  Returns currencyCode for the fetched SubscriptionCheckoutSession.
  
  Generated from Strato column: [graphql/payments/currencyCode.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/currencyCode)
  """
  currency_code: WebSubscriptionsCurrencyCode @strato_column(path : "graphql/payments/currencyCode.SubscriptionCheckoutSession") @strato_op(value : Fetch)
  """
  Returns externalUserId for the fetched SubscriptionCheckoutSession.
  
  Generated from Strato column: [graphql/payments/externalUserId.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/externalUserId)
  """
  external_user_id: String @strato_column(path : "graphql/payments/externalUserId.SubscriptionCheckoutSession") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  Returns sessionStatus for the fetched SubscriptionCheckoutSession.
  
  Generated from Strato column: [graphql/payments/sessionStatus.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/sessionStatus)
  """
  session_status: SessionStatus @strato_column(path : "graphql/payments/sessionStatus.SubscriptionCheckoutSession") @strato_op(value : Fetch)
  """
  Returns sessionURL for the fetched SubscriptionCheckoutSession.
  
  Generated from Strato column: [graphql/payments/sessionURL.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/sessionURL)
  """
  session_url: String @strato_column(path : "graphql/payments/sessionURL.SubscriptionCheckoutSession") @strato_op(value : Fetch)
  """
  Returns subTotalAmountLocalMicro for the fetched SubscriptionCheckoutSession.
  
  Generated from Strato column: [graphql/payments/subtotalAmountLocalMicro.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/subtotalAmountLocalMicro)
  """
  subtotal_amount_local_micro: Int53 @strato_column(path : "graphql/payments/subtotalAmountLocalMicro.SubscriptionCheckoutSession") @strato_op(value : Fetch)
  """
  Returns totalAmountLocalMicro for the fetched SubscriptionCheckoutSession.
  
  Generated from Strato column: [graphql/payments/totalAmountLocalMicro.SubscriptionCheckoutSession](https://strato.twitter.biz/web/browse/SubscriptionCheckoutSession/graphql/payments/totalAmountLocalMicro)
  """
  total_amount_local_micro: Int53 @deprecated(reason : "Use subtotalAmountLocalMicro.SubscriptionCheckoutSession.strato") @strato_column(path : "graphql/payments/totalAmountLocalMicro.SubscriptionCheckoutSession") @strato_op(value : Fetch)
}

"Generated from Strato space: `SubscriptionProduct`"
type SubscriptionProduct @strato_space(name : "SubscriptionProduct") {
  """
  Returns description for the fetched SubscriptionProduct.
  
  Generated from Strato column: [graphql/subscription-services/description.SubscriptionProduct](https://strato.twitter.biz/web/browse/SubscriptionProduct/graphql/subscription-services/description)
  """
  description: String @strato_column(path : "graphql/subscription-services/description.SubscriptionProduct") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Returns market for the fetched SubscriptionProduct.
  
  Generated from Strato column: [graphql/subscription-services/market.SubscriptionProduct](https://strato.twitter.biz/web/browse/SubscriptionProduct/graphql/subscription-services/market)
  """
  market: Market @strato_column(path : "graphql/subscription-services/market.SubscriptionProduct") @strato_op(value : Fetch)
  """
  Returns resources for the fetched SubscriptionProduct.
  
  Generated from Strato column: [graphql/subscription-services/resources.SubscriptionProduct](https://strato.twitter.biz/web/browse/SubscriptionProduct/graphql/subscription-services/resources)
  """
  resources: [SubscriptionProductResource!] @strato_column(path : "graphql/subscription-services/resources.SubscriptionProduct") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  Returns title for the fetched SubscriptionProduct.
  
  Generated from Strato column: [graphql/subscription-services/title.SubscriptionProduct](https://strato.twitter.biz/web/browse/SubscriptionProduct/graphql/subscription-services/title)
  """
  title: String @strato_column(path : "graphql/subscription-services/title.SubscriptionProduct") @strato_op(value : Fetch)
}

"Generated from Strato space: `SubscriptionProductFeature`"
type SubscriptionProductFeature @strato_space(name : "SubscriptionProductFeature") {
  """
  Fetch config for a SubscriptionProductFeature by ID.
  
  Generated from Strato column: [graphql/subscription-product-features/config.SubscriptionProductFeature](https://strato.twitter.biz/web/browse/SubscriptionProductFeature/graphql/subscription-product-features/config)
  """
  config: SubscriptionProductFeatureConfig @strato_column(path : "graphql/subscription-product-features/config.SubscriptionProductFeature") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  Feature Settings query column
  
  Generated from Strato column: [graphql/subscription-product-features/undoTweetFeatureSettings.SubscriptionProductFeature](https://strato.twitter.biz/web/browse/SubscriptionProductFeature/graphql/subscription-product-features/undoTweetFeatureSettings)
  """
  undo_tweet_feature_settings: UndoTweetSettings @development @strato_column(path : "graphql/subscription-product-features/undoTweetFeatureSettings.SubscriptionProductFeature") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.subscription_product_features.SubscriptionProductFeatureConfig`](http://go/sg.thrift/SubscriptionProductFeatureConfig)"
type SubscriptionProductFeatureConfig @thrift_type(name : "SubscriptionProductFeatureConfig", package : "com.twitter.subscription_product_features") {
  claims: [String!]
  deeplink: String
  feature_id: String! @development
  feature_switches: [String!]
  icon: String
  icon_alt_text: String
  is_labs_feature: Boolean
  summary: String
  title: String
  weblink: String
}

"Generated from type: [`com.twitter.subscriptioncommon.ProductResource`](http://go/sg.thrift/ProductResource)"
type SubscriptionProductResource @thrift_type(name : "ProductResource", package : "com.twitter.subscriptioncommon") {
  access: String
  id: String! @development
  path: String!
  resource_type: String
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.SubscriptionsMetadata`](http://go/sg.thrift/SubscriptionsMetadata)"
type SubscriptionsMetadata @thrift_type(name : "SubscriptionsMetadata", package : "com.twitter.audiencerewards.productcatalog") {
  parent_product: SubscriptionProduct
  subscription_group_id: String @development
}

type SuperFollowsPriceOfferings {
  offer1: String!
  offer2: String!
  offer3: String!
}

type SuperFollowsSelectedPrice {
  selected_price: String!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.SuperLikesMetadata`](http://go/sg.thrift/SuperLikesMetadata)"
type SuperLikesMetadata @thrift_type(name : "SuperLikesMetadata", package : "com.twitter.audiencerewards.productcatalog") {
  assets: [SuperLikesProductAsset!]
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.SubscriptionEvent`](http://go/sg.thrift/SubscriptionEvent)"
type SuperfollowsSubscriptionPurchase @thrift_type(name : "SubscriptionEvent", package : "com.twitter.creator_dashboard.graphql") {
  consumer: User! @deprecated(reason : "migrated to consumer_results")
  consumer_result: UserResult @deprecated(reason : "migrated to consumer_results; field will always be null")
  consumer_results: UserResults!
  created_at_msec: Int53!
  parent_subscription_product_id: String!
  payment_platform: SuperfollowsPaymentPlatform!
}

"Generated from type: [`com.twitter.creator_dashboard.graphql.SubscriptionSlice`](http://go/sg.thrift/SubscriptionSlice)"
type SuperfollowsSubscriptionSlice @thrift_type(name : "SubscriptionSlice", package : "com.twitter.creator_dashboard.graphql") {
  items: [SuperfollowsSubscriptionPurchase!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.SwitchToNonProfessionalResponse`](http://go/sg.thrift/SwitchToNonProfessionalResponse)"
type SwitchToNonProfessionalResponse @thrift_type(name : "SwitchToNonProfessionalResponse", package : "com.twitter.bizprofiles.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.targetingcatalog.Metadata`](http://go/sg.thrift/Metadata)"
type TargetingCatalogMetadata @thrift_type(name : "Metadata", package : "com.twitter.targetingcatalog") {
  country_code: String
  created_at: Int53
  location_type: LocationType
  major_version: Short
  minor_version: Short
  os_type: Int
  updated_at: Int53
}

"Generated from type: [`com.twitter.targetingcatalog.StratoTargetingCriterion`](http://go/sg.thrift/StratoTargetingCriterion)"
type TargetingCriterion @thrift_type(name : "StratoTargetingCriterion", package : "com.twitter.targetingcatalog") {
  api_targeting_type: String
  api_targeting_value: String
  audience_size: Int53
  label: String
  metadata: TargetingCatalogMetadata
  properties: [TargetingCriterionProperty!]!
  rich_label: String
  targeting_id: NumericString!
  targeting_type: TargetingType!
  targeting_type_label: String
  user: User @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults
}

"Generated from Strato space: `Team`"
type Team @strato_space(name : "Team") {
  """
  The contributor members of the team
  
  Generated from Strato column: [graphql/collaborate/contributors.Team](https://strato.twitter.biz/web/browse/Team/graphql/collaborate/contributors)
  """
  contributors: [Contributor!] @development @strato_column(path : "graphql/collaborate/contributors.Team") @strato_op(value : Fetch)
  """
  The accounts on whose behalf this team is allowed to act
  
  Generated from Strato column: [graphql/collaborate/delegatedAccounts.Team](https://strato.twitter.biz/web/browse/Team/graphql/collaborate/delegatedAccounts)
  """
  delegated_accounts: [DelegatedAccount!] @development @strato_column(path : "graphql/collaborate/delegatedAccounts.Team") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  The name of the team
  
  Generated from Strato column: [graphql/collaborate/name.Team](https://strato.twitter.biz/web/browse/Team/graphql/collaborate/name)
  """
  name: String @development @strato_column(path : "graphql/collaborate/name.Team") @strato_op(value : Fetch)
  """
  The organisation to which this team belongs
  
  Generated from Strato column: [graphql/collaborate/organization.Team](https://strato.twitter.biz/web/browse/Team/graphql/collaborate/organization)
  """
  organization: Organization @development @strato_column(path : "graphql/collaborate/organization.Team") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.strato.graphql.TeamsRelationship`](http://go/sg.thrift/TeamsRelationship)"
type TeamsRelationship @thrift_type(name : "TeamsRelationship", package : "com.twitter.strato.graphql") {
  access_level: TeamsAccessLevel!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.strato.graphql.TeamsRelationships`](http://go/sg.thrift/TeamsRelationships)"
type TeamsRelationships @thrift_type(name : "TeamsRelationships", package : "com.twitter.strato.graphql") {
  act_as: [TeamsRelationship!]
  contributors: [TeamsRelationship!]
}

"Generated from type: [`com.twitter.strato.graphql.TextTombstone`](http://go/sg.thrift/TextTombstone)"
type TextTombstone @thrift_type(name : "TextTombstone", package : "com.twitter.strato.graphql") {
  text: TimelineRichText!
}

"""
A Date, stored as a UTC timestamp; if both fields are set, the posixDate field is the source of truth.

Generated from type: [`com.twitter.bff.ThriftDate`](http://go/sg.thrift/ThriftDate)
"""
type ThriftDate @thrift_type(name : "ThriftDate", package : "com.twitter.bff") {
  "A string of the format YYYY-MM-DD or similar, representing a date."
  formatted_date: String
  "milliseconds since the epoch"
  posix_date: NumericString!
}

"Generated from Strato space: `Timeline`"
type Timeline @strato_space(name : "Timeline") {
  """
  Serves the home timeline
  
  Generated from Strato column: [graphql/timelines/homeTimelineUrt.Timeline](https://strato.twitter.biz/web/browse/Timeline/graphql/timelines/homeTimelineUrt)
  """
  home_timeline_urt(autoplay_enabled: Boolean, cards_platform: String, context: String, count: Int53, cursor: String, display_size: DisplaySizeInput, latest_control_available: Boolean, request_context: String, seen_tweet_ids: [NumericString!]): TimelineTimeline @strato_column(path : "graphql/timelines/homeTimelineUrt.Timeline") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Serves a timeline, caching any global objects in subquery cached format
  
  Generated from Strato column: [graphql/timeline.Timeline](https://strato.twitter.biz/web/browse/Timeline/graphql/timeline)
  """
  timeline(autoplay_enabled: Boolean, cards_platform: String, context: String, count: Int53, cursor: String): TimelineTimeline @strato_column(path : "graphql/timeline.Timeline") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.timelines.render.AdMetadataContainer`](http://go/sg.thrift/AdMetadataContainer)"
type TimelineAdMetadataContainer @thrift_type(name : "AdMetadataContainer", package : "com.twitter.timelines.render") {
  disclaimer_type: TimelineDisclaimerType
  preroll: TimelinePreroll
  remove_promoted_attribution_for_preroll: Boolean
  sk_ad_network_data: SkAdNetworkData
  sk_ad_network_data_list: [SkAdNetworkData!]
  sponsorship_candidate: String
  sponsorship_organization: String
  sponsorship_organization_website: String
  sponsorship_type: TimelineSponsorshipType
  unified_card_override: String
  video_analytics_scribe_passthrough: String
}

"Generated from type: [`com.twitter.timelines.render.AddEntries`](http://go/sg.thrift/AddEntries)"
type TimelineAddEntries @thrift_type(name : "AddEntries", package : "com.twitter.timelines.render") {
  entries: [TimelineTimelineEntry]!
}

"Generated from type: [`com.twitter.timelines.render.AddToModule`](http://go/sg.thrift/AddToModule)"
type TimelineAddToModule @thrift_type(name : "AddToModule", package : "com.twitter.timelines.render") {
  module_entry_id: String!
  module_item_entry_id: String
  module_items: [TimelineModuleItem]!
  prepend: Boolean
}

"Generated from type: [`com.twitter.timelines.render.AddToThread`](http://go/sg.thrift/AddToThread)"
type TimelineAddToThread @thrift_type(name : "AddToThread", package : "com.twitter.timelines.render") {
  conversation_thread: TimelineTimelineEntry!
  thread_entry_id: String!
}

"Generated from type: [`com.twitter.timelines.render.AdsMetadata`](http://go/sg.thrift/AdsMetadata)"
type TimelineAdsMetadata @thrift_type(name : "AdsMetadata", package : "com.twitter.timelines.render") {
  carousel_id: NumericString
}

"""
A timeline item representing an article.

Generated from type: [`com.twitter.timelines.render.Article`](http://go/sg.thrift/Article)
"""
type TimelineArticle @thrift_type(name : "Article", package : "com.twitter.timelines.render") {
  article: Article!
  display_type: TimelineArticleDisplayType
  social_context: TimelineSocialContext
}

"Generated from type: [`com.twitter.timelines.render.ArticleDetails`](http://go/sg.thrift/ArticleDetails)"
type TimelineArticleDetails @thrift_type(name : "ArticleDetails", package : "com.twitter.timelines.render") {
  article_position: Int!
  share_count: Int!
}

"""
A timeline item representing an AudioSpace.

Generated from type: [`com.twitter.timelines.render.AudioSpace`](http://go/sg.thrift/AudioSpace)
"""
type TimelineAudioSpace @thrift_type(name : "AudioSpace", package : "com.twitter.timelines.render") {
  audio_space: AudioSpace!
}

"Generated from type: [`com.twitter.timelines.render.Badge`](http://go/sg.thrift/Badge)"
type TimelineBadge @thrift_type(name : "Badge", package : "com.twitter.timelines.render") {
  background_color_name: TimelineRosettaColor
  text: String
  text_color_name: TimelineRosettaColor
}

"Generated from type: [`com.twitter.timelines.render.BroadcastId`](http://go/sg.thrift/BroadcastId)"
type TimelineBroadcastId @thrift_type(name : "BroadcastId", package : "com.twitter.timelines.render") {
  id: String!
}

"Generated from type: [`com.twitter.timelines.render.CallToAction`](http://go/sg.thrift/CallToAction)"
type TimelineCallToAction @thrift_type(name : "CallToAction", package : "com.twitter.timelines.render") {
  call_to_action_type: String
  type: String
  url: String
}

"Generated from type: [`com.twitter.timelines.render.Callback`](http://go/sg.thrift/Callback)"
type TimelineCallback @thrift_type(name : "Callback", package : "com.twitter.timelines.render") {
  endpoint: String!
}

"Generated from type: [`com.twitter.timelines.render.CampaignMetadata`](http://go/sg.thrift/CampaignMetadata)"
type TimelineCampaignMetadata @thrift_type(name : "CampaignMetadata", package : "com.twitter.timelines.render") {
  budget_spent: Float
  engagement_count: Int53
  finished_at: String
  impression_count: Int53
  started_at: String
  state: TimelineCampaignState
}

"Generated from type: [`com.twitter.timelines.render.Card`](http://go/sg.thrift/Card)"
type TimelineCard @thrift_type(name : "Card", package : "com.twitter.timelines.render") {
  card: Card!
  card_display_type: TimelineCardDisplayType
  subtext: String
  text: String
  url: TimelineUrl
}

"Generated from type: [`com.twitter.timelines.render.ClearCache`](http://go/sg.thrift/ClearCache)"
type TimelineClearCache @thrift_type(name : "ClearCache", package : "com.twitter.timelines.render") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.timelines.render.ClearEntriesUnreadState`](http://go/sg.thrift/ClearEntriesUnreadState)"
type TimelineClearEntriesUnreadState @thrift_type(name : "ClearEntriesUnreadState", package : "com.twitter.timelines.render") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.timelines.render.ClientEventDetails`](http://go/sg.thrift/ClientEventDetails)"
type TimelineClientEventDetails @thrift_type(name : "ClientEventDetails", package : "com.twitter.timelines.render") {
  article_details: TimelineArticleDetails
  conversation_details: TimelineConversationDetails
  guide_details: TimelineGuideDetails
  live_event_details: TimelineLiveEventDetails
  moments_details: TimelineMomentsDetails
  news_details: TimelineNewsDetails
  notification_details: TimelineNotificationDetails
  periscope_details: TimelinePeriscopeDetails
  search_request_details: TimelineSearchRequestDetails
  search_result_details: TimelineSearchResultDetails
  timelines_details: TimelineTimelinesDetails
  topic_details: TimelineTopicDetails
  trends_details: TimelineTrendsDetails
}

"Generated from type: [`com.twitter.timelines.render.ClientEventInfo`](http://go/sg.thrift/ClientEventInfo)"
type TimelineClientEventInfo @thrift_type(name : "ClientEventInfo", package : "com.twitter.timelines.render") {
  action: String
  component: String
  details: TimelineClientEventDetails
  element: String
  entity_token: String
}

"Generated from type: [`com.twitter.timelines.render.Color`](http://go/sg.thrift/Color)"
type TimelineColor @thrift_type(name : "Color", package : "com.twitter.timelines.render") {
  blue: Short!
  green: Short!
  opacity: Short
  red: Short!
}

"Generated from type: [`com.twitter.timelines.render.ColorPaletteItem`](http://go/sg.thrift/ColorPaletteItem)"
type TimelineColorPaletteItem @thrift_type(name : "ColorPaletteItem", package : "com.twitter.timelines.render") {
  percentage: Float!
  rgb: TimelineColor!
}

"""
A timeline item representing a Community. See http://go/communities-mvp for details.

Generated from type: [`com.twitter.timelines.render.Community`](http://go/sg.thrift/Community)
"""
type TimelineCommunity @thrift_type(name : "Community", package : "com.twitter.timelines.render") {
  community: Community!
}

"""
A timeline item representing a community with user context.

Generated from type: [`com.twitter.timelines.render.CommunityUserRelationship`](http://go/sg.thrift/CommunityUserRelationship)
"""
type TimelineCommunityUserRelationship @thrift_type(name : "CommunityUserRelationship", package : "com.twitter.timelines.render") {
  relationship: UserCommunityRelationship!
}

"Generated from type: [`com.twitter.timelines.render.CompactPrompt`](http://go/sg.thrift/CompactPrompt)"
type TimelineCompactPrompt @thrift_type(name : "CompactPrompt", package : "com.twitter.timelines.render") {
  action: TimelineMessageAction
  "clients should prefer this field over ‘bodyText’ if both are sent"
  body_rich_text: TimelineRichText
  body_text: String
  "clients should prefer this field over ‘headerText’ if both are sent"
  header_rich_text: TimelineRichText
  header_text: String!
  primary_button_action: TimelineMessageTextAction
  secondary_button_action: TimelineMessageTextAction
}

"Generated from type: [`com.twitter.timelines.render.ContextScribeInfo`](http://go/sg.thrift/ContextScribeInfo)"
type TimelineContextScribeInfo @thrift_type(name : "ContextScribeInfo", package : "com.twitter.timelines.render") {
  is_last_position: Boolean
  position: String
}

"Generated from type: [`com.twitter.timelines.render.ConversationAnnotation`](http://go/sg.thrift/ConversationAnnotation)"
type TimelineConversationAnnotation @thrift_type(name : "ConversationAnnotation", package : "com.twitter.timelines.render") {
  conversation_annotation_type: TimelineConversationType!
  description: TimelineRichText
  header: TimelineRichText
}

"Generated from type: [`com.twitter.timelines.render.ConversationDetails`](http://go/sg.thrift/ConversationDetails)"
type TimelineConversationDetails @thrift_type(name : "ConversationDetails", package : "com.twitter.timelines.render") {
  conversation_section: TimelineConversationSection
}

"Generated from type: [`com.twitter.timelines.render.ConversationThread`](http://go/sg.thrift/ConversationThread)"
type TimelineConversationThread @thrift_type(name : "ConversationThread", package : "com.twitter.timelines.render") {
  conversation_components: [TimelineConversationComponent!]!
  show_more_cursor: TimelineTimelineCursor
}

"Generated from type: [`com.twitter.timelines.render.ConversationTweetComponent`](http://go/sg.thrift/ConversationTweetComponent)"
type TimelineConversationTweetComponent @thrift_type(name : "ConversationTweetComponent", package : "com.twitter.timelines.render") {
  tweet: TimelineTweet
}

"Generated from type: [`com.twitter.timelines.render.CoverBehaviorDismiss`](http://go/sg.thrift/CoverBehaviorDismiss)"
type TimelineCoverBehaviorDismiss @thrift_type(name : "CoverBehaviorDismiss", package : "com.twitter.timelines.render") {
  feedback_message: TimelineRichText
}

"Generated from type: [`com.twitter.timelines.render.CoverBehaviorNavigate`](http://go/sg.thrift/CoverBehaviorNavigate)"
type TimelineCoverBehaviorNavigate @thrift_type(name : "CoverBehaviorNavigate", package : "com.twitter.timelines.render") {
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.CoverCta`](http://go/sg.thrift/CoverCta)"
type TimelineCoverCta @thrift_type(name : "CoverCta", package : "com.twitter.timelines.render") {
  button_style: TimelineButtonStyle
  callbacks: [TimelineCallback!]
  client_event_info: TimelineClientEventInfo
  cta_behavior: TimelineCoverCtaBehavior!
  icon: TimelineHorizonIcon
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.CoverImage`](http://go/sg.thrift/CoverImage)"
type TimelineCoverImage @thrift_type(name : "CoverImage", package : "com.twitter.timelines.render") {
  image: TimelineImageVariant!
  image_animation_type: TimelineImageAnimationType
  image_display_type: TimelineImageDisplayType!
}

"Generated from type: [`com.twitter.timelines.render.CursorAvatarInfo`](http://go/sg.thrift/CursorAvatarInfo)"
type TimelineCursorAvatarInfo @thrift_type(name : "CursorAvatarInfo", package : "com.twitter.timelines.render") {
  avatar_display_type: TimelineCursorAvatarDisplayType
  avatar_z_order: TimelineCursorAvatarZOrder
  users: [User!] @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!]
}

"Generated from type: [`com.twitter.timelines.render.CursorDisplayTreatment`](http://go/sg.thrift/CursorDisplayTreatment)"
type TimelineCursorDisplayTreatment @thrift_type(name : "CursorDisplayTreatment", package : "com.twitter.timelines.render") {
  action_text: String
  avatar_info: TimelineCursorAvatarInfo
  label_text: String
}

"Generated from type: [`com.twitter.timelines.render.CursorInfo`](http://go/sg.thrift/CursorInfo)"
type TimelineCursorInfo @thrift_type(name : "CursorInfo", package : "com.twitter.timelines.render") {
  autoload_on_min_distance_below_timeline_viewport: Float
  disable_autoload_until_auto_jump_to_top: Boolean
  disable_autoload_until_manual_jump_to_top: Boolean
  remove_older_content_on_auto_jump_to_top: Boolean
  remove_older_content_on_manual_jump_to_top: Boolean
}

"Generated from type: [`com.twitter.timelines.render.DismissInfo`](http://go/sg.thrift/DismissInfo)"
type TimelineDismissInfo @thrift_type(name : "DismissInfo", package : "com.twitter.timelines.render") {
  callbacks: [TimelineCallback!]
}

"Generated from type: [`com.twitter.timelines.render.DraftTweetMetadata`](http://go/sg.thrift/DraftTweetMetadata)"
type TimelineDraftTweetMetadata @thrift_type(name : "DraftTweetMetadata", package : "com.twitter.timelines.render") {
  draft_tweet: DraftTweet!
}

"Generated from type: [`com.twitter.timelines.render.EntityFollowPrompt`](http://go/sg.thrift/EntityFollowPrompt)"
type TimelineEntityFollowPrompt @thrift_type(name : "EntityFollowPrompt", package : "com.twitter.timelines.render") {
  currently_followed: Boolean!
  description: String
  display_type: TimelineEntityFollowPromptDisplayType!
  educate_on_follow: Boolean
  entity_name: String!
  follow_callback: TimelineCallback!
  title: String
  unfollow_callback: TimelineCallback!
}

"Generated from type: [`com.twitter.timelines.render.EventSummary`](http://go/sg.thrift/EventSummary)"
type TimelineEventSummary @thrift_type(name : "EventSummary", package : "com.twitter.timelines.render") {
  badge: TimelineBadge
  display_type: TimelineEventSummaryDisplayType!
  event: SemanticCoreEvent!
  grouped_trends: [TimelineGroupedTrend!]
  image: TimelineImageVariant
  media: TimelineMedia
  promoted_metadata: TimelinePromotedMetadata
  publisher: User @deprecated(reason : "migrated to publisher_results")
  publisher_result: UserResult @deprecated(reason : "migrated to publisher_results; field will always be null")
  publisher_results: UserResults
  rich_context: TimelineRichText
  score_event: TimelineScoreEvent
  social_context: TimelineSocialContext
  supporting_text: String
  time_string: String
  title: String!
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.EventUrtMetadata`](http://go/sg.thrift/EventUrtMetadata)"
type TimelineEventUrtMetadata @thrift_type(name : "EventUrtMetadata", package : "com.twitter.timelines.render") {
  category_module: String
  event_id: NumericString
  impression_id: String
  is_hero: Boolean
  position: Short
  source_id: String
  source_name: String
}

"Generated from type: [`com.twitter.timelines.render.ExperimentTileContentDigestCard`](http://go/sg.thrift/ExperimentTileContentDigestCard)"
type TimelineExperimentTileContentDigestCard @thrift_type(name : "ExperimentTileContentDigestCard", package : "com.twitter.timelines.render") {
  badge: TimelineBadge
  context: String
  description: String
  title: String!
  users: [User!] @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!]
}

"Generated from type: [`com.twitter.timelines.render.FeedbackAction`](http://go/sg.thrift/FeedbackAction)"
type TimelineFeedbackAction @thrift_type(name : "FeedbackAction", package : "com.twitter.timelines.render") {
  child_keys: [String!]
  client_event_info: TimelineClientEventInfo
  confirmation: String
  confirmation_display_type: TimelineConfirmationDisplayType
  encoded_feedback_request: String
  feedback_type: TimelineFeedbackType!
  feedback_url: String
  has_undo_action: Boolean
  icon: TimelineHorizonIcon
  prompt: String
  rich_behavior: TimelineRichFeedbackBehavior
  subprompt: String
}

"Generated from type: [`com.twitter.timelines.render.FeedbackDisplayContext`](http://go/sg.thrift/FeedbackDisplayContext)"
type TimelineFeedbackDisplayContext @thrift_type(name : "FeedbackDisplayContext", package : "com.twitter.timelines.render") {
  reason: String!
}

"Generated from type: [`com.twitter.timelines.render.FeedbackInfo`](http://go/sg.thrift/FeedbackInfo)"
type TimelineFeedbackInfo @thrift_type(name : "FeedbackInfo", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  display_context: TimelineFeedbackDisplayContext
  feedback_keys: [String!]!
  feedback_metadata: String
}

"Generated from type: [`com.twitter.timelines.render.FillerTweetMetadata`](http://go/sg.thrift/FillerTweetMetadata)"
type TimelineFillerTweetMetadata @thrift_type(name : "FillerTweetMetadata", package : "com.twitter.timelines.render") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.timelines.render.FollowPrompt`](http://go/sg.thrift/FollowPrompt)"
type TimelineFollowPrompt @thrift_type(name : "FollowPrompt", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  feedback_info: TimelineFeedbackInfo
  header: String!
  show_rule: TimelineFollowPromptShowRule!
  subtitle: String
}

"Generated from type: [`com.twitter.timelines.render.FollowSearch`](http://go/sg.thrift/FollowSearch)"
type TimelineFollowSearch @thrift_type(name : "FollowSearch", package : "com.twitter.timelines.render") {
  display_query: String
  follow_start_timestamp_ms: Int53
  follow_types: [TimelineFollowType!]
  normalized_query: String!
}

"Generated from type: [`com.twitter.timelines.render.FollowSearchAction`](http://go/sg.thrift/FollowSearchAction)"
type TimelineFollowSearchAction @thrift_type(name : "FollowSearchAction", package : "com.twitter.timelines.render") {
  display_query: String!
  display_type: TimelineFollowSearchActionDisplayType!
  is_followed: Boolean
  main_text: String!
  secondary_text: String
}

"Generated from type: [`com.twitter.timelines.render.ForwardPivot`](http://go/sg.thrift/ForwardPivot)"
type TimelineForwardPivot @thrift_type(name : "ForwardPivot", package : "com.twitter.timelines.render") {
  background_color_name: TimelineRosettaColor
  display_type: TimelineForwardPivotDisplayType!
  engagement_nudge: Boolean
  icon_image_variant: TimelineImageVariant
  landing_url: TimelineUrl!
  soft_intervention_display_type: TimelineSoftInterventionDisplayType
  "Deprecated( use TimelineSoftInterventionDisplayType)"
  soft_intervention_type: TimelineSoftInterventionType @deprecated(reason : "use TimelineSoftInterventionDisplayType")
  state_badge: TimelineBadge
  subtext: TimelineRichText
  text: TimelineRichText!
}

"Generated from type: [`com.twitter.timelines.render.FullCover`](http://go/sg.thrift/FullCover)"
type TimelineFullCover @thrift_type(name : "FullCover", package : "com.twitter.timelines.render") {
  details: TimelineRichText
  dismiss_info: TimelineDismissInfo
  display_type: TimelineFullCoverDisplayType!
  image: TimelineImageVariant
  image_display_type: TimelineImageDisplayType
  impression_callbacks: [TimelineCallback!]
  primary_cover_cta: TimelineCoverCta!
  primary_text: TimelineRichText!
  secondary_cover_cta: TimelineCoverCta
  secondary_text: TimelineRichText
}

"Generated from type: [`com.twitter.timelines.render.GeneralContext`](http://go/sg.thrift/GeneralContext)"
type TimelineGeneralContext @thrift_type(name : "GeneralContext", package : "com.twitter.timelines.render") {
  context_image_urls: [String!]
  context_type: TimelineContextType!
  landing_url: TimelineUrl
  text: String!
  "Deprecated( as of 5/16/2017. Please use landing_url instead)"
  url: String @deprecated(reason : "as of 5/16/2017. Please use landing_url instead")
}

"Generated from type: [`com.twitter.timelines.render.GraphQLRemoteTimelineReaction`](http://go/sg.thrift/GraphQLRemoteTimelineReaction)"
type TimelineGraphQLRemoteTimelineReaction @thrift_type(name : "GraphQLRemoteTimelineReaction", package : "com.twitter.timelines.render") {
  timeline_with_context: TimelineWithContext!
  timeout_in_seconds: Short
}

"Generated from type: [`com.twitter.timelines.render.GridCarouselMetadata`](http://go/sg.thrift/GridCarouselMetadata)"
type TimelineGridCarouselMetadata @thrift_type(name : "GridCarouselMetadata", package : "com.twitter.timelines.render") {
  num_rows: Int
}

"Generated from type: [`com.twitter.timelines.render.GroupedTrend`](http://go/sg.thrift/GroupedTrend)"
type TimelineGroupedTrend @thrift_type(name : "GroupedTrend", package : "com.twitter.timelines.render") {
  "the grouped trend name, e.g. '#MondayMotivation'"
  name: String!
  "click tap-through target when clicking on trend for grouped trend"
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.GuideDetails`](http://go/sg.thrift/GuideDetails)"
type TimelineGuideDetails @thrift_type(name : "GuideDetails", package : "com.twitter.timelines.render") {
  identifier: String!
  token: String
  transparent_guide_details: TimelineTransparentGuideDetails
}

"Generated from type: [`com.twitter.timelines.render.HalfCover`](http://go/sg.thrift/HalfCover)"
type TimelineHalfCover @thrift_type(name : "HalfCover", package : "com.twitter.timelines.render") {
  cover_image: TimelineCoverImage
  dismiss_info: TimelineDismissInfo
  dismissible: Boolean
  display_type: TimelineHalfCoverDisplayType!
  "Deprecated( use coverImage instead)"
  image: TimelineCoverImage @deprecated(reason : "use coverImage instead")
  impression_callbacks: [TimelineCallback!]
  primary_cover_cta: TimelineCoverCta!
  primary_text: TimelineRichText!
  secondary_cover_cta: TimelineCoverCta
  secondary_text: TimelineRichText
}

"Generated from type: [`com.twitter.timelines.render.HeaderImagePrompt`](http://go/sg.thrift/HeaderImagePrompt)"
type TimelineHeaderImagePrompt @thrift_type(name : "HeaderImagePrompt", package : "com.twitter.timelines.render") {
  action: TimelineMessageAction
  body_rich_text: TimelineRichText
  body_text: String
  header_image: TimelineMessageImage!
  header_rich_text: TimelineRichText
  header_text: String
  primary_button_action: TimelineMessageTextAction
  secondary_button_action: TimelineMessageTextAction
}

"Generated from type: [`com.twitter.timelines.render.HighlightedSection`](http://go/sg.thrift/HighlightedSection)"
type TimelineHighlightedSection @thrift_type(name : "HighlightedSection", package : "com.twitter.timelines.render") {
  end_index: Int!
  start_index: Int!
}

"Generated from type: [`com.twitter.timelines.render.HomeConversation`](http://go/sg.thrift/HomeConversation)"
type TimelineHomeConversation @thrift_type(name : "HomeConversation", package : "com.twitter.timelines.render") {
  all_tweets: [Tweet!]! @deprecated(reason : "migrated to all_tweets_results")
  all_tweets_result: [TweetResult] @deprecated(reason : "migrated to all_tweets_results; field will always be null")
  all_tweets_results: [TweetResults!]!
  display_tweets: [TimelineTweet!]!
  num_more_replies: Int
  social_context: TimelineSocialContext
}

"Generated from type: [`com.twitter.timelines.render.IconCtaButton`](http://go/sg.thrift/IconCtaButton)"
type TimelineIconCtaButton @thrift_type(name : "IconCtaButton", package : "com.twitter.timelines.render") {
  accessibility_label: String!
  button_icon: TimelineHorizonIcon!
  url: TimelineUrl!
}

"""
A timeline item representing a generic string with an optional icon.

Generated from type: [`com.twitter.timelines.render.IconLabel`](http://go/sg.thrift/IconLabel)
"""
type TimelineIconLabel @thrift_type(name : "IconLabel", package : "com.twitter.timelines.render") {
  icon: TimelineHorizonIcon
  text: TimelineRichText!
}

"Generated from type: [`com.twitter.timelines.render.ImageVariant`](http://go/sg.thrift/ImageVariant)"
type TimelineImageVariant @thrift_type(name : "ImageVariant", package : "com.twitter.timelines.render") {
  height: Int!
  palette: [TimelineColorPaletteItem!]
  url: String!
  width: Int!
}

"Generated from type: [`com.twitter.timelines.render.ImmediateTimelineReaction`](http://go/sg.thrift/ImmediateTimelineReaction)"
type TimelineImmediateTimelineReaction @thrift_type(name : "ImmediateTimelineReaction", package : "com.twitter.timelines.render") {
  key: String!
}

"Generated from type: [`com.twitter.timelines.render.InlinePrompt`](http://go/sg.thrift/InlinePrompt)"
type TimelineInlinePrompt @thrift_type(name : "InlinePrompt", package : "com.twitter.timelines.render") {
  body_rich_text: TimelineRichText
  body_text: String
  header_rich_text: TimelineRichText
  header_text: String!
  primary_button_action: TimelineMessageTextAction
  secondary_button_action: TimelineMessageTextAction
  social_context: TimelineSocialContext
  user_facepile: TimelineUserFacepile
}

"Generated from type: [`com.twitter.timelines.render.Label`](http://go/sg.thrift/Label)"
type TimelineLabel @thrift_type(name : "Label", package : "com.twitter.timelines.render") {
  disclosure_indicator: Boolean
  display_type: TimelineLabelDisplayType
  subtext: String
  text: String!
  url: TimelineUrl
}

"Generated from type: [`com.twitter.timelines.render.LargePrompt`](http://go/sg.thrift/LargePrompt)"
type TimelineLargePrompt @thrift_type(name : "LargePrompt", package : "com.twitter.timelines.render") {
  header_text: String!
  primary_button_action: TimelineMessageTextAction
}

"Generated from type: [`com.twitter.timelines.render.LiveEventDetails`](http://go/sg.thrift/LiveEventDetails)"
type TimelineLiveEventDetails @thrift_type(name : "LiveEventDetails", package : "com.twitter.timelines.render") {
  event_id: NumericString
}

"Generated from type: [`com.twitter.timelines.render.MarkEntriesUnread`](http://go/sg.thrift/MarkEntriesUnread)"
type TimelineMarkEntriesUnread @thrift_type(name : "MarkEntriesUnread", package : "com.twitter.timelines.render") {
  entry_ids: [String!]!
}

"Generated from type: [`com.twitter.timelines.render.MarkEntriesUnreadGreaterThanSortIndex`](http://go/sg.thrift/MarkEntriesUnreadGreaterThanSortIndex)"
type TimelineMarkEntriesUnreadGreaterThanSortIndex @thrift_type(name : "MarkEntriesUnreadGreaterThanSortIndex", package : "com.twitter.timelines.render") {
  sort_index: NumericString!
}

"Generated from type: [`com.twitter.timelines.render.Media`](http://go/sg.thrift/Media)"
type TimelineMedia @thrift_type(name : "Media", package : "com.twitter.timelines.render") {
  image_possible_cropping: [TimelineRect!]
  media_entity: TimelineMediaEntity
  media_key: TimelineMediaKey
}

"Generated from type: [`com.twitter.timelines.render.MediaInfo`](http://go/sg.thrift/MediaInfo)"
type TimelineMediaInfo @thrift_type(name : "MediaInfo", package : "com.twitter.timelines.render") {
  advertiser_name: String
  advertiser_profile_image_url: String
  call_to_action: TimelineCallToAction
  duration_millis: Int
  publisher: User @deprecated(reason : "migrated to publisher_results")
  publisher_result: UserResult @deprecated(reason : "migrated to publisher_results; field will always be null")
  publisher_results: UserResults
  render_ad_by_advertiser_name: Boolean
  uuid: String
  video_variants: [TimelineVideoVariant!]
}

"Generated from type: [`com.twitter.timelines.render.MediaKey`](http://go/sg.thrift/MediaKey)"
type TimelineMediaKey @thrift_type(name : "MediaKey", package : "com.twitter.timelines.render") {
  category: Int!
  id: NumericString!
}

"Generated from type: [`com.twitter.timelines.render.MessageAction`](http://go/sg.thrift/MessageAction)"
type TimelineMessageAction @thrift_type(name : "MessageAction", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  dismiss_on_click: Boolean!
  on_click_callbacks: [TimelineCallback!]
  on_click_reactive_trigger: TimelineTimelineReaction
  url: String
}

"Generated from type: [`com.twitter.timelines.render.MessageImage`](http://go/sg.thrift/MessageImage)"
type TimelineMessageImage @thrift_type(name : "MessageImage", package : "com.twitter.timelines.render") {
  background_color: String
  image_variants: [TimelineImageVariant!]!
}

"Generated from type: [`com.twitter.timelines.render.MessagePrompt`](http://go/sg.thrift/MessagePrompt)"
type TimelineMessagePrompt @thrift_type(name : "MessagePrompt", package : "com.twitter.timelines.render") {
  content: TimelineMessageContent!
  impression_callbacks: [TimelineCallback!]
}

"Generated from type: [`com.twitter.timelines.render.MessageTextAction`](http://go/sg.thrift/MessageTextAction)"
type TimelineMessageTextAction @thrift_type(name : "MessageTextAction", package : "com.twitter.timelines.render") {
  action: TimelineMessageAction!
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.ModuleConversationMetadata`](http://go/sg.thrift/ModuleConversationMetadata)"
type TimelineModuleConversationMetadata @thrift_type(name : "ModuleConversationMetadata", package : "com.twitter.timelines.render") {
  all_tweet_ids: [NumericString!]
  enable_deduplication: Boolean
  social_context: TimelineSocialContext
}

"Generated from type: [`com.twitter.timelines.render.ModuleFooter`](http://go/sg.thrift/ModuleFooter)"
type TimelineModuleFooter @thrift_type(name : "ModuleFooter", package : "com.twitter.timelines.render") {
  dismiss_after_interaction: Boolean
  display_type: TimelineModuleFooterDisplayType!
  landing_url: TimelineUrl
  text: String!
  url: String
}

"Generated from type: [`com.twitter.timelines.render.ModuleHeader`](http://go/sg.thrift/ModuleHeader)"
type TimelineModuleHeader @thrift_type(name : "ModuleHeader", package : "com.twitter.timelines.render") {
  button: TimelineUrlButton
  context: TimelineModuleHeaderContext
  custom_icon: TimelineImageVariant
  display_type: TimelineModuleHeaderDisplayType!
  icon: TimelineHorizonIcon
  landing_url: TimelineUrl
  social_context: TimelineSocialContext
  sticky: Boolean
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.ModuleHeaderAvatar`](http://go/sg.thrift/ModuleHeaderAvatar)"
type TimelineModuleHeaderAvatar @thrift_type(name : "ModuleHeaderAvatar", package : "com.twitter.timelines.render") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.ModuleHeaderContext`](http://go/sg.thrift/ModuleHeaderContext)"
type TimelineModuleHeaderContext @thrift_type(name : "ModuleHeaderContext", package : "com.twitter.timelines.render") {
  avatars: [TimelineModuleHeaderAvatar!]
}

"Generated from type: [`com.twitter.timelines.render.ModuleItem`](http://go/sg.thrift/ModuleItem)"
type TimelineModuleItem @thrift_type(name : "ModuleItem", package : "com.twitter.timelines.render") {
  dispensable: Boolean
  entry_id: String!
  item: TimelineTimelineItem!
  tree_display: TimelineModuleItemTreeDisplay
}

"Generated from type: [`com.twitter.timelines.render.ModuleItemTreeDisplay`](http://go/sg.thrift/ModuleItemTreeDisplay)"
type TimelineModuleItemTreeDisplay @thrift_type(name : "ModuleItemTreeDisplay", package : "com.twitter.timelines.render") {
  display_type: TimelineModuleDisplayType
  indent_from_parent: Boolean
  is_anchor_child: Boolean
  parent_module_item_entry_id: String
}

"Generated from type: [`com.twitter.timelines.render.ModuleMetadata`](http://go/sg.thrift/ModuleMetadata)"
type TimelineModuleMetadata @thrift_type(name : "ModuleMetadata", package : "com.twitter.timelines.render") {
  ads_metadata: TimelineAdsMetadata
  conversation_metadata: TimelineModuleConversationMetadata
  grid_carousel_metadata: TimelineGridCarouselMetadata
}

"Generated from type: [`com.twitter.timelines.render.ModuleShowMoreBehaviorRevealByCount`](http://go/sg.thrift/ModuleShowMoreBehaviorRevealByCount)"
type TimelineModuleShowMoreBehaviorRevealByCount @thrift_type(name : "ModuleShowMoreBehaviorRevealByCount", package : "com.twitter.timelines.render") {
  "Number of items that should be visible when module is rendered initially"
  initial_items_count: Int!
  "Number of items to add each time the user asks for more items via footer"
  show_more_items_count: Int!
}

"Generated from type: [`com.twitter.timelines.render.Moment`](http://go/sg.thrift/Moment)"
type TimelineMoment @thrift_type(name : "Moment", package : "com.twitter.timelines.render") {
  display_type: TimelineMomentDisplayType
  impression_id: NumericString!
  moment: Moment!
  social_context: TimelineSocialContext
}

"Generated from type: [`com.twitter.timelines.render.MomentAnnotation`](http://go/sg.thrift/MomentAnnotation)"
type TimelineMomentAnnotation @thrift_type(name : "MomentAnnotation", package : "com.twitter.timelines.render") {
  annotation_id: NumericString!
  header: TimelineRichText
  text: TimelineRichText
}

"Generated from type: [`com.twitter.timelines.render.MomentCapsuleFooter`](http://go/sg.thrift/MomentCapsuleFooter)"
type TimelineMomentCapsuleFooter @thrift_type(name : "MomentCapsuleFooter", package : "com.twitter.timelines.render") {
  moment: Moment!
}

"Generated from type: [`com.twitter.timelines.render.MomentCapsuleHeader`](http://go/sg.thrift/MomentCapsuleHeader)"
type TimelineMomentCapsuleHeader @thrift_type(name : "MomentCapsuleHeader", package : "com.twitter.timelines.render") {
  moment: Moment!
}

"Generated from type: [`com.twitter.timelines.render.MomentCard`](http://go/sg.thrift/MomentCard)"
type TimelineMomentCard @thrift_type(name : "MomentCard", package : "com.twitter.timelines.render") {
  card_type: TimelineMomentCardType!
  moment: Moment!
}

"Generated from type: [`com.twitter.timelines.render.MomentsDetails`](http://go/sg.thrift/MomentsDetails)"
type TimelineMomentsDetails @thrift_type(name : "MomentsDetails", package : "com.twitter.timelines.render") {
  context_scribe_info: TimelineContextScribeInfo
  guide_category_id: String
  impression_id: String
  moment_id: NumericString!
  pivot_from_moment_id: NumericString
}

"Generated from type: [`com.twitter.timelines.render.Navigation`](http://go/sg.thrift/Navigation)"
type TimelineNavigation @thrift_type(name : "Navigation", package : "com.twitter.timelines.render") {
  get_newer: Boolean
  start_at_top: Boolean
}

"Generated from type: [`com.twitter.timelines.render.News`](http://go/sg.thrift/News)"
type TimelineNews @thrift_type(name : "News", package : "com.twitter.timelines.render") {
  author: String
  description: String
  "Deprecated( use original_image instead)"
  image_url: String @deprecated(reason : "use original_image instead")
  landing_url: TimelineUrl!
  news_display_type: TimelineNewsDisplayType!
  original_image: TimelineImageVariant
  pivot_text: String
  social_proof: TimelineSocialContext
  title: String!
}

"Generated from type: [`com.twitter.timelines.render.NewsDetails`](http://go/sg.thrift/NewsDetails)"
type TimelineNewsDetails @thrift_type(name : "NewsDetails", package : "com.twitter.timelines.render") {
  candidate_source: String
  url_id: Int
}

"Generated from type: [`com.twitter.timelines.render.NewsModuleMetadata`](http://go/sg.thrift/NewsModuleMetadata)"
type TimelineNewsModuleMetadata @thrift_type(name : "NewsModuleMetadata", package : "com.twitter.timelines.render") {
  domain: String!
  title: String!
  url: String!
}

"Generated from type: [`com.twitter.timelines.render.Notification`](http://go/sg.thrift/Notification)"
type TimelineNotification @thrift_type(name : "Notification", package : "com.twitter.timelines.render") {
  id: String!
  social_context: TimelineSocialContext
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.NotificationDetails`](http://go/sg.thrift/NotificationDetails)"
type TimelineNotificationDetails @thrift_type(name : "NotificationDetails", package : "com.twitter.timelines.render") {
  impression_id: String!
  metadata: String!
}

"Generated from type: [`com.twitter.timelines.render.OnboardingLikesStartPrompt`](http://go/sg.thrift/OnboardingLikesStartPrompt)"
type TimelineOnboardingLikesStartPrompt @thrift_type(name : "OnboardingLikesStartPrompt", package : "com.twitter.timelines.render") {
  body_rich_text: TimelineRichText
  "Deprecated( use bodyRichText instead)"
  body_text: TimelineRichText @deprecated(reason : "use bodyRichText instead")
  header_icon_url: String
  header_rich_text: TimelineRichText
  "Deprecated( use headerRichText instead)"
  header_text: TimelineRichText @deprecated(reason : "use headerRichText instead")
  likes_needed_to_complete_onboarding: Int!
}

"Generated from type: [`com.twitter.timelines.render.PagedCarouselFeedbackItem`](http://go/sg.thrift/PagedCarouselFeedbackItem)"
type TimelinePagedCarouselFeedbackItem @thrift_type(name : "PagedCarouselFeedbackItem", package : "com.twitter.timelines.render") {
  content: TimelinePagedCarouselFeedbackItemContent!
  reactive_triggers: TimelinePagedCarouselFeedbackItemReactiveTriggers
  show_less_callback: TimelineCallback!
  show_less_text: String!
  show_more_callback: TimelineCallback!
  show_more_text: String!
}

"""
Reactive triggers on a pagedCarouselFeedbackItem that mutates the timeline based on the instruction.

Generated from type: [`com.twitter.timelines.render.PagedCarouselFeedbackItemReactiveTriggers`](http://go/sg.thrift/PagedCarouselFeedbackItemReactiveTriggers)
"""
type TimelinePagedCarouselFeedbackItemReactiveTriggers @thrift_type(name : "PagedCarouselFeedbackItemReactiveTriggers", package : "com.twitter.timelines.render") {
  on_show_more: TimelineTimelineReaction
}

"Generated from type: [`com.twitter.timelines.render.PagedCarouselItem`](http://go/sg.thrift/PagedCarouselItem)"
type TimelinePagedCarouselItem @thrift_type(name : "PagedCarouselItem", package : "com.twitter.timelines.render") {
  content: TimelinePagedCarouselItemContent!
}

"Generated from type: [`com.twitter.timelines.render.DeprecatedPagedCarouselItemgedCarouselFeedbackItem`](http://go/sg.thrift/DeprecatedPagedCarouselItemgedCarouselFeedbackItem)"
type TimelinePagedCarouselItemgedCarouselFeedbackItem @thrift_type(name : "DeprecatedPagedCarouselItemgedCarouselFeedbackItem", package : "com.twitter.timelines.render") {
  content: TimelinePagedCarouselFeedbackItemContent!
  reactive_triggers: TimelinePagedCarouselFeedbackItemReactiveTriggers
  show_less_callback: TimelineCallback!
  show_less_text: String!
  show_more_callback: TimelineCallback!
  show_more_text: String!
}

"Generated from type: [`com.twitter.timelines.render.PeriscopeDetails`](http://go/sg.thrift/PeriscopeDetails)"
type TimelinePeriscopeDetails @thrift_type(name : "PeriscopeDetails", package : "com.twitter.timelines.render") {
  broadcast_id: String
}

"Generated from type: [`com.twitter.timelines.render.PinEntry`](http://go/sg.thrift/PinEntry)"
type TimelinePinEntry @thrift_type(name : "PinEntry", package : "com.twitter.timelines.render") {
  entry: TimelineTimelineEntry!
}

"Generated from type: [`com.twitter.timelines.render.Pivot`](http://go/sg.thrift/Pivot)"
type TimelinePivot @thrift_type(name : "Pivot", package : "com.twitter.timelines.render") {
  badge: TimelineBadge
  category_text: String
  detail_text: String
  display_type: TimelinePivotDisplayType!
  image: TimelineImageVariant
  title_text: String!
  url: String!
}

"Generated from type: [`com.twitter.timelines.render.Place`](http://go/sg.thrift/Place)"
type TimelinePlace @thrift_type(name : "Place", package : "com.twitter.timelines.render") {
  place: Place!
}

"Generated from type: [`com.twitter.timelines.render.Preroll`](http://go/sg.thrift/Preroll)"
type TimelinePreroll @thrift_type(name : "Preroll", package : "com.twitter.timelines.render") {
  dynamic_preroll_type: TimelineDynamicPrerollType
  media_info: TimelineMediaInfo
  preroll_id: String
}

"Generated from type: [`com.twitter.timelines.render.PrerollMetadata`](http://go/sg.thrift/PrerollMetadata)"
type TimelinePrerollMetadata @thrift_type(name : "PrerollMetadata", package : "com.twitter.timelines.render") {
  preroll: TimelinePreroll
  "Deprecated( redundant with PromotedMetadata)"
  promoted_content: TimelinePromotedContent @deprecated(reason : "redundant with PromotedMetadata")
  video_analytics_scribe_passthrough: String
}

"Generated from type: [`com.twitter.timelines.render.PromotedContent`](http://go/sg.thrift/PromotedContent)"
type TimelinePromotedContent @thrift_type(name : "PromotedContent", package : "com.twitter.timelines.render") {
  disclosure_type: String!
  impression_id: String!
}

"Generated from type: [`com.twitter.timelines.render.PromotedMetadata`](http://go/sg.thrift/PromotedMetadata)"
type TimelinePromotedMetadata @thrift_type(name : "PromotedMetadata", package : "com.twitter.timelines.render") {
  ad_metadata_container: TimelineAdMetadataContainer
  advertiser: User! @deprecated(reason : "migrated to advertiser_results")
  advertiser_result: UserResult @deprecated(reason : "migrated to advertiser_results; field will always be null")
  advertiser_results: UserResults!
  click_tracking_info: ClickTrackingInfo
  disclosure_type: TimelineDisclosureType
  experiment_values: [ExperimentValuesEntry!]
  impression_id: String
  "Hexadecimal representation of impressionId"
  impression_string: String
  promoted_trend: Trend
  promoted_trend_description: String
  promoted_trend_name: String
  promoted_trend_query_term: String
}

"Generated from type: [`com.twitter.timelines.render.Prompt`](http://go/sg.thrift/Prompt)"
type TimelinePrompt @thrift_type(name : "Prompt", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  content: TimelinePromptContent!
  impression_callbacks: [TimelineCallback!]
}

"Generated from type: [`com.twitter.timelines.render.QuotePivot`](http://go/sg.thrift/QuotePivot)"
type TimelineQuotePivot @thrift_type(name : "QuotePivot", package : "com.twitter.timelines.render") {
  display_text: TimelineRichText!
}

"Generated from type: [`com.twitter.timelines.render.ReaderModeConfig`](http://go/sg.thrift/ReaderModeConfig)"
type TimelineReaderModeConfig @thrift_type(name : "ReaderModeConfig", package : "com.twitter.timelines.render") {
  is_reader_mode_available: Boolean!
  landing_url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.Rect`](http://go/sg.thrift/Rect)"
type TimelineRect @thrift_type(name : "Rect", package : "com.twitter.timelines.render") {
  height: Int!
  left: Int!
  top: Int!
  width: Int!
}

"Generated from type: [`com.twitter.timelines.render.RelatedSearch`](http://go/sg.thrift/RelatedSearch)"
type TimelineRelatedSearch @thrift_type(name : "RelatedSearch", package : "com.twitter.timelines.render") {
  related_search: TimelineTextResult!
}

"Generated from type: [`com.twitter.timelines.render.RelatedSearches`](http://go/sg.thrift/RelatedSearches)"
type TimelineRelatedSearches @thrift_type(name : "RelatedSearches", package : "com.twitter.timelines.render") {
  related_searches: [TimelineTextResult!]!
}

"Generated from type: [`com.twitter.timelines.render.RelevancePrompt`](http://go/sg.thrift/RelevancePrompt)"
type TimelineRelevancePrompt @thrift_type(name : "RelevancePrompt", package : "com.twitter.timelines.render") {
  confirmation: String!
  display_type: RelevancePromptDisplayType!
  is_relevant_callback: TimelineCallback!
  is_relevant_follow_up: TimelineRelevancePromptFollowUpFeedbackType
  is_relevant_text: String!
  not_relevant_callback: TimelineCallback!
  not_relevant_follow_up: TimelineRelevancePromptFollowUpFeedbackType
  not_relevant_text: String!
  reactive_triggers: TimelineRelevancePromptReactiveTriggers
  title: String!
}

"Generated from type: [`com.twitter.timelines.render.RelevancePromptFollowUpTextInput`](http://go/sg.thrift/RelevancePromptFollowUpTextInput)"
type TimelineRelevancePromptFollowUpFeedbackText @thrift_type(name : "RelevancePromptFollowUpTextInput", package : "com.twitter.timelines.render") {
  context: String!
  send_text_callback: TimelineCallback!
  text_field_placeholder: String!
}

"""
Reactive triggers on a relevancePrompt that mutates the timeline based on the instruction.

Generated from type: [`com.twitter.timelines.render.RelevancePromptReactiveTriggers`](http://go/sg.thrift/RelevancePromptReactiveTriggers)
"""
type TimelineRelevancePromptReactiveTriggers @thrift_type(name : "RelevancePromptReactiveTriggers", package : "com.twitter.timelines.render") {
  on_is_relevant: TimelineTimelineReaction
  on_not_relevant: TimelineTimelineReaction
}

"Generated from type: [`com.twitter.timelines.render.RemoteTimelineReaction`](http://go/sg.thrift/RemoteTimelineReaction)"
type TimelineRemoteTimelineReaction @thrift_type(name : "RemoteTimelineReaction", package : "com.twitter.timelines.render") {
  request_params: [RequestParamsEntry!]!
  timeout_in_seconds: Short
}

"Generated from type: [`com.twitter.timelines.render.RemoveEntries`](http://go/sg.thrift/RemoveEntries)"
type TimelineRemoveEntries @thrift_type(name : "RemoveEntries", package : "com.twitter.timelines.render") {
  entry_ids: [String!]!
}

"Generated from type: [`com.twitter.timelines.render.ReplaceEntry`](http://go/sg.thrift/ReplaceEntry)"
type TimelineReplaceEntry @thrift_type(name : "ReplaceEntry", package : "com.twitter.timelines.render") {
  entry: TimelineTimelineEntry!
  entry_id_to_replace: String!
}

"Generated from type: [`com.twitter.timelines.render.ResponseObjects`](http://go/sg.thrift/ResponseObjects)"
type TimelineResponseObjects @thrift_type(name : "ResponseObjects", package : "com.twitter.timelines.render") {
  feedback_actions: [FeedbackActionsEntry]
  immediate_reactions: [ImmediateReactionsEntry]
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorBlockUser`](http://go/sg.thrift/RichFeedbackBehaviorBlockUser)"
type TimelineRichFeedbackBehaviorBlockUser @thrift_type(name : "RichFeedbackBehaviorBlockUser", package : "com.twitter.timelines.render") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorMarkNotInterestedTopic`](http://go/sg.thrift/RichFeedbackBehaviorMarkNotInterestedTopic)"
type TimelineRichFeedbackBehaviorMarkNotInterestedTopic @thrift_type(name : "RichFeedbackBehaviorMarkNotInterestedTopic", package : "com.twitter.timelines.render") {
  topic: Topic!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorReportList`](http://go/sg.thrift/RichFeedbackBehaviorReportList)"
type TimelineRichFeedbackBehaviorReportList @thrift_type(name : "RichFeedbackBehaviorReportList", package : "com.twitter.timelines.render") {
  list: List!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorReportTweet`](http://go/sg.thrift/RichFeedbackBehaviorReportTweet)"
type TimelineRichFeedbackBehaviorReportTweet @thrift_type(name : "RichFeedbackBehaviorReportTweet", package : "com.twitter.timelines.render") {
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorToggleFollowTopic`](http://go/sg.thrift/RichFeedbackBehaviorToggleFollowTopic)"
type TimelineRichFeedbackBehaviorToggleFollowTopic @thrift_type(name : "RichFeedbackBehaviorToggleFollowTopic", package : "com.twitter.timelines.render") {
  topic: Topic!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorToggleFollowTopicV2`](http://go/sg.thrift/RichFeedbackBehaviorToggleFollowTopicV2)"
type TimelineRichFeedbackBehaviorToggleFollowTopicV2 @thrift_type(name : "RichFeedbackBehaviorToggleFollowTopicV2", package : "com.twitter.timelines.render") {
  topic: Topic!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorToggleFollowUser`](http://go/sg.thrift/RichFeedbackBehaviorToggleFollowUser)"
type TimelineRichFeedbackBehaviorToggleFollowUser @thrift_type(name : "RichFeedbackBehaviorToggleFollowUser", package : "com.twitter.timelines.render") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorToggleMuteList`](http://go/sg.thrift/RichFeedbackBehaviorToggleMuteList)"
type TimelineRichFeedbackBehaviorToggleMuteList @thrift_type(name : "RichFeedbackBehaviorToggleMuteList", package : "com.twitter.timelines.render") {
  list: List!
}

"Generated from type: [`com.twitter.timelines.render.RichFeedbackBehaviorToggleMuteUser`](http://go/sg.thrift/RichFeedbackBehaviorToggleMuteUser)"
type TimelineRichFeedbackBehaviorToggleMuteUser @thrift_type(name : "RichFeedbackBehaviorToggleMuteUser", package : "com.twitter.timelines.render") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.RichText`](http://go/sg.thrift/RichText)"
type TimelineRichText @thrift_type(name : "RichText", package : "com.twitter.timelines.render") {
  alignment: TimelineRichTextAlignment
  entities: [TimelineRichTextEntity!]!
  rtl: Boolean
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.RichTextCashtag`](http://go/sg.thrift/RichTextCashtag)"
type TimelineRichTextCashtag @thrift_type(name : "RichTextCashtag", package : "com.twitter.timelines.render") {
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.RichTextEntity`](http://go/sg.thrift/RichTextEntity)"
type TimelineRichTextEntity @thrift_type(name : "RichTextEntity", package : "com.twitter.timelines.render") {
  format: TimelineRichTextFormat
  from_index: Int!
  ref: TimelineReferenceObject
  to_index: Int!
}

"Generated from type: [`com.twitter.timelines.render.RichTextHashtag`](http://go/sg.thrift/RichTextHashtag)"
type TimelineRichTextHashtag @thrift_type(name : "RichTextHashtag", package : "com.twitter.timelines.render") {
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.RichTextList`](http://go/sg.thrift/RichTextList)"
type TimelineRichTextList @thrift_type(name : "RichTextList", package : "com.twitter.timelines.render") {
  id: NumericString!
  url: String!
}

"Generated from type: [`com.twitter.timelines.render.RichTextMention`](http://go/sg.thrift/RichTextMention)"
type TimelineRichTextMention @thrift_type(name : "RichTextMention", package : "com.twitter.timelines.render") {
  screen_name: String!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.RichTextUser`](http://go/sg.thrift/RichTextUser)"
type TimelineRichTextUser @thrift_type(name : "RichTextUser", package : "com.twitter.timelines.render") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.RtbImageAd`](http://go/sg.thrift/RtbImageAd)"
type TimelineRtbImageAd @thrift_type(name : "RtbImageAd", package : "com.twitter.timelines.render") {
  creative_id: String
  image: TimelineImageVariant
  landing_url: TimelineUrl!
  promoted_metadata: TimelinePromotedMetadata!
  text: String
  title: String!
  vanity_url: String
}

"Generated from type: [`com.twitter.timelines.render.RtbVideoAd`](http://go/sg.thrift/RtbVideoAd)"
type TimelineRtbVideoAd @thrift_type(name : "RtbVideoAd", package : "com.twitter.timelines.render") {
  creative_id: String
  landing_url: TimelineUrl!
  promoted_metadata: TimelinePromotedMetadata!
  text: String
  title: String!
  vanity_url: String
  vast_url: String
}

"Generated from type: [`com.twitter.timelines.render.ScoreEvent`](http://go/sg.thrift/ScoreEvent)"
type TimelineScoreEvent @thrift_type(name : "ScoreEvent", package : "com.twitter.timelines.render") {
  category: String
  event_state: TimelineEventState
  game_clock: String
  game_clock_period: String
  game_state: String
  id: String!
  participants: [TimelineScoreEventParticipant!]
  score_format: String
  start_time_millis: Int53
  summary: String
  url: TimelineUrl
  winner_id: String
}

"Generated from type: [`com.twitter.timelines.render.ScoreEventSummary`](http://go/sg.thrift/ScoreEventSummary)"
type TimelineScoreEventCard @thrift_type(name : "ScoreEventSummary", package : "com.twitter.timelines.render") {
  display_type: TimelineScoreEventCardDisplayType!
  score_event: TimelineScoreEvent!
}

"Generated from type: [`com.twitter.timelines.render.ScoreEventParticipant`](http://go/sg.thrift/ScoreEventParticipant)"
type TimelineScoreEventParticipant @thrift_type(name : "ScoreEventParticipant", package : "com.twitter.timelines.render") {
  affiliation: String
  color: TimelineColor
  full_name: String
  id: String!
  "Deprecated( use logo field. See http://go/scoreeventsummaryurt)"
  image_url: String @deprecated(reason : "use logo field. See http://go/scoreeventsummaryurt")
  logo: TimelineImageVariant
  participant_type: String
  period_scores: [TimelineScoreEventPeriodScore!]
  score: String
  secondary_score: String
  short_name: String
  "Deprecated( See http://go/scoreeventsummaryurt)"
  status: String @deprecated(reason : "See http://go/scoreeventsummaryurt")
  twitter_user_id: NumericString
}

"Generated from type: [`com.twitter.timelines.render.ScoreEventPeriodScore`](http://go/sg.thrift/ScoreEventPeriodScore)"
type TimelineScoreEventPeriodScore @thrift_type(name : "ScoreEventPeriodScore", package : "com.twitter.timelines.render") {
  period_name: String!
  score: String
}

"Generated from type: [`com.twitter.timelines.render.ScribeEvents`](http://go/sg.thrift/ScribeEvents)"
type TimelineScribeEvents @thrift_type(name : "ScribeEvents", package : "com.twitter.timelines.render") {
  client_events_to_scribe: [TimelineClientEventInfo!]!
}

"Generated from type: [`com.twitter.timelines.render.SearchRequestDetails`](http://go/sg.thrift/SearchRequestDetails)"
type TimelineSearchRequestDetails @thrift_type(name : "SearchRequestDetails", package : "com.twitter.timelines.render") {
  location_filter: String
  query_source: String
  raw_query: String
  result_filter: String
  rewritten_query: String
  serialized_query: String
  social_filter: String
  vertical: String
}

"Generated from type: [`com.twitter.timelines.render.SearchResultDetails`](http://go/sg.thrift/SearchResultDetails)"
type TimelineSearchResultDetails @thrift_type(name : "SearchResultDetails", package : "com.twitter.timelines.render") {
  cluster_source: String
  injected: Boolean
  result_placement_type: String
}

"Generated from type: [`com.twitter.timelines.render.SemanticCoreInterest`](http://go/sg.thrift/SemanticCoreInterest)"
type TimelineSemanticCoreInterest @thrift_type(name : "SemanticCoreInterest", package : "com.twitter.timelines.render") {
  domain_id: String!
  entity_id: String!
}

"Generated from type: [`com.twitter.timelines.render.ShowAlert`](http://go/sg.thrift/ShowAlert)"
type TimelineShowAlert @thrift_type(name : "ShowAlert", package : "com.twitter.timelines.render") {
  alert_type: TimelineAlertType!
  client_event_info: TimelineClientEventInfo
  collapse_delay_ms: Int
  color_config: TimelineShowAlertColorConfiguration!
  display_duration_ms: Int
  display_location: TimelineShowAlertDisplayLocation!
  icon_display_info: TimelineShowAlertIconDisplayInfo
  navigation_metadata: TimelineShowAlertNavigationMetadata
  rich_text: TimelineRichText
  "Deprecated( use richText)"
  text: String @deprecated(reason : "use richText")
  trigger_delay_ms: Int
  users: [User!] @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!]
}

"Generated from type: [`com.twitter.timelines.render.ShowAlertColorConfiguration`](http://go/sg.thrift/ShowAlertColorConfiguration)"
type TimelineShowAlertColorConfiguration @thrift_type(name : "ShowAlertColorConfiguration", package : "com.twitter.timelines.render") {
  background: TimelineRosettaColor!
  border: TimelineRosettaColor
  text: TimelineRosettaColor!
}

"Generated from type: [`com.twitter.timelines.render.ShowAlertIconDisplayInfo`](http://go/sg.thrift/ShowAlertIconDisplayInfo)"
type TimelineShowAlertIconDisplayInfo @thrift_type(name : "ShowAlertIconDisplayInfo", package : "com.twitter.timelines.render") {
  icon: TimelineShowAlertIcon!
  tint: TimelineRosettaColor!
}

"Generated from type: [`com.twitter.timelines.render.ShowAlertNavigationMetadata`](http://go/sg.thrift/ShowAlertNavigationMetadata)"
type TimelineShowAlertNavigationMetadata @thrift_type(name : "ShowAlertNavigationMetadata", package : "com.twitter.timelines.render") {
  navigate_to_entry_id: String
}

"Generated from type: [`com.twitter.timelines.render.ShowCover`](http://go/sg.thrift/ShowCover)"
type TimelineShowCover @thrift_type(name : "ShowCover", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  cover: TimelineCover!
}

"Generated from type: [`com.twitter.timelines.render.SimClusterInterest`](http://go/sg.thrift/SimClusterInterest)"
type TimelineSimClusterInterest @thrift_type(name : "SimClusterInterest", package : "com.twitter.timelines.render") {
  sim_cluster_id: String!
}

"Generated from type: [`com.twitter.timelines.render.Spelling`](http://go/sg.thrift/Spelling)"
type TimelineSpelling @thrift_type(name : "Spelling", package : "com.twitter.timelines.render") {
  original_query: String
  spelling_action: TimelineSpellingActionType
  spelling_result: TimelineTextResult!
}

"Generated from type: [`com.twitter.timelines.render.TerminateTimeline`](http://go/sg.thrift/TerminateTimeline)"
type TimelineTerminateTimeline @thrift_type(name : "TerminateTimeline", package : "com.twitter.timelines.render") {
  direction: TimelineTimelineTerminationDirection!
}

"Generated from type: [`com.twitter.timelines.render.TextCtaButton`](http://go/sg.thrift/TextCtaButton)"
type TimelineTextCtaButton @thrift_type(name : "TextCtaButton", package : "com.twitter.timelines.render") {
  button_text: String!
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.TextResult`](http://go/sg.thrift/TextResult)"
type TimelineTextResult @thrift_type(name : "TextResult", package : "com.twitter.timelines.render") {
  hit_highlights: [TimelineHighlightedSection!]
  query_source: String
  score: Float
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.ThreadHeaderItem`](http://go/sg.thrift/ThreadHeaderItem)"
type TimelineThreadHeaderItem @thrift_type(name : "ThreadHeaderItem", package : "com.twitter.timelines.render") {
  content: TimelineThreadHeaderContent!
}

"""
An item in the timeline that's a preview - the url pivots user into a full experience. Example: live event(s) or digest cards to be pinned to the top of the timeline

Generated from type: [`com.twitter.timelines.render.Tile`](http://go/sg.thrift/Tile)
"""
type TimelineTile @thrift_type(name : "Tile", package : "com.twitter.timelines.render") {
  "Deprecated( 2018-02-12 - use TimelineTile.content instead)"
  badge: TimelineBadge @deprecated(reason : "2018-02-12 - use TimelineTile.content instead")
  content: TimelineTileContent!
  "Image for the event (e.g. Foghorn Leghorn in a tuxedo)"
  image: TimelineImageVariant
  "Deprecated( 2018-02-12 - use TimelineTile.content instead)"
  supporting_text: String! @deprecated(reason : "2018-02-12 - use TimelineTile.content instead")
  "Deprecated( 2018-02-12 - use TimelineTile.content instead)"
  title: String! @deprecated(reason : "2018-02-12 - use TimelineTile.content instead")
  "Destination URL for the tile's action"
  url: TimelineUrl
}

"Generated from type: [`com.twitter.timelines.render.TileContentBroadcast`](http://go/sg.thrift/TileContentBroadcast)"
type TimelineTileContentBroadcast @thrift_type(name : "TileContentBroadcast", package : "com.twitter.timelines.render") {
  badge: TimelineBadge
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.TileContentCallToAction`](http://go/sg.thrift/TileContentCallToAction)"
type TimelineTileContentCallToAction @thrift_type(name : "TileContentCallToAction", package : "com.twitter.timelines.render") {
  cta_button: TimelineCtaButton
  rich_text: TimelineRichText
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.TileContentScoreCard`](http://go/sg.thrift/TileContentScoreCard)"
type TimelineTileContentScoreCard @thrift_type(name : "TileContentScoreCard", package : "com.twitter.timelines.render") {
  score_event_summary: TimelineScoreEventCard!
}

"Generated from type: [`com.twitter.timelines.render.TileContentStandard`](http://go/sg.thrift/TileContentStandard)"
type TimelineTileContentStandard @thrift_type(name : "TileContentStandard", package : "com.twitter.timelines.render") {
  badge: TimelineBadge
  "Deprecated( 2018-08-09 - No alterative fields exist)"
  supporting_text: String! @deprecated(reason : "2018-08-09 - No alterative fields exist")
  "Primary text (e.g. 'The Hatchelor')"
  title: String!
}

"Generated from type: [`com.twitter.timelines.render.Timeline`](http://go/sg.thrift/Timeline)"
type TimelineTimeline @thrift_type(name : "Timeline", package : "com.twitter.timelines.render") {
  "Deprecated( no longer processed by clients, still required for compatibility with older URT clients)"
  id: String! @deprecated(reason : "no longer processed by clients, still required for compatibility with older URT clients")
  instructions: [TimelineTimelineInstruction]!
  metadata: TimelineTimelineMetadata
  response_objects: TimelineResponseObjects
}

"Generated from type: [`com.twitter.timelines.render.TimelineCursor`](http://go/sg.thrift/TimelineCursor)"
type TimelineTimelineCursor @thrift_type(name : "TimelineCursor", package : "com.twitter.timelines.render") {
  cursor_info: TimelineCursorInfo
  cursor_type: TimelineCursorType!
  display_treatment: TimelineCursorDisplayTreatment
  stop_on_empty_response: Boolean
  url: TimelineUrl
  value: String!
}

"Generated from type: [`com.twitter.timelines.render.TimelineEntry`](http://go/sg.thrift/TimelineEntry)"
type TimelineTimelineEntry @thrift_type(name : "TimelineEntry", package : "com.twitter.timelines.render") {
  content: TimelineTimelineEntryContent!
  entry_id: String!
  expiry_time: Int53
  sort_index: NumericString!
}

"Generated from type: [`com.twitter.timelines.render.TimelineItem`](http://go/sg.thrift/TimelineItem)"
type TimelineTimelineItem @thrift_type(name : "TimelineItem", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  content: TimelineTimelineItemContent!
  feedback_info: TimelineFeedbackInfo
  "Deprecated( See http://go/j/URT-80)"
  prompt: TimelinePrompt @deprecated(reason : "See http://go/j/URT-80")
  reactive_triggers: TimelineTimelineItemReactiveTriggers
}

"Generated from type: [`com.twitter.timelines.render.TimelineItemReactiveTriggers`](http://go/sg.thrift/TimelineItemReactiveTriggers)"
type TimelineTimelineItemReactiveTriggers @thrift_type(name : "TimelineItemReactiveTriggers", package : "com.twitter.timelines.render") {
  on_linger: TimelineTimelineReaction
}

"Generated from type: [`com.twitter.timelines.render.TimelineMetadata`](http://go/sg.thrift/TimelineMetadata)"
type TimelineTimelineMetadata @thrift_type(name : "TimelineMetadata", package : "com.twitter.timelines.render") {
  reader_mode_config: TimelineReaderModeConfig
  scribe_config: TimelineTimelineScribeConfig
  title: String
}

"Generated from type: [`com.twitter.timelines.render.TimelineModule`](http://go/sg.thrift/TimelineModule)"
type TimelineTimelineModule @thrift_type(name : "TimelineModule", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  display_type: TimelineModuleDisplayType!
  feedback_info: TimelineFeedbackInfo
  footer: TimelineModuleFooter
  header: TimelineModuleHeader
  items: [TimelineModuleItem]!
  metadata: TimelineModuleMetadata
  show_more_behavior: TimelineModuleShowMoreBehavior
}

"Generated from type: [`com.twitter.timelines.render.TimelineReaction`](http://go/sg.thrift/TimelineReaction)"
type TimelineTimelineReaction @thrift_type(name : "TimelineReaction", package : "com.twitter.timelines.render") {
  execution: TimelineTimelineReactionExecution!
  max_execution_count: Short
}

"Generated from type: [`com.twitter.timelines.render.TimelineScribeConfig`](http://go/sg.thrift/TimelineScribeConfig)"
type TimelineTimelineScribeConfig @thrift_type(name : "TimelineScribeConfig", package : "com.twitter.timelines.render") {
  entity_token: String
  page: String
  section: String
}

"Generated from type: [`com.twitter.timelines.render.TimelinesDetails`](http://go/sg.thrift/TimelinesDetails)"
type TimelineTimelinesDetails @thrift_type(name : "TimelinesDetails", package : "com.twitter.timelines.render") {
  controller_data: String
  injection_type: String
  source_data: String
}

"Generated from type: [`com.twitter.timelines.render.TimelinesScoreInfo`](http://go/sg.thrift/TimelinesScoreInfo)"
type TimelineTimelinesScoreInfo @thrift_type(name : "TimelinesScoreInfo", package : "com.twitter.timelines.render") {
  score: Float!
}

"Generated from type: [`com.twitter.timelines.render.Tombstone`](http://go/sg.thrift/Tombstone)"
type TimelineTombstone @thrift_type(name : "Tombstone", package : "com.twitter.timelines.render") {
  display_type: TimelineTombstoneDisplayType!
  tombstone_info: TimelineTombstoneInfo
  tweet: TimelineTweet
}

"Generated from type: [`com.twitter.timelines.render.TombstoneCallToAction`](http://go/sg.thrift/TombstoneCallToAction)"
type TimelineTombstoneCallToAction @thrift_type(name : "TombstoneCallToAction", package : "com.twitter.timelines.render") {
  text: String!
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.TombstoneInfo`](http://go/sg.thrift/TombstoneInfo)"
type TimelineTombstoneInfo @thrift_type(name : "TombstoneInfo", package : "com.twitter.timelines.render") {
  cta: TimelineTombstoneCallToAction
  reveal_text: String
  rich_reveal_text: TimelineRichText
  rich_text: TimelineRichText
  text: String!
}

"""
The canonical representation of a topic, intended to be used in places like a list of followed topics where the purpose is to convey information more so than to encourage an action.

Generated from type: [`com.twitter.timelines.render.Topic`](http://go/sg.thrift/Topic)
"""
type TimelineTopic @thrift_type(name : "Topic", package : "com.twitter.timelines.render") {
  reactive_triggers: TimelineTopicReactiveTriggers
  topic: Topic!
  topic_display_type: TopicDisplayType!
  topic_functionality_type: TopicFunctionalityType!
}

"""
Represents carousel of recommended Topics in Broad-to-Narrow Topics-to-Follow Module

Generated from type: [`com.twitter.timelines.render.TopicCollection`](http://go/sg.thrift/TopicCollection)
"""
type TimelineTopicCollection @thrift_type(name : "TopicCollection", package : "com.twitter.timelines.render") {
  "Specifies the number of rows in the carousel"
  row_count: Int53
  topics: [TimelineTopicCollectionData!]!
}

"""
Represents a topic, intended to be used in TimelineTopicCollection

Generated from type: [`com.twitter.timelines.render.TopicCollectionData`](http://go/sg.thrift/TopicCollectionData)
"""
type TimelineTopicCollectionData @thrift_type(name : "TopicCollectionData", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  feedback_info: TimelineFeedbackInfo
  topic: Topic!
}

"Generated from type: [`com.twitter.timelines.render.TopicContext`](http://go/sg.thrift/TopicContext)"
type TimelineTopicContext @thrift_type(name : "TopicContext", package : "com.twitter.timelines.render") {
  "See go/adaptable-topic-context for the default behavior if not passed"
  banner_text: TimelineRichText
  functionality_type: TimelineTopicContextFunctionalityType!
  "See go/adaptable-topic-context for the default behavior if not passed"
  link_text: TimelineRichText
  topic: Topic!
}

"Generated from type: [`com.twitter.timelines.render.TopicDetails`](http://go/sg.thrift/TopicDetails)"
type TimelineTopicDetails @thrift_type(name : "TopicDetails", package : "com.twitter.timelines.render") {
  topic_id: String
  topic_info: String
  topic_type: String
}

"""
Used to prompt the user with incentivization that they should follow the topic

Generated from type: [`com.twitter.timelines.render.TopicFollowPrompt`](http://go/sg.thrift/TopicFollowPrompt)
"""
type TimelineTopicFollowPrompt @thrift_type(name : "TopicFollowPrompt", package : "com.twitter.timelines.render") {
  display_type: TimelineTopicFollowPromptDisplayType!
  follow_incentive_text: String
  follow_incentive_title: String
  topic: Topic!
}

"""
Reactive triggers on a topic that mutates the timeline based on the instruction.

Generated from type: [`com.twitter.timelines.render.TopicReactiveTriggers`](http://go/sg.thrift/TopicReactiveTriggers)
"""
type TimelineTopicReactiveTriggers @thrift_type(name : "TopicReactiveTriggers", package : "com.twitter.timelines.render") {
  on_follow: TimelineTimelineReaction
}

"""
Basic information needed for a trend

Generated from type: [`com.twitter.timelines.render.Trend`](http://go/sg.thrift/Trend)
"""
type TimelineTrend @thrift_type(name : "Trend", package : "com.twitter.timelines.render") {
  "Cards associated with a trend (Moment card, Live Stream Card, Periscope Card)"
  associated_cards: [Card!]
  """
  Moments associated with a trend
  
  Deprecated( Replaced by card)
  """
  associated_moments: [Moment!] @deprecated(reason : "Replaced by card")
  "Tweets associated with a trend"
  associated_tweets: [Tweet!] @deprecated(reason : "migrated to associated_tweets_results")
  "Result field; Tweets associated with a trend"
  associated_tweets_result: [TweetResult] @deprecated(reason : "migrated to associated_tweets_results; field will always be null")
  "Result field; Tweets associated with a trend"
  associated_tweets_results: [TweetResults!]
  "Users associated with a trend"
  associated_users: [User!] @deprecated(reason : "migrated to associated_users_results")
  "Result field; Users associated with a trend"
  associated_users_result: [UserResult] @deprecated(reason : "migrated to associated_users_results; field will always be null")
  "Result field; Users associated with a trend"
  associated_users_results: [UserResults!]
  "To show if there are certain media types associated with a trend (Moment, Live, Periscope, stc)"
  badges: [TimelineTrendBadge!]
  "Text information for a trend. Bold text that gives background for a trend. (In Guide v2 used only for Promoted Trend Description)"
  description: String
  grouped_trends: [TimelineGroupedTrend!]
  "Background images for a trend"
  images: [TimelineTrendImage!]
  """
  Light text that gives context for a trend (Example is social context or tweet count)
  
  Deprecated( deprecated in guide v2.0 (Use trendMetaData instead). For v1.1 (pre media forward) this is still used)
  """
  meta_description: String @deprecated(reason : "deprecated in guide v2.0 (Use trendMetaData instead). For v1.1 (pre media forward) this is still used")
  "the trend name, e.g. '#MondayMotivation'"
  name: String!
  promoted_metadata: TimelinePromotedMetadata
  "The rank of the trend relative to the other trends sent along with it. Client should display this field if present."
  rank: String
  "All meta data fields in one container. Replacing 'metaDescription' field. For: Social context, tweet count, other context ('Trending in San Francisco')"
  trend_metadata: TimelineTrendMetadata
  "click tap-through target when clicking on trend"
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.TrendBadge`](http://go/sg.thrift/TrendBadge)"
type TimelineTrendBadge @thrift_type(name : "TrendBadge", package : "com.twitter.timelines.render") {
  badge_color: String
  badge_text: String
  badge_type: TimelineBadgeType!
  text_color: String
}

"Generated from type: [`com.twitter.timelines.render.TrendImage`](http://go/sg.thrift/TrendImage)"
type TimelineTrendImage @thrift_type(name : "TrendImage", package : "com.twitter.timelines.render") {
  url: String!
}

"Generated from type: [`com.twitter.timelines.render.TrendMetadata`](http://go/sg.thrift/TrendMetadata)"
type TimelineTrendMetadata @thrift_type(name : "TrendMetadata", package : "com.twitter.timelines.render") {
  domain_context: String
  meta_description: String
  url: TimelineUrl
}

"Generated from type: [`com.twitter.timelines.render.TrendUrtMetadata`](http://go/sg.thrift/TrendUrtMetadata)"
type TimelineTrendUrtMetadata @thrift_type(name : "TrendUrtMetadata", package : "com.twitter.timelines.render") {
  associated_algo_tweet_ids: [NumericString!]
  associated_card_urls: [String!]
  associated_curated_tweet_ids: [NumericString!]
  category_module: String
  cluster_id: NumericString
  contains_curated_title: Boolean
  displayed_related_variants: [String!]
  displayed_topic_id: NumericString
  impression_id: String
  impression_token: String
  position: Short
  promoted_disclosure_type: TimelineDisclosureType
  promoted_impression_id: String
  promoted_trend_id: NumericString
  related_terms: [String!]
  topic_ids: [NumericString!]
  trend_name: String
}

"Generated from type: [`com.twitter.timelines.render.TrendsDetails`](http://go/sg.thrift/TrendsDetails)"
type TimelineTrendsDetails @thrift_type(name : "TrendsDetails", package : "com.twitter.timelines.render") {
  impression_id: String
  impression_token: String
  position: Short
  trend_name: String
}

"Generated from type: [`com.twitter.timelines.render.TttInterest`](http://go/sg.thrift/TttInterest)"
type TimelineTttInterest @thrift_type(name : "TttInterest", package : "com.twitter.timelines.render") {
  ttt_group_id: String
  ttt_stream_id: String
}

"Generated from type: [`com.twitter.timelines.render.Tweet`](http://go/sg.thrift/Tweet)"
type TimelineTweet @thrift_type(name : "Tweet", package : "com.twitter.timelines.render") {
  campaign_metadata: TimelineCampaignMetadata
  conversation_annotation: TimelineConversationAnnotation
  display_size: TimelineTweetDisplaySize
  display_type: TimelineTweetDisplayType!
  education_prompt: TweetEducationPrompt
  "Deprecated( No longer used)"
  follow_prompt: TimelineFollowPrompt @deprecated(reason : "No longer used")
  forward_pivot: TimelineForwardPivot
  has_moderated_replies: Boolean
  highlights: TimelineTweetHighlights
  inner_forward_pivot: TimelineForwardPivot
  inner_tombstone_info: TimelineTombstoneInfo
  min_spacing: Short
  preroll_metadata: TimelinePrerollMetadata
  preview_metadata: TimelinePreviewMetadata
  promoted_metadata: TimelinePromotedMetadata
  quote_pivot: TimelineQuotePivot
  "Deprecated( Use reactiveTriggersV2 instead)"
  reactive_triggers: [TimelineTweetReactiveTrigger!] @deprecated(reason : "Use reactiveTriggersV2 instead")
  reactive_triggers_v2: TimelineTweetReactiveTriggers @development
  reply_badge: TimelineBadge
  rux_context: String
  social_context: TimelineSocialContext
  timelines_score_info: TimelineTimelinesScoreInfo
  topic_follow_prompt: TimelineTweetAttachedTopicFollowPrompt
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_composer: TimelineTweetComposer
  tweet_context: TimelineTweetContext
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
  tweet_social_proof: TimelineSocialContext
}

"Generated from type: [`com.twitter.timelines.render.TweetAttachedTopicFollowPrompt`](http://go/sg.thrift/TweetAttachedTopicFollowPrompt)"
type TimelineTweetAttachedTopicFollowPrompt @thrift_type(name : "TweetAttachedTopicFollowPrompt", package : "com.twitter.timelines.render") {
  client_event_info: TimelineClientEventInfo
  description: TimelineRichText!
  display_type: TweetAttachedTopicFollowPromptDisplayType!
  feedback_info: TimelineFeedbackInfo
}

"Generated from type: [`com.twitter.timelines.render.TweetComposer`](http://go/sg.thrift/TweetComposer)"
type TimelineTweetComposer @thrift_type(name : "TweetComposer", package : "com.twitter.timelines.render") {
  display_type: TimelineTweetComposerDisplayType!
  text: String!
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.TweetContext`](http://go/sg.thrift/TweetContext)"
type TimelineTweetContext @thrift_type(name : "TweetContext", package : "com.twitter.timelines.render") {
  context_image_urls: [String!]
  context_type: TimelineContextType!
  landing_url: TimelineUrl
  text: String!
}

"Generated from type: [`com.twitter.timelines.render.TweetHighlights`](http://go/sg.thrift/TweetHighlights)"
type TimelineTweetHighlights @thrift_type(name : "TweetHighlights", package : "com.twitter.timelines.render") {
  card_description_highlights: [TimelineHighlightedSection!]
  card_title_highlights: [TimelineHighlightedSection!]
  text_highlights: [TimelineHighlightedSection!]
}

"Generated from type: [`com.twitter.timelines.render.TweetMedia`](http://go/sg.thrift/TweetMedia)"
type TimelineTweetMedia @thrift_type(name : "TweetMedia", package : "com.twitter.timelines.render") {
  moment: Moment
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
}

"""
Reactive Triggers on a Tweet that mutates the timeline based on the instruction.

Generated from type: [`com.twitter.timelines.render.TweetReactiveTrigger`](http://go/sg.thrift/TweetReactiveTrigger)
"""
type TimelineTweetReactiveTrigger @thrift_type(name : "TweetReactiveTrigger", package : "com.twitter.timelines.render") {
  reaction: TimelineTimelineReaction!
  tweet_action: TimelineTweetAction!
}

"""
Updated Reactive Triggers on a Tweet that mutates the timeline based on the instruction.

Generated from type: [`com.twitter.timelines.render.TweetReactiveTriggers`](http://go/sg.thrift/TweetReactiveTriggers)
"""
type TimelineTweetReactiveTriggers @thrift_type(name : "TweetReactiveTriggers", package : "com.twitter.timelines.render") {
  on_bookmark: TimelineTimelineReaction
  on_create: TimelineTimelineReaction
  on_like: TimelineTimelineReaction
  on_quote_tweet: TimelineTimelineReaction
  on_reply: TimelineTimelineReaction
  on_retweet: TimelineTimelineReaction
}

"Generated from type: [`com.twitter.timelines.render.TweetUnavailable`](http://go/sg.thrift/TweetUnavailable)"
type TimelineTweetUnavailable @thrift_type(name : "TweetUnavailable", package : "com.twitter.timelines.render") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"""
A timeline item representing lists that twitter users create & subscribe to

Generated from type: [`com.twitter.timelines.render.TwitterList`](http://go/sg.thrift/TwitterList)
"""
type TimelineTwitterList @thrift_type(name : "TwitterList", package : "com.twitter.timelines.render") {
  display_type: TimelineTwitterListDisplayType
  list: List!
}

"Generated from type: [`com.twitter.timelines.render.Url`](http://go/sg.thrift/Url)"
type TimelineUrl @thrift_type(name : "Url", package : "com.twitter.timelines.render") {
  url: String!
  url_type: TimelineUrlType!
  urt_endpoint_options: TimelineUrtEndpointOptions
}

"Generated from type: [`com.twitter.timelines.render.TimelineUrlButton`](http://go/sg.thrift/TimelineUrlButton)"
type TimelineUrlButton @thrift_type(name : "TimelineUrlButton", package : "com.twitter.timelines.render") {
  text: String!
  url: TimelineUrl!
}

"Generated from type: [`com.twitter.timelines.render.UrtEndpointOptions`](http://go/sg.thrift/UrtEndpointOptions)"
type TimelineUrtEndpointOptions @thrift_type(name : "UrtEndpointOptions", package : "com.twitter.timelines.render") {
  cache_id: String
  request_params: [RequestParamsEntry!]
  subtitle: String
  timeline_with_context: TimelineWithContext @development
  title: String
}

"""
The renderable form of a user, with contextual metadata

Generated from type: [`com.twitter.timelines.render.User`](http://go/sg.thrift/User)
"""
type TimelineUser @thrift_type(name : "User", package : "com.twitter.timelines.render") {
  awards_given: TimelineUserAwardsGiven @development
  display_type: TimelineUserDisplayType!
  enable_reactive_blending: Boolean
  highlights: TimelineUserHighlights
  promoted_metadata: TimelinePromotedMetadata
  reactive_triggers: TimelineUserReactiveTriggers
  social_context: TimelineSocialContext
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"""
A counter of a particular award a user has given

Generated from type: [`com.twitter.timelines.render.UserAwardGiven`](http://go/sg.thrift/UserAwardGiven)
"""
type TimelineUserAwardGiven @thrift_type(name : "UserAwardGiven", package : "com.twitter.timelines.render") {
  award: TweetAwardGiven!
  count: Int!
}

"""
A collection of all the awards a user has given to a Tweet

Generated from type: [`com.twitter.timelines.render.UserAwardsGiven`](http://go/sg.thrift/UserAwardsGiven)
"""
type TimelineUserAwardsGiven @thrift_type(name : "UserAwardsGiven", package : "com.twitter.timelines.render") {
  awards: [TimelineUserAwardGiven!]!
}

"""
A timeline item representing a user with community context.

Generated from type: [`com.twitter.timelines.render.UserCommunityRelationship`](http://go/sg.thrift/UserCommunityRelationship)
"""
type TimelineUserCommunityRelationship @thrift_type(name : "UserCommunityRelationship", package : "com.twitter.timelines.render") {
  relationship: UserCommunityRelationship!
}

"Generated from type: [`com.twitter.timelines.render.UserFacepile`](http://go/sg.thrift/UserFacepile)"
type TimelineUserFacepile @thrift_type(name : "UserFacepile", package : "com.twitter.timelines.render") {
  action: TimelineMessageTextAction
  action_type: TimelineMessageActionType
  display_type: TimelineUserFacepileDisplayType
  displays_featuring_text: Boolean
  featuredUsers: [User!]! @deprecated(reason : "migrated to featured_users_results")
  featured_users_result: [UserResult] @deprecated(reason : "migrated to featured_users_results; field will always be null")
  featured_users_results: [UserResults!]!
  users: [User!]! @deprecated(reason : "migrated to users_results")
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  users_results: [UserResults!]!
}

"Generated from type: [`com.twitter.timelines.render.UserFollowPrompt`](http://go/sg.thrift/UserFollowPrompt)"
type TimelineUserFollowPrompt @thrift_type(name : "UserFollowPrompt", package : "com.twitter.timelines.render") {
  detail_text: TimelineRichText
  dismiss_info: TimelineDismissInfo
  displays_follower_following_count: Boolean
  displays_location: Boolean
  followedUsers: [User!] @deprecated(reason : "migrated to followed_users_results")
  followed_users_result: [UserResult] @deprecated(reason : "migrated to followed_users_results; field will always be null")
  followed_users_results: [UserResults!]
  interests_text: TimelineRichText
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.UserHighlights`](http://go/sg.thrift/UserHighlights)"
type TimelineUserHighlights @thrift_type(name : "UserHighlights", package : "com.twitter.timelines.render") {
  description_highlights: [TimelineHighlightedSection!]
  name_highlights: [TimelineHighlightedSection!]
}

"""
Reactive Triggers on a User that mutates the timeline based on the instruction.

Generated from type: [`com.twitter.timelines.render.UserReactiveTriggers`](http://go/sg.thrift/UserReactiveTriggers)
"""
type TimelineUserReactiveTriggers @thrift_type(name : "UserReactiveTriggers", package : "com.twitter.timelines.render") {
  on_follow: TimelineTimelineReaction
}

"""
The renderable form of a user, with contextual metadata

Generated from type: [`com.twitter.timelines.render.UserThreadHeader`](http://go/sg.thrift/UserThreadHeader)
"""
type TimelineUserThreadHeader @thrift_type(name : "UserThreadHeader", package : "com.twitter.timelines.render") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.timelines.render.VerticalGridItem`](http://go/sg.thrift/VerticalGridItem)"
type TimelineVerticalGridItem @thrift_type(name : "VerticalGridItem", package : "com.twitter.timelines.render") {
  content: TimelineVerticalGridItemContent!
}

"Generated from type: [`com.twitter.timelines.render.VerticalGridItemTopicTile`](http://go/sg.thrift/VerticalGridItemTopicTile)"
type TimelineVerticalGridItemTopicTile @thrift_type(name : "VerticalGridItemTopicTile", package : "com.twitter.timelines.render") {
  functionality_type: VerticalGridItemTopicFunctionalityType!
  style: VerticalGridItemTileStyle!
  "the Topic displayed in the tile"
  topic: Topic!
  url: TimelineUrl
}

"Generated from type: [`com.twitter.timelines.render.VideoVariant`](http://go/sg.thrift/VideoVariant)"
type TimelineVideoVariant @thrift_type(name : "VideoVariant", package : "com.twitter.timelines.render") {
  bitrate: Int
  content_type: String
  url: String
}

"Generated from type: [`com.twitter.timelines.render.TimelineWithContext`](http://go/sg.thrift/TimelineWithContext)"
type TimelineWithContext @thrift_type(name : "TimelineWithContext", package : "com.twitter.timelines.render") {
  context: String
  id: String!
}

type TipJar {
  bandcamp_handle: String
  bitcoin_handle: String
  cash_app_handle: String
  chipper_handle: String
  ethereum_handle: String
  flutterwave_handle: String
  gofundme_handle: String
  is_enabled: Boolean
  kakao_handle: String
  paga_handle: String
  patreon_handle: String
  pay_pal_handle: String
  paytm_handle: String
  picpay_handle: String
  razorpay_handle: String
  strike_handle: String
  venmo_handle: String
  wealthsimple_handle: String
}

type TipJarExchangeRates {
  btcusd: String!
  usdbtc: String!
}

"""
rendered in the navbar on page with a title and an optional subtitle

Generated from type: [`com.twitter.pages.render.TitleNavBar`](http://go/sg.thrift/TitleNavBar)
"""
type TitleNavBar @thrift_type(name : "TitleNavBar", package : "com.twitter.pages.render") {
  client_event_info: TimelineClientEventInfo
  subtitle: String
  title: String!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TooOld`](http://go/sg.thrift/TooOld)"
type TooOld @thrift_type(name : "TooOld", package : "com.twitter.dataproducts.metrics.graphql") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from Strato space: `Topic`"
type Topic @strato_space(name : "Topic") {
  """
  The description of the given topic.
  
  Generated from Strato column: [graphql/topic/description.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/description)
  """
  description: String @strato_column(path : "graphql/topic/description.Topic") @strato_op(value : Fetch)
  """
  The following state of the given topic.
  
  Generated from Strato column: [graphql/topic/following.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/following)
  """
  following: Boolean! @strato_column(path : "graphql/topic/following.Topic") @strato_op(value : Fetch)
  """
  The icon URL of the given topic.
  
  Generated from Strato column: [graphql/topic/iconUrl.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/iconUrl)
  """
  icon_url: String @strato_column(path : "graphql/topic/iconUrl.Topic") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Topic Landing Page header
  
  Generated from Strato column: [graphql/interestsMixer/interestsMixerTopicsLandingPageHeader.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/interestsMixer/interestsMixerTopicsLandingPageHeader)
  """
  interests_mixer_topics_landing_page_header: PageHeader @strato_column(path : "graphql/interestsMixer/interestsMixerTopicsLandingPageHeader.Topic") @strato_op(value : Fetch)
  """
  The name of the given topic.
  
  Generated from Strato column: [graphql/topic/name.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/name)
  """
  name: String! @strato_column(path : "graphql/topic/name.Topic") @strato_op(value : Fetch)
  """
  The not-interested state of the given topic.
  
  Generated from Strato column: [graphql/topic/notInterested.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/notInterested)
  """
  not_interested: Boolean! @strato_column(path : "graphql/topic/notInterested.Topic") @strato_op(value : Fetch)
  """
  Noteworthy Accounts Page for a given topic
  
  Generated from Strato column: [graphql/interestsMixer/noteworthyAccountsPage.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/interestsMixer/noteworthyAccountsPage)
  """
  noteworthy_accounts_page: Page @safety_level(value : "TopicsLandingPageTopicRecommendations") @strato_column(path : "graphql/interestsMixer/noteworthyAccountsPage.Topic") @strato_op(value : Fetch)
  """
  Noteworthy Accounts timeline
  
  Generated from Strato column: [graphql/interestsMixer/noteworthyAccountsTimeline.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/interestsMixer/noteworthyAccountsTimeline)
  """
  noteworthy_accounts_timeline: Timeline @strato_column(path : "graphql/interestsMixer/noteworthyAccountsTimeline.Topic") @strato_op(value : Fetch)
  """
  Returns a account-recommendations-mixer getUrtResponse timeline for the NuxSingleInterest category timeline.
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxSingleInterestCategoryTimeline.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/account-recommendations-mixer/nuxSingleInterestCategoryTimeline)
  """
  nux_single_interest_category_timeline: Timeline @development @strato_column(path : "graphql/account-recommendations-mixer/nuxSingleInterestCategoryTimeline.Topic") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
  """
  Topic Page header
  
  Generated from Strato column: [graphql/search/searchTopicPageHeader.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/search/searchTopicPageHeader)
  """
  search_topic_page_header: PageHeader @strato_column(path : "graphql/search/searchTopicPageHeader.Topic") @strato_op(value : Fetch)
  """
  The id of the given topic.
  
  Generated from Strato column: [graphql/topic/topicId.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/topicId)
  """
  topic_id: String! @strato_column(path : "graphql/topic/topicId.Topic") @strato_op(value : Fetch)
  """
  Topic Landing Page
  
  Generated from Strato column: [graphql/interestsMixer/topicPage.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/interestsMixer/topicPage)
  """
  topic_page: Page @safety_level(value : "TopicsLandingPageTopicRecommendations") @strato_column(path : "graphql/interestsMixer/topicPage.Topic") @strato_op(value : Fetch)
  """
  Topic Page timeline
  
  Generated from Strato column: [graphql/topic/topicTimeline.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/topic/topicTimeline)
  """
  topic_timeline: Timeline @strato_column(path : "graphql/topic/topicTimeline.Topic") @strato_op(value : Fetch)
  """
  Category Topics Page
  
  Generated from Strato column: [graphql/interestsMixer/topicsPickerPage.Topic](https://strato.twitter.biz/web/browse/Topic/graphql/interestsMixer/topicsPickerPage)
  """
  topics_picker_page: Page @safety_level(value : "TimelineHomeTopicFollowRecommendations") @strato_column(path : "graphql/interestsMixer/topicsPickerPage.Topic") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.periscope.api.TopicCategory`](http://go/sg.thrift/TopicCategory)"
type TopicCategory @thrift_type(name : "TopicCategory", package : "com.twitter.periscope.api") {
  icon: String!
  name: String
  semantic_core_entity_id: NumericString!
  subtopics: [Topic!]!
}

"Generated from type: [`com.twitter.strato.graphql.TopicItem`](http://go/sg.thrift/TopicItem)"
type TopicItem @thrift_type(name : "TopicItem", package : "com.twitter.strato.graphql") {
  topic: Topic!
}

"""
Used to populate the Facepile on the Topic Landing Page header

Generated from type: [`com.twitter.timelines.render.TopicLandingFacepile`](http://go/sg.thrift/TopicLandingFacepile)
"""
type TopicLandingFacepile @thrift_type(name : "TopicLandingFacepile", package : "com.twitter.timelines.render") {
  "Used to handle the facepile click navigation"
  facepile_url: TimelineUrl
  "A list of noteworthy accounts to display in the Facepile on the Topic Landing Page Header"
  users: [User!]! @deprecated(reason : "migrated to users_results")
  "Result field; A list of noteworthy accounts to display in the Facepile on the Topic Landing Page Header"
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  "Result field; A list of noteworthy accounts to display in the Facepile on the Topic Landing Page Header"
  users_results: [UserResults!]!
}

"""
Used to show the Topic landing page header Topic information and follow CTA

Generated from type: [`com.twitter.timelines.render.TopicLandingHeader`](http://go/sg.thrift/TopicLandingHeader)
"""
type TopicLandingHeader @thrift_type(name : "TopicLandingHeader", package : "com.twitter.timelines.render") {
  facepile: TopicLandingFacepile
  topic: Topic!
  topic_landing_context: String
}

"""
topic header rendered in the header container on Topic page

Generated from type: [`com.twitter.pages.render.TopicPageHeader`](http://go/sg.thrift/TopicPageHeader)
"""
type TopicPageHeader @thrift_type(name : "TopicPageHeader", package : "com.twitter.pages.render") {
  client_event_info: TimelineClientEventInfo
  display_type: TopicPageHeaderDisplayType! @development
  facepile: TopicPageHeaderFacepile
  landing_context: String
  topic: Topic!
}

"""
Used to populate the Facepile on the Topic Landing Page header

Generated from type: [`com.twitter.pages.render.TopicPageHeaderFacepile`](http://go/sg.thrift/TopicPageHeaderFacepile)
"""
type TopicPageHeaderFacepile @thrift_type(name : "TopicPageHeaderFacepile", package : "com.twitter.pages.render") {
  "Used to handle the facepile click navigation"
  facepile_url: TimelineUrl
  "A list of noteworthy accounts to display in the Facepile on the Topic Page Header"
  users: [User!]! @deprecated(reason : "migrated to users_results")
  "Result field; A list of noteworthy accounts to display in the Facepile on the Topic Page Header"
  users_result: [UserResult] @deprecated(reason : "migrated to users_results; field will always be null")
  "Result field; A list of noteworthy accounts to display in the Facepile on the Topic Page Header"
  users_results: [UserResults!]!
}

"""
rendered in the nav bar on Topic page

Generated from type: [`com.twitter.pages.render.TopicPageNavBar`](http://go/sg.thrift/TopicPageNavBar)
"""
type TopicPageNavBar @thrift_type(name : "TopicPageNavBar", package : "com.twitter.pages.render") {
  client_event_info: TimelineClientEventInfo
  topic: Topic!
}

type TranslateTweetResponse {
  destination_language: String!
  entities: EntitySet!
  localized_source_language: String
  source_language: String
  translation: String!
  translation_source: String
  translation_state: String!
}

type TranslatedProfile {
  destination_language: String!
  entities: EntitySet!
  localized_source_language: String
  source_language: String
  translation: String!
  translation_source: String
}

"Generated from Strato space: `Trend`"
type Trend @strato_space(name : "Trend") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsInfoUnavailable`](http://go/sg.thrift/TrustedFriendsInfoUnavailable)"
type TrustedFriendsInfoUnavailable @thrift_type(name : "TrustedFriendsInfoUnavailable", package : "com.twitter.trusted_friends") {
  reason: TrustedFriendsInfoUnavailableReason!
}

"Generated from Strato space: `TrustedFriendsList`"
type TrustedFriendsList @strato_space(name : "TrustedFriendsList") {
  """
  createdAt field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/createdAt.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/createdAt)
  """
  created_at: NumericString @development @strato_column(path : "graphql/trusted-friends/createdAt.TrustedFriendsList") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  memberCount field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/memberCount.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/memberCount)
  """
  member_count: Int! @development @strato_column(path : "graphql/trusted-friends/memberCount.TrustedFriendsList") @strato_op(value : Fetch)
  """
  membersSlice field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/membersSlice.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/membersSlice)
  """
  members_slice(count: Int, cursor: String): UserSlice! @development @strato_column(path : "graphql/trusted-friends/membersSlice.TrustedFriendsList") @strato_op(value : Fetch)
  """
  name field from the trusted-friends, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/name.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/name)
  """
  name: String! @development @strato_column(path : "graphql/trusted-friends/name.TrustedFriendsList") @strato_op(value : Fetch)
  """
  owner field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/owner.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/owner)
  """
  owner: User! @deprecated(reason : "migrated to owner_results") @strato_column(path : "graphql/trusted-friends/owner.TrustedFriendsList") @strato_op(value : Fetch)
  """
  Result field; owner field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/owner.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/owner)
  """
  owner_result: UserResult @deprecated(reason : "migrated to owner_results; field will always be null") @strato_column(path : "graphql/trusted-friends/owner.TrustedFriendsList") @strato_op(value : Fetch)
  """
  Result field; owner field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/owner.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/owner)
  """
  owner_results: UserResults! @development @strato_column(path : "graphql/trusted-friends/owner.TrustedFriendsList") @strato_op(value : Fetch)
  """
  recommendedMembersSlice field from the trusted-friends dataset, see: go/trusted-friends-backend-tdd
  
  Generated from Strato column: [graphql/trusted-friends/recommendedMembersSlice.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/recommendedMembersSlice)
  """
  recommended_members_slice(count: Int, cursor: String): UserSlice @development @strato_column(path : "graphql/trusted-friends/recommendedMembersSlice.TrustedFriendsList") @strato_op(value : Fetch)
  """
  Invoke search/typeahead/blenderTypeahead to get typeahead results for users.
  
  Generated from Strato column: [graphql/trusted-friends/recommendedMembersTypeahead.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/recommendedMembersTypeahead)
  """
  recommended_members_typeahead(prefix: String!): [User!]! @deprecated(reason : "migrated to recommended_members_typeahead_results") @strato_column(path : "graphql/trusted-friends/recommendedMembersTypeahead.TrustedFriendsList") @strato_op(value : Fetch)
  """
  Result field; Invoke search/typeahead/blenderTypeahead to get typeahead results for users.
  
  Generated from Strato column: [graphql/trusted-friends/recommendedMembersTypeahead.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/recommendedMembersTypeahead)
  """
  recommended_members_typeahead_result(prefix: String!): [UserResult] @deprecated(reason : "migrated to recommended_members_typeahead_results; field will always be null") @strato_column(path : "graphql/trusted-friends/recommendedMembersTypeahead.TrustedFriendsList") @strato_op(value : Fetch)
  """
  Result field; Invoke search/typeahead/blenderTypeahead to get typeahead results for users.
  
  Generated from Strato column: [graphql/trusted-friends/recommendedMembersTypeahead.TrustedFriendsList](https://strato.twitter.biz/web/browse/TrustedFriendsList/graphql/trusted-friends/recommendedMembersTypeahead)
  """
  recommended_members_typeahead_results(prefix: String!): [UserResults!]! @development @strato_column(path : "graphql/trusted-friends/recommendedMembersTypeahead.TrustedFriendsList") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListCreateInvalid`](http://go/sg.thrift/TrustedFriendsListCreateInvalid)"
type TrustedFriendsListCreateInvalid @thrift_type(name : "TrustedFriendsListCreateInvalid", package : "com.twitter.trusted_friends") {
  reason: TrustedFriendsListCreateInvalidReason!
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberAddInvalid`](http://go/sg.thrift/TrustedFriendsListMemberAddInvalid)"
type TrustedFriendsListMemberAddInvalid @thrift_type(name : "TrustedFriendsListMemberAddInvalid", package : "com.twitter.trusted_friends") {
  reason: TrustedFriendsListMemberAddInvalidReason!
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberAddSuccess`](http://go/sg.thrift/TrustedFriendsListMemberAddSuccess)"
type TrustedFriendsListMemberAddSuccess @thrift_type(name : "TrustedFriendsListMemberAddSuccess", package : "com.twitter.trusted_friends") {
  trusted_friends_list: TrustedFriendsList!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberRemoveInvalid`](http://go/sg.thrift/TrustedFriendsListMemberRemoveInvalid)"
type TrustedFriendsListMemberRemoveInvalid @thrift_type(name : "TrustedFriendsListMemberRemoveInvalid", package : "com.twitter.trusted_friends") {
  reason: TrustedFriendsListMemberRemoveInvalidReason!
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberRemoveSuccess`](http://go/sg.thrift/TrustedFriendsListMemberRemoveSuccess)"
type TrustedFriendsListMemberRemoveSuccess @thrift_type(name : "TrustedFriendsListMemberRemoveSuccess", package : "com.twitter.trusted_friends") {
  trusted_friends_list: TrustedFriendsList!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from Strato space: `Tweet`"
type Tweet @strato_space(name : "Tweet") {
  "Generated from Strato column: [graphql/professional-analytics/Ad.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/professional-analytics/Ad)"
  ad: Ad @development @strato_column(path : "graphql/professional-analytics/Ad.Tweet") @strato_op(value : Fetch)
  """
  Returns the Tweet name advertisers can give their creatives.
  
  Generated from Strato column: [graphql/customer-experience-apps/adName.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/customer-experience-apps/adName)
  """
  ad_name: String @strato_column(path : "graphql/customer-experience-apps/adName.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/professional-analytics/analytics.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/professional-analytics/analytics)"
  analytics: TweetActivityMetricsResponse @strato_column(path : "graphql/professional-analytics/analytics.Tweet") @strato_op(value : Fetch)
  """
  Relationship between the author and the community of the tweet.
  
  Generated from Strato column: [graphql/communities/authorCommunityRelationship.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/communities/authorCommunityRelationship)
  """
  author_community_relationship: UserCommunityRelationship @strato_column(path : "graphql/communities/authorCommunityRelationship.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to auto translate a Tweet PDP-1990 and PC-2040, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/autoTranslate.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/autoTranslate)
  """
  auto_translate(translation_source: String): AutoTranslateTweetResponse @strato_column(path : "graphql/translation/autoTranslate.Tweet") @strato_op(value : Fetch)
  """
  Birdwatch notes written for a Tweet.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchNotes.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/birdwatch/birdwatchNotes)
  """
  birdwatch_notes(count: Int, cursor: String): BirdwatchNotesSlice @strato_column(path : "graphql/birdwatch/birdwatchNotes.Tweet") @strato_op(value : Fetch)
  """
  A Birdwatch pivot for a Tweet, if one should be displayed.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchPivot.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/birdwatch/birdwatchPivot)
  """
  birdwatch_pivot: BirdwatchPivot @strato_column(path : "graphql/birdwatch/birdwatchPivot.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/card.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/card)"
  card: Card @strato_column(path : "graphql/card.Tweet") @strato_op(value : Fetch)
  """
  Community associated with the tweet.
  
  Generated from Strato column: [graphql/communities/community.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/communities/community)
  """
  community: Community @deprecated(reason : "Superseded by Tweet.community_relationship.community.") @strato_column(path : "graphql/communities/community.Tweet") @strato_op(value : Fetch)
  """
  Community relationship of the tweet.
  
  Generated from Strato column: [graphql/communities/communityRelationship.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/communities/communityRelationship)
  """
  community_relationship: TweetCommunityRelationship @strato_column(path : "graphql/communities/communityRelationship.Tweet") @strato_op(value : Fetch)
  """
  Fetches a tweet conversation timeline containing metadata for describing nested conversations
  
  Generated from Strato column: [graphql/tweetconvosvc/conversationTimeline.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/tweetconvosvc/conversationTimeline)
  """
  conversation_timeline(cursor: String, exclude_ancestors: Boolean, max_indentation: Int, view_cnt: Int): TimelineTimeline @deprecated(reason : "Moved to graphql field `Query.conversation_timeline`") @strato_column(path : "graphql/tweetconvosvc/conversationTimeline.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/core.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/core)"
  core: TweetCore @strato_column(path : "graphql/core.Tweet") @strato_op(value : Fetch)
  """
  Fetches the COVID-19 Hub URL for a given Tweet ID in any one of the 16 Moments countries.
  
  Generated from Strato column: [graphql/embed_client/covid19HubUrl.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/embed_client/covid19HubUrl)
  """
  covid19_hub_url: String @strato_column(path : "graphql/embed_client/covid19HubUrl.Tweet") @strato_op(value : Fetch)
  """
  Read and write the developer_built_card_id field on the tweet.
  
  Generated from Strato column: [graphql/dataproducts/cards/developerBuiltCard.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/dataproducts/cards/developerBuiltCard)
  """
  developer_built_card: DeveloperBuiltCard @development @strato_column(path : "graphql/dataproducts/cards/developerBuiltCard.Tweet") @strato_op(value : Fetch)
  """
  This column handles the reply voting downvote count fetch operation, which fetches the number of downvotes on a given tweet. More details can be found at go/replyvoting-infra-tdd
  
  Generated from Strato column: [graphql/incentives/replyvoting/downvoteCount.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/incentives/replyvoting/downvoteCount)
  """
  downvote_count(viewer_id: NumericString): DownvoteCount @development @strato_column(path : "graphql/incentives/replyvoting/downvoteCount.Tweet") @strato_op(value : Fetch)
  """
  This column handles the reply voting downvote perspective fetch operation, which fetches a user has downvoted a given tweet. More details can be found at go/replyvoting-infra-tdd
  
  Generated from Strato column: [graphql/incentives/replyvoting/downvotePerspective.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/incentives/replyvoting/downvotePerspective)
  """
  downvote_perspective(viewer_id: NumericString): DownvotePerspective @development @strato_column(path : "graphql/incentives/replyvoting/downvotePerspective.Tweet") @strato_op(value : Fetch)
  """
  Whether or not the viewer can edit the tweet.
  
  Generated from Strato column: [graphql/eduardo/editActionResult.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/eduardo/editActionResult)
  """
  edit_action_result: TweetEditActionResult! @development @strato_column(path : "graphql/eduardo/editActionResult.Tweet") @strato_op(value : Fetch)
  """
  Read the editControl field on the Tweet, which specifies whether the current Tweet has been edited or is an edit of a previous Tweet. See http://go/eduardo-m1-tdd for more details.
  
  Generated from Strato column: [graphql/tweetypie/fields/editControl.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/tweetypie/fields/editControl)
  """
  edit_control: EditControl @development @strato_column(path : "graphql/tweetypie/fields/editControl.Tweet") @strato_op(value : Fetch)
  """
  Edit history timeline of the tweet.
  
  Generated from Strato column: [graphql/eduardo/editHistoryTimeline.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/eduardo/editHistoryTimeline)
  """
  edit_history_timeline: Timeline @development @strato_column(path : "graphql/eduardo/editHistoryTimeline.Tweet") @strato_op(value : Fetch)
  """
  Return Topic for Embed Tweet
  
  Generated from Strato column: [graphql/interestsMixer/embedTweetTopic.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/interestsMixer/embedTweetTopic)
  """
  embed_tweet_topic: Topic @strato_column(path : "graphql/interestsMixer/embedTweetTopic.Tweet") @strato_op(value : Fetch)
  """
  Product features applied on top of existing tweet in prod
  
  Generated from Strato column: [graphql/creative-entity-enrichments/enrichments.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/creative-entity-enrichments/enrichments)
  """
  enrichments: TweetEnrichments @development @strato_column(path : "graphql/creative-entity-enrichments/enrichments.Tweet") @strato_op(value : Fetch)
  """
  Product features applied on top of existing tweet in staging
  
  Generated from Strato column: [graphql/creative-entity-enrichments/enrichmentsStaging.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/creative-entity-enrichments/enrichmentsStaging)
  """
  enrichments_staging: TweetEnrichments @development @strato_column(path : "graphql/creative-entity-enrichments/enrichmentsStaging.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/exclusiveTweetInfo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/exclusiveTweetInfo)"
  exclusive_tweet_info: AudienceRewardsExclusiveTweetInfo @strato_column(path : "graphql/exclusiveTweetInfo.Tweet") @strato_op(value : Fetch)
  """
  If a Tweet contains any Birdwatch notes or not.
  
  Generated from Strato column: [graphql/birdwatch/hasBirdwatchNotes.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/birdwatch/hasBirdwatchNotes)
  """
  has_birdwatch_notes: Boolean @strato_column(path : "graphql/birdwatch/hasBirdwatchNotes.Tweet") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Tweet representing the initial version of the tweet.
  
  Generated from Strato column: [graphql/eduardo/initialTweetId.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/eduardo/initialTweetId)
  """
  initial_tweet_id: NumericString @development @strato_column(path : "graphql/eduardo/initialTweetId.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine check if a Tweet is auto translatable for a user, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/isAutoTranslatable.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/isAutoTranslatable)
  """
  is_auto_translatable(translation_source: String): Boolean @strato_column(path : "graphql/translation/isAutoTranslatable.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine check if a Tweet is translatable for a user, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/isTranslatable.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/isTranslatable)
  """
  is_translatable(translation_source: String): Boolean @strato_column(path : "graphql/translation/isTranslatable.Tweet") @strato_op(value : Fetch)
  """
  Tweet representing the latest version of the tweet.
  
  Generated from Strato column: [graphql/eduardo/latestTweetId.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/eduardo/latestTweetId)
  """
  latest_tweet_id: NumericString @development @strato_column(path : "graphql/eduardo/latestTweetId.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/weaverbird/legacy.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/weaverbird/legacy)"
  legacy(
    cards_platform: String! = "Web-12", 
    "Enabling this will force the tweets service to include promoted metadata in the query result."
    include_promoted_content: Boolean! = false, 
    "Enabling this will remove quote tweet urls from LegacyTweet.full_text and from media url entities"
    simple_quoted_tweet: Boolean! = false
  ): LegacyTweet @strato_column(path : "graphql/weaverbird/legacy.Tweet") @strato_op(value : Fetch)
  """
  Helper column that maps a Tweet to Seq[ApiTweetMediaEntity]
  
  Generated from Strato column: [graphql/dataproducts/mediaEntities.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/dataproducts/mediaEntities)
  """
  media_entities: [ApiTweetMediaEntity!] @strato_column(path : "graphql/dataproducts/mediaEntities.Tweet") @strato_op(value : Fetch)
  """
  Returns a map of metric counts for a tweet.When excludeInaccessibleAdsAccounts is set, looking up metrics for a user other than yourself is validated in the backing service and only includes promoted metric count from ads account with access
  
  Generated from Strato column: [graphql/publisher-incentives/metrics.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/publisher-incentives/metrics)
  """
  metrics(enforced_age_limit_in_seconds: Int, exclude_inaccessible_ads_accounts: Boolean, metrics: [TweetMetricKeyInput!]!): TweetMetricsResult @development @strato_column(path : "graphql/publisher-incentives/metrics.Tweet") @strato_op(value : Fetch)
  """
  A conversation's moderated tweets timeline.
  
  Generated from Strato column: [graphql/tweetconvosvc/moderatedTweetTimeline.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/tweetconvosvc/moderatedTweetTimeline)
  """
  moderated_tweet_timeline: Timeline @strato_column(path : "graphql/tweetconvosvc/moderatedTweetTimeline.Tweet") @strato_op(value : Fetch)
  """
  High Recall NER field for DES Public API supported tweet languages
  
  Generated from Strato column: [graphql/des/ner.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/ner)
  """
  ner: NerData @strato_column(path : "graphql/des/ner.Tweet") @strato_op(value : Fetch)
  """
  Retrieves the organic total metrics for a tweet
  
  Generated from Strato column: [graphql/professional-analytics/organicMetricsTotal.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/professional-analytics/organicMetricsTotal)
  """
  organic_metrics_total(from_time: AnalyticsTimestampInput, requested_metrics: [AnalyticsMetricTypeInput!]!, to_time: AnalyticsTimestampInput): [AnayticsMetricsTotalValue!] @development @strato_column(path : "graphql/professional-analytics/organicMetricsTotal.Tweet") @strato_op(value : Fetch)
  """
  Tweet representing the previous version of the tweet.
  
  Generated from Strato column: [graphql/eduardo/previousTweetId.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/eduardo/previousTweetId)
  """
  previous_tweet_id: NumericString @development @strato_column(path : "graphql/eduardo/previousTweetId.Tweet") @strato_op(value : Fetch)
  """
  Fetches the public interest notice for a given Tweet ID if it exists
  
  Generated from Strato column: [graphql/embed_client/publicInterestNotice.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/embed_client/publicInterestNotice)
  """
  public_interest_notice: PublicInterestNotice @strato_column(path : "graphql/embed_client/publicInterestNotice.Tweet") @strato_op(value : Fetch)
  """
  Check tweet and user eligibility for Quick Promote
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteEligibility.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/quick-promote/quick-promoteEligibility)
  """
  quick_promote_eligibility(ads_account_id: String): TweetQuickPromoteEligibilityResponse @strato_column(path : "graphql/quick-promote/quick-promoteEligibility.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/professional-analytics/quick_promotion.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/professional-analytics/quick_promotion)"
  quick_promotion: Ad @strato_column(path : "graphql/professional-analytics/quick_promotion.Tweet") @strato_op(value : Fetch)
  """
    # quoteTweetsSlice.Tweet
  
    Column to retrieve all tweet ids that quote a particular tweet.
  
    ## Access
  
    This column uses the Search Earlybirds to do its work. Because of this you need to:
  
    1. Arrange quota with the #search-infra team.
    2. Set a strato HttpPublicEndpoint or HttpPrivateEndpoint [attribution]
    (https://docbird.twitter.biz/strato/RequestAttribution.html?highlight=attribution) with your client id before calling.
    3. Add your column to the access policy of search/earlybirds/earlybirds.strato
  
    ## Parameters
  
    Key is the tweet id which you would like to find all quoted tweets.
    View.nextToken is a base36 encode of the last tweet id returned in the result
    View.numResults is the number of results to return.
    Value is a QuoteTweetSliceResult
    This union type will either be
    1. a com.twitter.strato.graphql.Slice containing the results and a pagination token
    2. a com.twitter.strato.graphql.problems.ParameterValidationErrorResponse containing View parameter validation
    errors
  
  Generated from Strato column: [graphql/timelines/quoteTweetsSlice.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/timelines/quoteTweetsSlice)
  """
  quote_tweets_slice(excludes: [ExcludeInput!], next_token: String, num_results: Int): QuoteTweetsSliceResult @strato_column(path : "graphql/timelines/quoteTweetsSlice.Tweet") @strato_op(value : Fetch)
  """
    Returns inner quoted tweet when applicable, or else null. It enforces visibility rules around quoted tweets.
    For more information on these rules, see http://go/missingqt.
  
  Generated from Strato column: [graphql/quotedTweet.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/quotedTweet)
  """
  quoted_tweet: Tweet @deprecated(reason : "migrated to quoted_tweet_results") @strato_column(path : "graphql/quotedTweet.Tweet") @strato_op(value : Fetch)
  """
  Result field;   Returns inner quoted tweet when applicable, or else null. It enforces visibility rules around quoted tweets.
    For more information on these rules, see http://go/missingqt.
  
  Generated from Strato column: [graphql/quotedTweet.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/quotedTweet)
  """
  quoted_tweet_result: TweetResult @deprecated(reason : "migrated to quoted_tweet_results; field will always be null") @strato_column(path : "graphql/quotedTweet.Tweet") @strato_op(value : Fetch)
  """
  Result field;   Returns inner quoted tweet when applicable, or else null. It enforces visibility rules around quoted tweets.
    For more information on these rules, see http://go/missingqt.
  
  Generated from Strato column: [graphql/quotedTweet.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/quotedTweet)
  """
  quoted_tweet_results: TweetResults @strato_column(path : "graphql/quotedTweet.Tweet") @strato_op(value : Fetch)
  """
  This column handles the Tweet signals reaction metadata fetch operation, which currently returns a map of reaction type counts. More details can be found at go/signals-infra-tdd
  
  Generated from Strato column: [graphql/signals/reactionMetadata.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/signals/reactionMetadata)
  """
  reaction_metadata(viewer_id: NumericString): SignalsReactionMetadataResponse @development @strato_column(path : "graphql/signals/reactionMetadata.Tweet") @strato_op(value : Fetch)
  """
  This column handles the Tweet signals reaction perspective fetch operation, which fetches a user's reaction to a tweet if they have reacted to the given tweet. More details can be found at go/signals-infra-tdd
  
  Generated from Strato column: [graphql/signals/reactionPerspective.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/signals/reactionPerspective)
  """
  reaction_perspective(viewer_id: NumericString): SignalsReactionPerspectiveResponse @development @strato_column(path : "graphql/signals/reactionPerspective.Tweet") @strato_op(value : Fetch)
  """
  This column handles the Tweet signals reaction timeline fetch operation, which returns a timeline of the 100 most recent users that have reacted to a tweet in chronological order. Details can be found at go/signals-infra-tdd
  
  Generated from Strato column: [graphql/signals/reactionTimeline.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/signals/reactionTimeline)
  """
  reaction_timeline: TweetReactionTimelineResponse @development @strato_column(path : "graphql/signals/reactionTimeline.Tweet") @strato_op(value : Fetch)
  """
  Fetch a repliedTo tweet by id.
  
  Generated from Strato column: [graphql/des/replyTo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/replyTo)
  """
  reply_to: Tweet @deprecated(reason : "migrated to reply_to_results") @strato_column(path : "graphql/des/replyTo.Tweet") @strato_op(value : Fetch)
  """
  Result field; Fetch a repliedTo tweet by id.
  
  Generated from Strato column: [graphql/des/replyTo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/replyTo)
  """
  reply_to_result: TweetResult @deprecated(reason : "migrated to reply_to_results; field will always be null") @strato_column(path : "graphql/des/replyTo.Tweet") @strato_op(value : Fetch)
  """
  Result field; Fetch a repliedTo tweet by id.
  
  Generated from Strato column: [graphql/des/replyTo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/replyTo)
  """
  reply_to_results: TweetResults @strato_column(path : "graphql/des/replyTo.Tweet") @strato_op(value : Fetch)
  """
  ReplyTo User by Tweet Id.
  
  Generated from Strato column: [graphql/des/replyToUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/replyToUser)
  """
  reply_to_user: User @deprecated(reason : "migrated to reply_to_user_results") @strato_column(path : "graphql/des/replyToUser.Tweet") @strato_op(value : Fetch)
  """
  Result field; ReplyTo User by Tweet Id.
  
  Generated from Strato column: [graphql/des/replyToUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/replyToUser)
  """
  reply_to_user_result: UserResult @deprecated(reason : "migrated to reply_to_user_results; field will always be null") @strato_column(path : "graphql/des/replyToUser.Tweet") @strato_op(value : Fetch)
  """
  Result field; ReplyTo User by Tweet Id.
  
  Generated from Strato column: [graphql/des/replyToUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/replyToUser)
  """
  reply_to_user_results: UserResults @strato_column(path : "graphql/des/replyToUser.Tweet") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Provides a list of users who have retweeted a specified Tweet ID. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/retweetersBySliceResult.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/dataproducts/retweetersBySliceResult)
  """
  retweeters_by_slice_result(max_results: Short, pagination_token: String): RetweetersBySliceResult @development @strato_column(path : "graphql/dataproducts/retweetersBySliceResult.Tweet") @strato_op(value : Fetch)
  """
  Returns the realtime impression count of a tweet, since its creation
  
  Generated from Strato column: [graphql/rux/ruxImpression.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/rux/ruxImpression)
  """
  rux_impression: String @strato_column(path : "graphql/rux/ruxImpression.Tweet") @strato_op(value : Fetch)
  """
  A user's Birdwatch note for a Tweet.
  
  Generated from Strato column: [graphql/birdwatch/selfBirdwatchNote.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/birdwatch/selfBirdwatchNote)
  """
  self_birdwatch_note: BirdwatchNote @strato_column(path : "graphql/birdwatch/selfBirdwatchNote.Tweet") @strato_op(value : Fetch)
  """
  Eagerly computes a flattened struct for Semantic Core Entities. This is an optimization for performance reasons, and should only be used by the Public API at this time. This column may change or disappear in favor of other implementations so do not depend on it yet.
  
  Generated from Strato column: [graphql/des/semanticCoreEntitiesEager.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/semanticCoreEntitiesEager)
  """
  semantic_core_entities_eager: [SCEntity!] @strato_column(path : "graphql/des/semanticCoreEntitiesEager.Tweet") @strato_op(value : Fetch)
  """
  Hydrates and returns the displayed social proof on a tweet.
  
  Generated from Strato column: [graphql/timelines/socialProof.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/timelines/socialProof)
  """
  social_proof: Timeline @development @strato_column(path : "graphql/timelines/socialProof.Tweet") @strato_op(value : Fetch)
  """
  Fetches the Misinformation escherbird annotation for a given Tweet ID and returns a ForwardPivot. Please reach out to the semantic-core team if you have any questions!
  
  Generated from Strato column: [graphql/semanticCore/softInterventionPivot.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/semanticCore/softInterventionPivot)
  """
  soft_intervention_pivot: TimelineForwardPivot @strato_column(path : "graphql/semanticCore/softInterventionPivot.Tweet") @strato_op(value : Fetch)
  """
  Returns the author who started this conversation, populated if the author super follows them. For public Tweets, also takes the author's private super follow setting into consideration
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsConversationUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superFollowsConversationUser)
  """
  super_follows_conversation_user: User @deprecated(reason : "migrated to super_follows_conversation_user_results") @strato_column(path : "graphql/audiencerewards/superFollowsConversationUser.Tweet") @strato_op(value : Fetch)
  """
  Result field; Returns the author who started this conversation, populated if the author super follows them. For public Tweets, also takes the author's private super follow setting into consideration
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsConversationUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superFollowsConversationUser)
  """
  super_follows_conversation_user_result: UserResult @deprecated(reason : "migrated to super_follows_conversation_user_results; field will always be null") @strato_column(path : "graphql/audiencerewards/superFollowsConversationUser.Tweet") @strato_op(value : Fetch)
  """
  Result field; Returns the author who started this conversation, populated if the author super follows them. For public Tweets, also takes the author's private super follow setting into consideration
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsConversationUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superFollowsConversationUser)
  """
  super_follows_conversation_user_results: UserResults @strato_column(path : "graphql/audiencerewards/superFollowsConversationUser.Tweet") @strato_op(value : Fetch)
  """
  [Deprecated] Returns the author of the tweet quoted, populated if the author super follows them.
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsQuotedUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superFollowsQuotedUser)
  """
  super_follows_quoted_user: User @deprecated(reason : "RWDS-2357: no longer badging on quote tweets") @strato_column(path : "graphql/audiencerewards/superFollowsQuotedUser.Tweet") @strato_op(value : Fetch)
  """
  Result field; [Deprecated] Returns the author of the tweet quoted, populated if the author super follows them.
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsQuotedUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superFollowsQuotedUser)
  """
  super_follows_quoted_user_result: UserResult @deprecated(reason : "RWDS-2357: no longer badging on quote tweets") @strato_column(path : "graphql/audiencerewards/superFollowsQuotedUser.Tweet") @strato_op(value : Fetch)
  """
  Result field; [Deprecated] Returns the author of the tweet quoted, populated if the author super follows them.
  
  Generated from Strato column: [graphql/audiencerewards/superFollowsQuotedUser.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superFollowsQuotedUser)
  """
  super_follows_quoted_user_results: UserResults @deprecated(reason : "RWDS-2357: no longer badging on quote tweets") @strato_column(path : "graphql/audiencerewards/superFollowsQuotedUser.Tweet") @strato_op(value : Fetch)
  """
  Reads the total number of superlikes a Tweet received from the Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/superLikeCount.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superLikeCount)
  """
  super_like_count: Int @deprecated(reason : "Return hardcoded value for older clients that still fetch this field") @strato_column(path : "graphql/audiencerewards/superLikeCount.Tweet") @strato_op(value : Fetch)
  """
  Reads the number of super likes a Tweet received from the viewer from the Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/superLikeCountByViewer.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superLikeCountByViewer)
  """
  super_like_count_by_viewer: Int @deprecated(reason : "Return hardcoded value for older clients that still fetch this field") @strato_column(path : "graphql/audiencerewards/superLikeCountByViewer.Tweet") @strato_op(value : Fetch)
  """
  Bundles super like metadata from the Audience Rewards Service for strato extension use
  
  Generated from Strato column: [graphql/audiencerewards/superLikeMetadata.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superLikeMetadata)
  """
  super_like_metadata: AudienceAwardMetadata @development @strato_column(path : "graphql/audiencerewards/superLikeMetadata.Tweet") @strato_op(value : Fetch)
  """
  Reads the Tweet perspective of whether or not the viewer has super liked a Tweet from the Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/superLiked.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superLiked)
  """
  super_liked: Boolean @deprecated(reason : "Return hardcoded value for older clients that still fetch this field") @strato_column(path : "graphql/audiencerewards/superLiked.Tweet") @strato_op(value : Fetch)
  """
  Super likes are a way of virtual gifting on a tweet. Anyone can view a tweet's super like eligibility and only a tweet's author is able to set it.
  
  Generated from Strato column: [graphql/audiencerewards/superLikesEligible.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/audiencerewards/superLikesEligible)
  """
  super_likes_eligible: Boolean @development @strato_column(path : "graphql/audiencerewards/superLikesEligible.Tweet") @strato_op(value : Fetch)
  """
  This column is a GraphQl alias for timelines/core_cameraMoment.Tweet.strato
  
  Access policy: this column is subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/timelines/timelinesCameraMoment.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/timelines/timelinesCameraMoment)
  """
  timelines_camera_moment: CameraMoment @strato_column(path : "graphql/timelines/timelinesCameraMoment.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine translate a Tweet PDP-1990 and PC-2040, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/translateTweet.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/translateTweet)
  """
  translate_tweet(translation_source: String): TranslateTweetResponse @strato_column(path : "graphql/translation/translateTweet.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to auto translate a Tweet PDP-1990 and PC-2040, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/translationServiceGraphqlAutoTranslate.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/translationServiceGraphqlAutoTranslate)
  """
  translation_service_graphql_auto_translate(translation_source: String): AutoTranslateTweetResponse @strato_column(path : "graphql/translation/translationServiceGraphqlAutoTranslate.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine check if a Tweet is auto translatable for a user, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/translationServiceGraphqlIsAutoTranslatable.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/translationServiceGraphqlIsAutoTranslatable)
  """
  translation_service_graphql_is_auto_translatable(translation_source: String): Boolean @strato_column(path : "graphql/translation/translationServiceGraphqlIsAutoTranslatable.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine check if a Tweet is translatable for a user, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/translationServiceGraphqlIsTranslatable.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/translationServiceGraphqlIsTranslatable)
  """
  translation_service_graphql_is_translatable(translation_source: String): Boolean @strato_column(path : "graphql/translation/translationServiceGraphqlIsTranslatable.Tweet") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine translate a Tweet PDP-1990 and PC-2040, can optionally specify a translation provider with translationSource param, values include Ms, Google presently
  
  Generated from Strato column: [graphql/translation/translationServiceGraphqlTranslateTweet.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/translation/translationServiceGraphqlTranslateTweet)
  """
  translation_service_graphql_translate_tweet(translation_source: String): TranslateTweetResponse @strato_column(path : "graphql/translation/translationServiceGraphqlTranslateTweet.Tweet") @strato_op(value : Fetch)
  """
  Returns the Trusted Friends information to support Tweet rendering.
  
  Generated from Strato column: [graphql/trusted-friends/trustedFriendsInfo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/trusted-friends/trustedFriendsInfo)
  """
  trusted_friends_info: ApiTrustedFriendsInfo @deprecated(reason : "Superseded by `Tweet.trusted_friends_info_result`") @strato_column(path : "graphql/trusted-friends/trustedFriendsInfo.Tweet") @strato_op(value : Fetch)
  """
  Returns the Trusted Friends information to support Tweet rendering.
  
  Generated from Strato column: [graphql/trusted-friends/trustedFriendsInfoResult.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/trusted-friends/trustedFriendsInfoResult)
  """
  trusted_friends_info_result: TrustedFriendsInfoResult @development @strato_column(path : "graphql/trusted-friends/trustedFriendsInfoResult.Tweet") @strato_op(value : Fetch)
  """
  Provides a list of users who have liked a specified Tweet ID. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/tweetLikedBySliceResult.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/dataproducts/tweetLikedBySliceResult)
  """
  tweet_liked_by_slice_result(max_results: Short, pagination_token: String): TweetLikedBySliceResult @development @strato_column(path : "graphql/dataproducts/tweetLikedBySliceResult.Tweet") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/unifiedCard.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/unifiedCard)"
  unified_card: UnifiedCard @strato_column(path : "graphql/unifiedCard.Tweet") @strato_op(value : Fetch)
  """
  Shows if users related to this tweet, who might not have a mention entity, are unmentioned from the conversation
  
  Generated from Strato column: [graphql/consumer-privacy/unmentionInfo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/consumer-privacy/unmentionInfo)
  """
  unmention_info: UnmentionInfo @development @strato_column(path : "graphql/consumer-privacy/unmentionInfo.Tweet") @strato_op(value : Fetch)
  """
  URL Metadata for shortened t.co URL links
  
  Generated from Strato column: [graphql/des/urls.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/des/urls)
  """
  urls: [UrlMetadata!] @strato_column(path : "graphql/des/urls.Tweet") @strato_op(value : Fetch)
  """
  This column handles the vibes (aka status) vibeTag.Tweet fetch operation, which fetches the needed data for clients to display a given Tweet's vibe. More details can be found at go/vibe-backend-tdd
  
  Generated from Strato column: [graphql/vibes/vibeTag.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/vibes/vibeTag)
  """
  vibe_tag(viewer_id: NumericString): VibeTag @development @strato_column(path : "graphql/vibes/vibeTag.Tweet") @strato_op(value : Fetch)
  """
  Returns quartile views for a video in a Tweet owned by the call context User.
  
  Generated from Strato column: [graphql/dataproducts/video_quartile_view_count.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/dataproducts/video_quartile_view_count)
  """
  video_quartile_view_count: VideoQuartileViewResult @strato_column(path : "graphql/dataproducts/video_quartile_view_count.Tweet") @strato_op(value : Fetch)
  """
  Returns views for a video in a Tweet owned by the call context User.
  
  Generated from Strato column: [graphql/dataproducts/video_view_count.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/dataproducts/video_view_count)
  """
  video_view_count: VideoViewResult @strato_column(path : "graphql/dataproducts/video_view_count.Tweet") @strato_op(value : Fetch)
  """
  This column provides an read-only access to voice/storage/info.Tweet.strato
  
  Generated from Strato column: [graphql/voice/voiceInfo.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/voice/voiceInfo)
  """
  voice_info: VoiceInfo @strato_column(path : "graphql/voice/voiceInfo.Tweet") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.easypromote.TweetActivityMetric`](http://go/sg.thrift/TweetActivityMetric)"
type TweetActivityMetric @thrift_type(name : "TweetActivityMetric", package : "com.twitter.easypromote") {
  organic: Int53
  promoted: Int53
  total: Int53
}

"Generated from type: [`com.twitter.easypromote.TweetActivityMetricsResponse`](http://go/sg.thrift/TweetActivityMetricsResponse)"
type TweetActivityMetricsResponse @thrift_type(name : "TweetActivityMetricsResponse", package : "com.twitter.easypromote") {
  metrics: [EasyPromoteMetrics!]!
}

"Generated from type: [`com.twitter.tweetypie.graphql.TweetAnnotation`](http://go/sg.thrift/TweetAnnotation)"
type TweetAnnotation @thrift_type(name : "TweetAnnotation", package : "com.twitter.tweetypie.graphql") {
  domain_id: NumericString!
  entity_id: NumericString!
  group_id: NumericString!
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.TweetAward`](http://go/sg.thrift/TweetAward)"
type TweetAward @thrift_type(name : "TweetAward", package : "com.twitter.audiencerewards.productcatalog") {
  category_name: String!
  coins_required: Int53!
  description: String
  id: String!
  name: String
  thumbnail_url: String
}

"Generated from Strato space: `TweetAwardGiven`"
type TweetAwardGiven @strato_space(name : "TweetAwardGiven") {
  "A globally unique identifier"
  id: ID!
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from Strato space: `TweetCommunityRelationship`"
type TweetCommunityRelationship @strato_space(name : "TweetCommunityRelationship") {
  """
  Community of the tweet.
  
  Generated from Strato column: [graphql/communities/community.TweetCommunityRelationship](https://strato.twitter.biz/web/browse/TweetCommunityRelationship/graphql/communities/community)
  """
  community: Community! @strato_column(path : "graphql/communities/community.TweetCommunityRelationship") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Community moderation state of the tweet.
  
  Generated from Strato column: [graphql/communities/moderationState.TweetCommunityRelationship](https://strato.twitter.biz/web/browse/TweetCommunityRelationship/graphql/communities/moderationState)
  """
  moderation_state: CommunityTweetModerationState! @strato_column(path : "graphql/communities/moderationState.TweetCommunityRelationship") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
}

"Generated from type: [`com.twitter.strato.graphql.TweetCore`](http://go/sg.thrift/TweetCore)"
type TweetCore @thrift_type(name : "TweetCore", package : "com.twitter.strato.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetCountByDayResult`](http://go/sg.thrift/TweetCountByDayResult)"
type TweetCountByDayResult @thrift_type(name : "TweetCountByDayResult", package : "com.twitter.dataproducts.metrics.graphql") {
  timeseries: [Int53!]!
}

"Generated from type: [`com.twitter.eduardo.actions.TweetEditAction`](http://go/sg.thrift/TweetEditAction)"
type TweetEditAction @thrift_type(name : "TweetEditAction", package : "com.twitter.eduardo.actions") {
  editable_until: NumericString!
  edits_left: Int!
}

"Generated from type: [`com.twitter.eduardo.actions.TweetEditActionUnavailable`](http://go/sg.thrift/TweetEditActionUnavailable)"
type TweetEditActionUnavailable @thrift_type(name : "TweetEditActionUnavailable", package : "com.twitter.eduardo.actions") {
  message: String
  reason: TweetEditActionUnavailableReason!
}

"Generated from type: [`com.twitter.timelines.render.TweetEducationPrompt`](http://go/sg.thrift/TweetEducationPrompt)"
type TweetEducationPrompt @thrift_type(name : "TweetEducationPrompt", package : "com.twitter.timelines.render") {
  background_color: TimelineRosettaColor
  client_event_info: TimelineClientEventInfo
  description: TimelineRichText
  icon_pointer: PromptIconPointer
  impression_callback: TimelineCallback
  text_color: TimelineRosettaColor
  title: TimelineRichText
}

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.TweetEnrichments`](http://go/sg.thrift/TweetEnrichments)"
type TweetEnrichments @thrift_type(name : "TweetEnrichments", package : "com.twitter.strato.columns.creative_entity_enrichments") {
  interactive_text_enrichment: InteractiveTextEnrichment
}

"Generated from type: [`com.twitter.strato.graphql.TweetItem`](http://go/sg.thrift/TweetItem)"
type TweetItem @thrift_type(name : "TweetItem", package : "com.twitter.strato.graphql") {
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetLikedBySlice`](http://go/sg.thrift/TweetLikedBySlice)"
type TweetLikedBySlice @thrift_type(name : "TweetLikedBySlice", package : "com.twitter.dataproducts.aaa.graphql") {
  items: [TweetLikedBySliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [TweetLikedBySliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [TweetLikedBySliceItemResults]!
  slice_info: SliceInfo
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetMetricKey`](http://go/sg.thrift/TweetMetricKey)"
type TweetMetricKey @thrift_type(name : "TweetMetricKey", package : "com.twitter.dataproducts.metrics.graphql") {
  count_type: CountType
  metric_type: TweetMetricType!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetMetrics`](http://go/sg.thrift/TweetMetrics)"
type TweetMetrics @thrift_type(name : "TweetMetrics", package : "com.twitter.dataproducts.metrics.graphql") {
  metrics: [TweetMetricsMap!]!
}

type TweetMetricsMap {
  key: TweetMetricKey!
  value: Count!
}

"Generated from type: [`com.twitter.easypromote.TweetEligibilityResponse`](http://go/sg.thrift/TweetEligibilityResponse)"
type TweetQuickPromoteEligibilityResponse @thrift_type(name : "TweetEligibilityResponse", package : "com.twitter.easypromote") {
  ads_account_id: String
  eligibility: TweetQuickPromoteEligibility!
}

"Generated from type: [`com.twitter.signals.reactions.TweetReactionTimelineEntry`](http://go/sg.thrift/TweetReactionTimelineEntry)"
type TweetReactionTimelineEntry @thrift_type(name : "TweetReactionTimelineEntry", package : "com.twitter.signals.reactions") {
  reaction_type: SignalsReactionType!
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.signals.reactions.TweetReactionTimelineResponse`](http://go/sg.thrift/TweetReactionTimelineResponse)"
type TweetReactionTimelineResponse @thrift_type(name : "TweetReactionTimelineResponse", package : "com.twitter.signals.reactions") {
  reaction_type_map: [SignalsReactionTypeMap!]!
  tweet_reaction_timeline_entries: [TweetReactionTimelineEntry!]!
}

"Generated from Strato space: `TweetResults`"
type TweetResults @strato_space(name : "TweetResults") {
  "Generated from Strato column: [graphql/results/_result.Tweet](https://strato.twitter.biz/web/browse/Tweet/graphql/results/_result)"
  result: TweetResult @strato_column(path : "graphql/results/_result.Tweet") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from type: [`com.twitter.strato.graphql.TweetTombstone`](http://go/sg.thrift/TweetTombstone)"
type TweetTombstone @thrift_type(name : "TweetTombstone", package : "com.twitter.strato.graphql") {
  tombstone: Tombstone!
}

"Generated from type: [`com.twitter.strato.graphql.TweetUnavailable`](http://go/sg.thrift/TweetUnavailable)"
type TweetUnavailable @thrift_type(name : "TweetUnavailable", package : "com.twitter.strato.graphql") {
  message: String
  unavailable_reason: TweetUnavailableReason!
}

"Generated from type: [`com.twitter.strato.graphql.TweetVisibilityNudge`](http://go/sg.thrift/TweetVisibilityNudge)"
type TweetVisibilityNudge @thrift_type(name : "TweetVisibilityNudge", package : "com.twitter.strato.graphql") {
  text: TimelineRichText @development
  title: TimelineRichText @development
  url: TimelineUrl @development
}

"Generated from type: [`com.twitter.strato.graphql.TweetWithVisibilityResults`](http://go/sg.thrift/TweetWithVisibilityResults)"
type TweetWithVisibilityResults @thrift_type(name : "TweetWithVisibilityResults", package : "com.twitter.strato.graphql") {
  soft_intervention_pivot: SoftInterventionPivot
  tweet: Tweet!
  tweet_interstitial: TweetInterstitial
  tweet_visibility_nudge: TweetVisibilityNudge @development
}

"Generated from Strato space: `TwitterArticle`"
type TwitterArticle @strato_space(name : "TwitterArticle") {
  """
  Fetch cover image for Twitter Article.
  
  Generated from Strato column: [graphql/longform/coverImage.TwitterArticle](https://strato.twitter.biz/web/browse/TwitterArticle/graphql/longform/coverImage)
  """
  cover_image: ApiMedia @development @strato_column(path : "graphql/longform/coverImage.TwitterArticle") @strato_op(value : Fetch)
  """
  Fetch core Twitter Article data (including draftjs json).
  
  Generated from Strato column: [graphql/longform/data.TwitterArticle](https://strato.twitter.biz/web/browse/TwitterArticle/graphql/longform/data)
  """
  data: TwitterArticleData @development @strato_column(path : "graphql/longform/data.TwitterArticle") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Fetch media data for Twitter Article.
  
  Generated from Strato column: [graphql/longform/media.TwitterArticle](https://strato.twitter.biz/web/browse/TwitterArticle/graphql/longform/media)
  """
  media: [ApiMedia!] @development @strato_column(path : "graphql/longform/media.TwitterArticle") @strato_op(value : Fetch)
  """
  Fetch Twitter Article metadata.
  
  Generated from Strato column: [graphql/longform/metadata.TwitterArticle](https://strato.twitter.biz/web/browse/TwitterArticle/graphql/longform/metadata)
  """
  metadata: TwitterArticleMetadata @development @strato_column(path : "graphql/longform/metadata.TwitterArticle") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Fetch Twitter Article title.
  
  Generated from Strato column: [graphql/longform/title.TwitterArticle](https://strato.twitter.biz/web/browse/TwitterArticle/graphql/longform/title)
  """
  title: String @development @strato_column(path : "graphql/longform/title.TwitterArticle") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleData`](http://go/sg.thrift/TwitterArticleData)"
type TwitterArticleData @thrift_type(name : "TwitterArticleData", package : "com.twitter.longform.composer") {
  "Json representation of the draft.js ContentState"
  content_state_json: String! @development
  "Plaintext representation of the Twitter Article data"
  plaintext: String @development
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleMetadata`](http://go/sg.thrift/TwitterArticleMetadata)"
type TwitterArticleMetadata @thrift_type(name : "TwitterArticleMetadata", package : "com.twitter.longform.composer") {
  author: User! @deprecated(reason : "migrated to author_results")
  author_result: UserResult @deprecated(reason : "migrated to author_results; field will always be null")
  author_results: UserResults! @development
  created_at_ms: NumericString! @development
  published_at_ms: NumericString @development
  updated_at_ms: NumericString! @development
  visibility: TwitterArticleVisibility! @development
}

"Generated from Strato space: `TwitterArticleResults`"
type TwitterArticleResults @strato_space(name : "TwitterArticleResults") {
  "Generated from Strato column: [graphql/results/_result.TwitterArticle](https://strato.twitter.biz/web/browse/TwitterArticle/graphql/results/_result)"
  result: TwitterArticleResult @development @strato_column(path : "graphql/results/_result.TwitterArticle") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleUnavailable`](http://go/sg.thrift/TwitterArticleUnavailable)"
type TwitterArticleUnavailable @thrift_type(name : "TwitterArticleUnavailable", package : "com.twitter.longform.composer") {
  message: String @development
  unavailable_reason: TwitterArticleUnavailableReason! @development
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticlesSlice`](http://go/sg.thrift/TwitterArticlesSlice)"
type TwitterArticlesSlice @thrift_type(name : "TwitterArticlesSlice", package : "com.twitter.longform.composer") {
  items: [TwitterArticlesSliceItem!]! @development
  slice_info: SliceInfo! @development
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticlesSliceItem`](http://go/sg.thrift/TwitterArticlesSliceItem)"
type TwitterArticlesSliceItem @thrift_type(name : "TwitterArticlesSliceItem", package : "com.twitter.longform.composer") {
  twitter_article: TwitterArticle! @deprecated(reason : "migrated to twitter_article_results")
  twitter_article_results: TwitterArticleResults! @development
}

"Generated from type: [`com.twitter.strato.graphql.TwitterListItem`](http://go/sg.thrift/TwitterListItem)"
type TwitterListItem @thrift_type(name : "TwitterListItem", package : "com.twitter.strato.graphql") {
  list: List!
}

"Generated from type: [`com.twitter.strato.graphql.TypeaheadEventItem`](http://go/sg.thrift/TypeaheadEventItem)"
type TypeaheadEventItem @thrift_type(name : "TypeaheadEventItem", package : "com.twitter.strato.graphql") {
  live_event: LiveEvent!
  metadata: TypeaheadMetadata
}

"Generated from type: [`com.twitter.strato.graphql.TypeaheadMetadata`](http://go/sg.thrift/TypeaheadMetadata)"
type TypeaheadMetadata @thrift_type(name : "TypeaheadMetadata", package : "com.twitter.strato.graphql") {
  result_context: TypeaheadResultContext
  score: Float!
  source: String
}

"Generated from type: [`com.twitter.strato.graphql.TypeaheadQuerySuggestionItem`](http://go/sg.thrift/TypeaheadQuerySuggestionItem)"
type TypeaheadQuerySuggestionItem @thrift_type(name : "TypeaheadQuerySuggestionItem", package : "com.twitter.strato.graphql") {
  metadata: TypeaheadMetadata
  query: String!
}

"Generated from type: [`com.twitter.strato.graphql.TypeaheadResultContext`](http://go/sg.thrift/TypeaheadResultContext)"
type TypeaheadResultContext @thrift_type(name : "TypeaheadResultContext", package : "com.twitter.strato.graphql") {
  context_type: TypeaheadResultContextType!
  display_string: String!
}

type TypeaheadSlice {
  items: [TypeaheadItem!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.strato.graphql.TypeaheadUserItem`](http://go/sg.thrift/TypeaheadUserItem)"
type TypeaheadUserItem @thrift_type(name : "TypeaheadUserItem", package : "com.twitter.strato.graphql") {
  metadata: TypeaheadMetadata
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

type TypeaheadValidationError {
  message: String!
}

type TypeaheadValidationErrors {
  errors: [TypeaheadValidationError!]!
}

"Generated from type: [`com.twitter.convosvc.strato.TypingIndicatorFailure`](http://go/sg.thrift/TypingIndicatorFailure)"
type TypingIndicatorFailure @thrift_type(name : "TypingIndicatorFailure", package : "com.twitter.convosvc.strato") {
  conversation_validation_failure_type: ConversationValidationFailureType
  message: String
  reason: TypingIndicatorFailureReason!
}

"Generated from type: [`com.twitter.convosvc.strato.TypingIndicatorSuccess`](http://go/sg.thrift/TypingIndicatorSuccess)"
type TypingIndicatorSuccess @thrift_type(name : "TypingIndicatorSuccess", package : "com.twitter.convosvc.strato") {
  conversation_id: String!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnblockInvalidRequestResult`](http://go/sg.thrift/UnblockInvalidRequestResult)"
type UnblockInvalidRequestResult @thrift_type(name : "UnblockInvalidRequestResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  parameter_error_response: ParameterValidationErrorResponse!
  unblock_invalid_request_reason: UnblockInvalidRequestReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnblockSuccessResult`](http://go/sg.thrift/UnblockSuccessResult)"
type UnblockSuccessResult @thrift_type(name : "UnblockSuccessResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  unblock_success_reason: UnblockSuccessReason!
}

"Generated from type: [`com.twitter.subscription_product_features.UndoTweetSettings`](http://go/sg.thrift/UndoTweetSettings)"
type UndoTweetSettings @thrift_type(name : "UndoTweetSettings", package : "com.twitter.subscription_product_features") {
  undo_original_tweet_enabled: Boolean
  undo_poll_tweet_enabled: Boolean
  undo_quote_tweet_enabled: Boolean
  undo_reply_tweet_enabled: Boolean
  undo_thread_tweet_enabled: Boolean
  undo_tweet_duration_secs: Int
  view_tweet_after_sending_enabled: Boolean
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowFailedResult`](http://go/sg.thrift/UnfollowFailedResult)"
type UnfollowFailedResult @thrift_type(name : "UnfollowFailedResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  unfollow_failed_reason: UnfollowFailedReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowInvalidRequestResult`](http://go/sg.thrift/UnfollowInvalidRequestResult)"
type UnfollowInvalidRequestResult @thrift_type(name : "UnfollowInvalidRequestResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  parameter_error_response: ParameterValidationErrorResponse!
  unfollow_invalid_request_reason: UnfollowInvalidRequestReason!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.UnfollowRetweetsFailure`](http://go/sg.thrift/UnfollowRetweetsFailure)"
type UnfollowRetweetsFailure @thrift_type(name : "UnfollowRetweetsFailure", package : "com.twitter.strato.columns.socialgraph") {
  failure_reason: UnfollowRetweetsFailureReason!
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.UnfollowRetweetsSuccess`](http://go/sg.thrift/UnfollowRetweetsSuccess)"
type UnfollowRetweetsSuccess @thrift_type(name : "UnfollowRetweetsSuccess", package : "com.twitter.strato.columns.socialgraph") {
  success_reason: UnfollowRetweetsSuccessReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowSuccessResult`](http://go/sg.thrift/UnfollowSuccessResult)"
type UnfollowSuccessResult @thrift_type(name : "UnfollowSuccessResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  unfollow_success_reason: UnfollowSuccessReason!
}

"Generated from Strato space: `UnifiedCard`"
type UnifiedCard @strato_space(name : "UnifiedCard") {
  """
  Card type of unified card.
  
  Generated from Strato column: [graphql/unified-cards/cardType.UnifiedCard](https://strato.twitter.biz/web/browse/UnifiedCard/graphql/unified-cards/cardType)
  """
  card_type: CardType @strato_column(path : "graphql/unified-cards/cardType.UnifiedCard") @strato_op(value : Fetch)
  """
  Card Uri of unified card.
  
  Generated from Strato column: [graphql/unified-cards/cardUri.UnifiedCard](https://strato.twitter.biz/web/browse/UnifiedCard/graphql/unified-cards/cardUri)
  """
  card_uri: String @strato_column(path : "graphql/unified-cards/cardUri.UnifiedCard") @strato_op(value : Fetch)
  """
  Display rendering signals of UnifiedCard.
  
  Generated from Strato column: [graphql/unified-cards/displayOptions.UnifiedCard](https://strato.twitter.biz/web/browse/UnifiedCard/graphql/unified-cards/displayOptions)
  """
  display_options: CardDisplayOptions @strato_column(path : "graphql/unified-cards/displayOptions.UnifiedCard") @strato_op(value : Fetch)
  """
  Experiment signals for unified card.
  
  Generated from Strato column: [graphql/unified-cards/experimentSignals.UnifiedCard](https://strato.twitter.biz/web/browse/UnifiedCard/graphql/unified-cards/experimentSignals)
  """
  experiment_signals: CardExperimentSignals @strato_column(path : "graphql/unified-cards/experimentSignals.UnifiedCard") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Layout of UnifiedCard indicates arragement and order of components. Required field
  
  Generated from Strato column: [graphql/unified-cards/layout.UnifiedCard](https://strato.twitter.biz/web/browse/UnifiedCard/graphql/unified-cards/layout)
  """
  layout: CardLayout @strato_column(path : "graphql/unified-cards/layout.UnifiedCard") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.tweb3.graphql.model.UNKNOWN`](http://go/sg.thrift/UNKNOWN)"
type UnknownSmartContract @thrift_type(name : "UNKNOWN", package : "com.twitter.tweb3.graphql.model") {
  address: String!
  name: String
  network: Network!
  symbol: String
  token_standard: String
}

"Generated from type: [`com.twitter.consumer_privacy.mention_controls.UnmentionInfo`](http://go/sg.thrift/UnmentionInfo)"
type UnmentionInfo @thrift_type(name : "UnmentionInfo", package : "com.twitter.consumer_privacy.mention_controls") {
  "Deprecated( Superseded by unmentionedUsers)"
  is_in_reply_to_user_unmentioned: Boolean @deprecated(reason : "Superseded by unmentionedUsers")
  "Deprecated( Superseded by unmentionedUsers)"
  is_user_unmentioned: Boolean @deprecated(reason : "Superseded by unmentionedUsers")
  "Deprecated( Superseded by unmentionedUsers)"
  is_viewer_unmentioned: Boolean @deprecated(reason : "Superseded by unmentionedUsers")
  "List of unmentioned users relevant for the tweet: mentioned users, tweet author, author or the replied tweet and the logged in user"
  unmentioned_users: [User!] @deprecated(reason : "migrated to unmentioned_users_results")
  "Result field; List of unmentioned users relevant for the tweet: mentioned users, tweet author, author or the replied tweet and the logged in user"
  unmentioned_users_result: [UserResult] @deprecated(reason : "migrated to unmentioned_users_results; field will always be null")
  "Result field; List of unmentioned users relevant for the tweet: mentioned users, tweet author, author or the replied tweet and the logged in user"
  unmentioned_users_results: [UserResults!]
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnmuteInvalidRequestResult`](http://go/sg.thrift/UnmuteInvalidRequestResult)"
type UnmuteInvalidRequestResult @thrift_type(name : "UnmuteInvalidRequestResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  parameter_error_response: ParameterValidationErrorResponse!
  unmute_invalid_request_reason: UnmuteInvalidRequestReason!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnmuteSuccessResult`](http://go/sg.thrift/UnmuteSuccessResult)"
type UnmuteSuccessResult @thrift_type(name : "UnmuteSuccessResult", package : "com.twitter.dataproducts.userrelationships.graphql") {
  unmute_success_reason: UnmuteSuccessReason!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.UnownedTweet`](http://go/sg.thrift/UnownedTweet)"
type UnownedTweet @thrift_type(name : "UnownedTweet", package : "com.twitter.dataproducts.metrics.graphql") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.channels.management.pin_list.v3.UnpinListSuccessResult`](http://go/sg.thrift/UnpinListSuccessResult)"
type UnpinListSuccessResult @thrift_type(name : "UnpinListSuccessResult", package : "com.twitter.channels.management.pin_list.v3") {
  pinned_lists: [List!]!
}

"Generated from type: [`com.twitter.dataproducts.search.common.UnprocessableQueryResponse`](http://go/sg.thrift/UnprocessableQueryResponse)"
type UnprocessableQueryResponse @thrift_type(name : "UnprocessableQueryResponse", package : "com.twitter.dataproducts.search.common") {
  error_message: String!
}

"Generated from type: [`com.twitter.tweetypie.graphql.UnretweetResponse`](http://go/sg.thrift/UnretweetResponse)"
type UnretweetResponse @thrift_type(name : "UnretweetResponse", package : "com.twitter.tweetypie.graphql") {
  "The source tweet that was unretweeted."
  source_tweet: Tweet @deprecated(reason : "migrated to source_tweet_results")
  "Result field; The source tweet that was unretweeted."
  source_tweet_result: TweetResult @deprecated(reason : "migrated to source_tweet_results; field will always be null")
  "Result field; The source tweet that was unretweeted."
  source_tweet_results: TweetResults
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UploadProductResult`](http://go/sg.thrift/UploadProductResult)"
type UploadProductResult @thrift_type(name : "UploadProductResult", package : "com.twitter.commerce.catalog.api.graphql") {
  errors: [ProductUpsertError!]!
  product_id: String!
  product_key: NumericString
  upload_status: UploadProductIndividualStatus!
  warnings: [ProductUpsertWarning!]!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UploadProductsResponse`](http://go/sg.thrift/UploadProductsResponse)"
type UploadProductsResponse @thrift_type(name : "UploadProductsResponse", package : "com.twitter.commerce.catalog.api.graphql") {
  products_results: [UploadProductResult!]!
}

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.Url`](http://go/sg.thrift/Url)"
type Url @thrift_type(name : "Url", package : "com.twitter.strato.columns.creative_entity_enrichments") {
  full_url: String!
}

"Generated from type: [`com.twitter.strato.graphql.UrlMetadata`](http://go/sg.thrift/UrlMetadata)"
type UrlMetadata @thrift_type(name : "UrlMetadata", package : "com.twitter.strato.graphql") {
  description: String
  images: [ApiImage!]
  shortened_url: String
  status: Int
  title: String
  unwound_url: String
}

type UrlParams {
  key: String!
  value: String!
}

"Generated from type: [`com.twitter.strato.graphql.UrlsEntity`](http://go/sg.thrift/UrlsEntity)"
type UrlsEntity @thrift_type(name : "UrlsEntity", package : "com.twitter.strato.graphql") {
  display_url: String
  expanded_url: String
  indices: [Int53!]
  url: String
}

"Generated from Strato space: `User`"
type User @strato_space(name : "User") {
  """
  Account label data for twitter account.
  
  Generated from Strato column: [graphql/account-types/accountLabel.User](https://strato.twitter.biz/web/browse/User/graphql/account-types/accountLabel)
  """
  account_label: UserAccountLabel @strato_column(path : "graphql/account-types/accountLabel.User") @strato_op(value : Fetch)
  """
  This column handles the vibes (aka status) activeVibe.User fetch operation, which fetches the given user's active vibe More details can be found at go/vibe-backend-tdd
  
  Generated from Strato column: [graphql/vibes/activeVibe.User](https://strato.twitter.biz/web/browse/User/graphql/vibes/activeVibe)
  """
  active_vibe(viewer_id: NumericString): ActiveVibe @development @strato_column(path : "graphql/vibes/activeVibe.User") @strato_op(value : Fetch)
  """
  Status of an application to share ad revenue
  
  Generated from Strato column: [graphql/audiospace/adRevenueSharingApplicationStatus.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/adRevenueSharingApplicationStatus)
  """
  ad_revenue_sharing_application_status: SellerApplicationState @strato_column(path : "graphql/audiospace/adRevenueSharingApplicationStatus.User") @strato_op(value : Fetch)
  """
  List of requirements which you haven't met in order to share ad revenue. Empty if you're ok.
  
  Generated from Strato column: [graphql/audiospace/adRevenueSharingEligibility.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/adRevenueSharingEligibility)
  """
  ad_revenue_sharing_eligibility: [SellerEligibilityViolations!] @strato_column(path : "graphql/audiospace/adRevenueSharingEligibility.User") @strato_op(value : Fetch)
  """
  Fetch Ad Accounts by the Primary Promotable User
  
  Generated from Strato column: [graphql/ads/hubble/queries/advertiserAccountsByPrimaryPromotableUser.User](https://strato.twitter.biz/web/browse/User/graphql/ads/hubble/queries/advertiserAccountsByPrimaryPromotableUser)
  """
  advertiser_accounts_by_primary_promotable_user(cursor: String!): AdvertiserAccountsSlice @strato_column(path : "graphql/ads/hubble/queries/advertiserAccountsByPrimaryPromotableUser.User") @strato_op(value : Fetch)
  """
    This column serves as a legacy GraphQl alias for identity/profile_labels/highlightedLabel.User.strato
    exists only because old clients are querying for this column.
  
  Generated from Strato column: [graphql/affiliates/affiliatesHighlightedLabel.User](https://strato.twitter.biz/web/browse/User/graphql/affiliates/affiliatesHighlightedLabel)
  """
  affiliates_highlighted_label: HighlightedUserLabelResponse @deprecated(reason : "Moved to `identity_profile_labels_highlighted_label`") @strato_column(path : "graphql/affiliates/affiliatesHighlightedLabel.User") @strato_op(value : Fetch)
  """
  Aggregage rating metrics for a user provided by other users (returns metrics for the authenticated user independent of key).
  
  Generated from Strato column: [graphql/birdwatch/aggregateRatingReceived.User](https://strato.twitter.biz/web/browse/User/graphql/birdwatch/aggregateRatingReceived)
  """
  aggregate_rating_received: BirdwatchAggregateRating @deprecated(reason : "Do not use User space, use ratings_received_ fields under BirdwatchProfile space") @strato_column(path : "graphql/birdwatch/aggregateRatingReceived.User") @strato_op(value : Fetch)
  """
  Returns all Twitter supporting languages that are localized by user's language
  
  Generated from Strato column: [graphql/translation/allAutoTranslateLanguages.User](https://strato.twitter.biz/web/browse/User/graphql/translation/allAutoTranslateLanguages)
  """
  all_auto_translate_languages: Languages @strato_column(path : "graphql/translation/allAutoTranslateLanguages.User") @strato_op(value : Fetch)
  """
  All the lists a user is subscribed to, including the ones they own.
  
  Generated from Strato column: [graphql/list/allSubscribedListsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/list/allSubscribedListsTimeline)
  """
  all_subscribed_lists_timeline: Timeline @strato_column(path : "graphql/list/allSubscribedListsTimeline.User") @strato_op(value : Fetch)
  """
  Status of an application to sell tickets to audio spaces
  
  Generated from Strato column: [graphql/audiospace/audioSpacesSellerApplicationStatus.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/audioSpacesSellerApplicationStatus)
  """
  audio_spaces_seller_application_status: SellerApplicationState @strato_column(path : "graphql/audiospace/audioSpacesSellerApplicationStatus.User") @strato_op(value : Fetch)
  """
  List of requirements which you haven't met in order to sell tickets to spaces. Empty if you're ok.
  
  Generated from Strato column: [graphql/audiospace/audioSpacesSellerEligibility.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/audioSpacesSellerEligibility)
  """
  audio_spaces_seller_eligibility: [String!] @strato_column(path : "graphql/audiospace/audioSpacesSellerEligibility.User") @strato_op(value : Fetch)
  """
  GraphQL column for fetching auto translate user settings data
  
  Generated from Strato column: [graphql/translation/autoTranslateSettings.User](https://strato.twitter.biz/web/browse/User/graphql/translation/autoTranslateSettings)
  """
  auto_translate_settings: AutoTranslateSettings @strato_column(path : "graphql/translation/autoTranslateSettings.User") @strato_op(value : Fetch)
  """
  Gets Avatar Content for Fleets and Spaces. This column only returns select audio space data due to latency requirements. If you notice some AudioSpace data is not available reach out in #fleets-eng
  
  Generated from Strato column: [graphql/fleets/avatarFleets.User](https://strato.twitter.biz/web/browse/User/graphql/fleets/avatarFleets)
  """
  avatar_fleets: AvatarUserDataResponse @strato_column(path : "graphql/fleets/avatarFleets.User") @strato_op(value : Fetch)
  """
  Status of an application to add awards to your account
  
  Generated from Strato column: [graphql/awards/awardsApplicationStatus.User](https://strato.twitter.biz/web/browse/User/graphql/awards/awardsApplicationStatus)
  """
  awards_application_status: SellerApplicationState @development @strato_column(path : "graphql/awards/awardsApplicationStatus.User") @strato_op(value : Fetch)
  """
  GetSliceResponse endpoint for sample mixer Beta product
  
  Generated from Strato column: [graphql/product-mixer/betaSampleMixerSlice.User](https://strato.twitter.biz/web/browse/User/graphql/product-mixer/betaSampleMixerSlice)
  """
  beta_sample_mixer_slice(cursor_string: String, max_count: Int): BetaSampleMixerSliceResult @development @strato_column(path : "graphql/product-mixer/betaSampleMixerSlice.User") @strato_op(value : Fetch)
  """
  Birdwatch badges for a user (returns the badges of the authenticated user independent of key).
  
  Generated from Strato column: [graphql/birdwatch/birdwatchBadges.User](https://strato.twitter.biz/web/browse/User/graphql/birdwatch/birdwatchBadges)
  """
  birdwatch_badges: [BirdwatchBadge!] @deprecated(reason : "Do not use User space, use the \"badges\" field under BirdwatchProfile space") @strato_column(path : "graphql/birdwatch/birdwatchBadges.User") @strato_op(value : Fetch)
  """
  Birdwatch notes written by user (returns notes written by the authenticated user independent of key).
  
  Generated from Strato column: [graphql/birdwatch/birdwatchNotes.User](https://strato.twitter.biz/web/browse/User/graphql/birdwatch/birdwatchNotes)
  """
  birdwatch_notes(count: Int, cursor: String): BirdwatchNotesSlice @deprecated(reason : "Use authenticated_user_all_birdwatch_notes defined under Query") @strato_column(path : "graphql/birdwatch/birdwatchNotes.User") @strato_op(value : Fetch)
  """
  Slice of bookmark collections for user
  
  Generated from Strato column: [graphql/timelines/bookmarkCollectionsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/bookmarkCollectionsSlice)
  """
  bookmark_collections_slice(count: Int, cursor: String, tweet_id: NumericString): BookmarkCollectionsSlice @strato_column(path : "graphql/timelines/bookmarkCollectionsSlice.User") @strato_op(value : Fetch)
  """
  A business entity
  
  Generated from Strato column: [graphql/bizprofiles/business.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/business)
  """
  business: Business @strato_column(path : "graphql/bizprofiles/business.User") @strato_op(value : Fetch)
  """
  Stores metadata describing how a user has configured their canvas profile.
  
  Generated from Strato column: [graphql/canvas/canvasCanvasConfig.User](https://strato.twitter.biz/web/browse/User/graphql/canvas/canvasCanvasConfig)
  """
  canvas_canvas_config: String @development @strato_column(path : "graphql/canvas/canvasCanvasConfig.User") @strato_op(value : Fetch)
  """
  [Deprecated use claims.strato directly] Returns a list of claims for the user.
  
  Generated from Strato column: [graphql/subscription-services/claims.User](https://strato.twitter.biz/web/browse/User/graphql/subscription-services/claims)
  """
  claims: [Claim!] @strato_column(path : "graphql/subscription-services/claims.User") @strato_op(value : Fetch)
  """
  Returns commerce catalogs for a given user leveraging subquery caching of the mh dataset for the core data fields
  
  Generated from Strato column: [graphql/commerce/catalog/operations/commerceCatalogs.User](https://strato.twitter.biz/web/browse/User/graphql/commerce/catalog/operations/commerceCatalogs)
  """
  commerce_catalogs: [CommerceCatalog!] @strato_column(path : "graphql/commerce/catalog/operations/commerceCatalogs.User") @strato_op(value : Fetch)
  """
  Slice of communities the user is a member of.
  
  Generated from Strato column: [graphql/communities/communityMembershipsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/communities/communityMembershipsSlice)
  """
  community_memberships_slice(count: Int, cursor: String): CommunitySlice! @strato_column(path : "graphql/communities/communityMembershipsSlice.User") @strato_op(value : Fetch)
  """
  Timeline of communities the user is a member of.
  
  Generated from Strato column: [graphql/communities/communityMembershipsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/communities/communityMembershipsTimeline)
  """
  community_memberships_timeline: Timeline! @development @strato_column(path : "graphql/communities/communityMembershipsTimeline.User") @strato_op(value : Fetch)
  """
  Relationship between a community and the user.
  
  Generated from Strato column: [graphql/communities/communityRelationship.User](https://strato.twitter.biz/web/browse/User/graphql/communities/communityRelationship)
  """
  community_relationship(community_id: NumericString!): UserCommunityRelationship! @strato_column(path : "graphql/communities/communityRelationship.User") @strato_op(value : Fetch)
  """
  Role of a user in a community.
  
  Generated from Strato column: [graphql/communities/communityRole.User](https://strato.twitter.biz/web/browse/User/graphql/communities/communityRole)
  """
  community_role(community_id: NumericString!): CommunityRole! @deprecated(reason : "Superseded by User.community_relationship.role.") @strato_column(path : "graphql/communities/communityRole.User") @strato_op(value : Fetch)
  """
  Fetch a slice of audio spaces that have been created by a user.
  
  Generated from Strato column: [graphql/audiospace/createdSpacesSlice.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/createdSpacesSlice)
  """
  created_spaces_slice(cursor: String, filter: AudioSpaceFilterInput!, limit: Int): SpaceSlice @development @strato_column(path : "graphql/audiospace/createdSpacesSlice.User") @strato_op(value : Fetch)
  """
  Fetch AudioSpaces with tickets created by User
  
  Generated from Strato column: [graphql/audiospace/createdTicketedSpacesSlice.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/createdTicketedSpacesSlice)
  """
  created_ticketed_spaces_slice(cursor: String, limit: Int): AudioSpaceSlice @strato_column(path : "graphql/audiospace/createdTicketedSpacesSlice.User") @strato_op(value : Fetch)
  """
  Payouts received by respective user
  
  Generated from Strato column: [graphql/creator-dashboard/creatorPayoutsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/creatorPayoutsSlice)
  """
  creator_payouts_slice(cursor: String, limit: Int): CreatorPayoutSlice @development @strato_column(path : "graphql/creator-dashboard/creatorPayoutsSlice.User") @strato_op(value : Fetch)
  """
  The user's invitation preferences - who is allowed to send invitation requests.
  
  Generated from Strato column: [graphql/account-delegation/delegate/delegationInvitationPreferences.User](https://strato.twitter.biz/web/browse/User/graphql/account-delegation/delegate/delegationInvitationPreferences)
  """
  delegation_invitation_preferences: DelegationInvitationPreferences @development @strato_column(path : "graphql/account-delegation/delegate/delegationInvitationPreferences.User") @strato_op(value : Fetch)
  """
  Checks whether a DM muting relationship exists between the perspectival (authenticated) user and the target user (user id in the key)
  
  Generated from Strato column: [graphql/directmessages/dmMuting.User](https://strato.twitter.biz/web/browse/User/graphql/directmessages/dmMuting)
  """
  dm_muting: Boolean @strato_column(path : "graphql/directmessages/dmMuting.User") @strato_op(value : Fetch)
  """
  A column for reading and writing a DM user's nsfw setting
  
  Generated from Strato column: [graphql/directmessages/dmNsfwMediaFilter.User](https://strato.twitter.biz/web/browse/User/graphql/directmessages/dmNsfwMediaFilter)
  """
  dm_nsfw_media_filter: Boolean @development @strato_column(path : "graphql/directmessages/dmNsfwMediaFilter.User") @strato_op(value : Fetch)
  """
  List of all editable profile modules for a user
  
  Generated from Strato column: [graphql/bizprofiles/editableProfilemodules.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/editableProfilemodules)
  """
  editable_profilemodules: UserBusinessEditableModules @strato_column(path : "graphql/bizprofiles/editableProfilemodules.User") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/example-entity/exampleEntity.User](https://strato.twitter.biz/web/browse/User/graphql/example-entity/exampleEntity)"
  example_entity: ExampleEntity @deprecated(reason : "migrated to example_entity_results") @example @strato_column(path : "graphql/example-entity/exampleEntity.User") @strato_op(value : Fetch)
  "Result field; Generated from Strato column: [graphql/example-entity/exampleEntity.User](https://strato.twitter.biz/web/browse/User/graphql/example-entity/exampleEntity)"
  example_entity_results: ExampleEntityResults @example @strato_column(path : "graphql/example-entity/exampleEntity.User") @strato_op(value : Fetch)
  """
  Whether the viewer is set to receive notifications for [only] exclusive tweets authored by the user. Mutually exclusive to the device follow & live follow relationships.
  
  Generated from Strato column: [graphql/audiencerewards/exclusiveTweetFollowing.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/exclusiveTweetFollowing)
  """
  exclusive_tweet_following: Boolean @strato_column(path : "graphql/audiencerewards/exclusiveTweetFollowing.User") @strato_op(value : Fetch)
  """
  The user's Favorites Timeline
  
  Generated from Strato column: [graphql/timelines/favoritesByTimeTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/favoritesByTimeTimeline)
  """
  favorites_by_time_timeline: Timeline @strato_column(path : "graphql/timelines/favoritesByTimeTimeline.User") @strato_op(value : Fetch)
  """
  v2 timeline of user's favorites without URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone)
  
  Generated from Strato column: [graphql/timelines/favoritesByTimeTimelineV2.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/favoritesByTimeTimelineV2)
  """
  favorites_by_time_timeline_v2: Timeline @strato_column(path : "graphql/timelines/favoritesByTimeTimelineV2.User") @strato_op(value : Fetch)
  """
  Provides a list of tweet IDs the specified user has liked. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/favoritesSliceResult.User](https://strato.twitter.biz/web/browse/User/graphql/dataproducts/favoritesSliceResult)
  """
  favorites_slice_result(max_results: Short, pagination_token: String): UserFavoritesSliceResult @development @strato_column(path : "graphql/dataproducts/favoritesSliceResult.User") @strato_op(value : Fetch)
  """
  Followed Topics Other Timeline
  
  Generated from Strato column: [graphql/interestsMixer/followedTopicsOtherTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/interestsMixer/followedTopicsOtherTimeline)
  """
  followed_topics_other_timeline: Timeline @strato_column(path : "graphql/interestsMixer/followedTopicsOtherTimeline.User") @strato_op(value : Fetch)
  """
  The user's Followed Topics Timeline
  
  Generated from Strato column: [graphql/interestsMixer/followedTopicsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/interestsMixer/followedTopicsTimeline)
  """
  followed_topics_timeline: Timeline @strato_column(path : "graphql/interestsMixer/followedTopicsTimeline.User") @strato_op(value : Fetch)
  """
  A user's followers timeline, with the appropriate permissions checks.
  
  Generated from Strato column: [graphql/socialgraph/followers.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/followers)
  """
  followers(count: Int, cursor: String): TimelineTimeline @deprecated(reason : "Moved to `followers_timeline.User`") @strato_column(path : "graphql/socialgraph/followers.User") @strato_op(value : Fetch)
  """
  Returns a paginated list of followers of a user
  
  Generated from Strato column: [graphql/dataproducts/followersSlice.User](https://strato.twitter.biz/web/browse/User/graphql/dataproducts/followersSlice)
  """
  followers_slice(cursor: String, max_results: Int): UsersSlice @strato_column(path : "graphql/dataproducts/followersSlice.User") @strato_op(value : Fetch)
  """
  A user's followers timeline.
  
  Generated from Strato column: [graphql/socialgraph/followersTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/followersTimeline)
  """
  followers_timeline: Timeline @strato_column(path : "graphql/socialgraph/followersTimeline.User") @strato_op(value : Fetch)
  """
  Returns a paginated list of who a user is following
  
  Generated from Strato column: [graphql/dataproducts/followingSlice.User](https://strato.twitter.biz/web/browse/User/graphql/dataproducts/followingSlice)
  """
  following_slice(cursor: String, max_results: Int): UsersSlice @strato_column(path : "graphql/dataproducts/followingSlice.User") @strato_op(value : Fetch)
  """
  A user's following timeline.
  
  Generated from Strato column: [graphql/socialgraph/followingTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/followingTimeline)
  """
  following_timeline: Timeline @strato_column(path : "graphql/socialgraph/followingTimeline.User") @strato_op(value : Fetch)
  """
  Followers of a user that the viewer follows.
  
  Generated from Strato column: [graphql/socialgraph/friendsFollowingTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/friendsFollowingTimeline)
  """
  friends_following_timeline: Timeline @strato_column(path : "graphql/socialgraph/friendsFollowingTimeline.User") @strato_op(value : Fetch)
  """
  If a User owns any Birdwatch Notes or not (returns the value for the authenticated user independent of key).
  
  Generated from Strato column: [graphql/birdwatch/hasBirdwatchNotes.User](https://strato.twitter.biz/web/browse/User/graphql/birdwatch/hasBirdwatchNotes)
  """
  has_birdwatch_notes: Boolean @deprecated(reason : "Use authenticated_user_has_birdwatch_notes defined under Query") @strato_column(path : "graphql/birdwatch/hasBirdwatchNotes.User") @strato_op(value : Fetch)
  """
  Indicates that user has NFT avatar set up
  
  Generated from Strato column: [graphql/tweb3/hasNftAvatar.User](https://strato.twitter.biz/web/browse/User/graphql/tweb3/hasNftAvatar)
  """
  has_nft_avatar: Boolean @strato_column(path : "graphql/tweb3/hasNftAvatar.User") @strato_op(value : Fetch)
  """
  GetSliceResponse endpoint for home topics navigator product
  
  Generated from Strato column: [graphql/interestsMixer/homeTopicsNavigatorSlices.User](https://strato.twitter.biz/web/browse/User/graphql/interestsMixer/homeTopicsNavigatorSlices)
  """
  home_topics_navigator_slices(cursor_string: String, max_count: Int): HomeTopicsNavigatorSlicesResult @strato_column(path : "graphql/interestsMixer/homeTopicsNavigatorSlices.User") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
    Manages dark reads / load shedding.
    Along with view logic of what labels are available and chosen for a user.
  
  Generated from Strato column: [graphql/identity/identityProfileLabelsHighlightedLabel.User](https://strato.twitter.biz/web/browse/User/graphql/identity/identityProfileLabelsHighlightedLabel)
  """
  identity_profile_labels_highlighted_label: HighlightedUserLabelResponse @strato_column(path : "graphql/identity/identityProfileLabelsHighlightedLabel.User") @strato_op(value : Fetch)
  """
  Returns a list of payment history from audiencerewards/inAppPurchases/history.User.strato
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseHistory.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/inAppPurchaseHistory)
  """
  in_app_purchase_history(before_payment_id: String, product_id: String, status: InAppPurchasePaymentStatusInput): InAppPurchaseHistoryResult @development @strato_column(path : "graphql/audiencerewards/inAppPurchaseHistory.User") @strato_op(value : Fetch)
  """
  Describes whether a user's profile can be translated.
  
  Generated from Strato column: [graphql/translation/isProfileTranslatable.User](https://strato.twitter.biz/web/browse/User/graphql/translation/isProfileTranslatable)
  """
  is_profile_translatable: Boolean @strato_column(path : "graphql/translation/isProfileTranslatable.User") @strato_op(value : Fetch)
  """
  Returns whether the User is a member of the given Trusted Friends List.  Only queryable by the List's owner.
  
  Generated from Strato column: [graphql/trusted-friends/isTrustedFriendsListMember.User](https://strato.twitter.biz/web/browse/User/graphql/trusted-friends/isTrustedFriendsListMember)
  """
  is_trusted_friends_list_member(trusted_friends_list_id: NumericString!): Boolean! @development @strato_column(path : "graphql/trusted-friends/isTrustedFriendsListMember.User") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/weaverbird/legacy.User](https://strato.twitter.biz/web/browse/User/graphql/weaverbird/legacy)"
  legacy: ApiUser @strato_column(path : "graphql/weaverbird/legacy.User") @strato_op(value : Fetch)
  """
  Provides birthdate and Periscope info about a user, keyed by Twitter user id.
  
  Birthdate may be partially redacted depending on visibility settings.
  Designed to have the same shape as the /1.1/users/extended_profile.json endpoint.
  
  Access policy: this column is subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/legacy/legacyExtended_profile.User](https://strato.twitter.biz/web/browse/User/graphql/legacy/legacyExtended_profile)
  """
  legacy_extended_profile: LegacyExtendedUserProfile @strato_column(path : "graphql/legacy/legacyExtended_profile.User") @strato_op(value : Fetch)
  """
  A timeline of all of a user's posted media.
  
  Generated from Strato column: [graphql/timelines/mediaTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/mediaTimeline)
  """
  media_timeline: Timeline @strato_column(path : "graphql/timelines/mediaTimeline.User") @strato_op(value : Fetch)
  """
  Timeline of a user’s posted media without URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone)
  
  Generated from Strato column: [graphql/timelines/mediaTimelineV2.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/mediaTimelineV2)
  """
  media_timeline_v2: Timeline @strato_column(path : "graphql/timelines/mediaTimelineV2.User") @strato_op(value : Fetch)
  """
  Lists a user is a member of, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/membershipsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/membershipsSlice)
  """
  memberships_slice(count: Int, cursor: String): SocialgraphListsSliceResponse @strato_column(path : "graphql/socialgraph/membershipsSlice.User") @strato_op(value : Fetch)
  """
  Timeline of the lists that a user is a member of.
  
  Generated from Strato column: [graphql/list/membershipsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/list/membershipsTimeline)
  """
  memberships_timeline: Timeline @strato_column(path : "graphql/list/membershipsTimeline.User") @strato_op(value : Fetch)
  """
  Provides a list of tweet IDs that mention the user. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/mentionsSliceResult.User](https://strato.twitter.biz/web/browse/User/graphql/dataproducts/mentionsSliceResult)
  """
  mentions_slice_result(end_time: String, max_results: Short, next_token: String, pagination_token: String, previous_token: String, since_id: NumericString, start_time: String, until_id: NumericString): UserMentionsSliceResult @strato_column(path : "graphql/dataproducts/mentionsSliceResult.User") @strato_op(value : Fetch)
  """
  Returns a map of timeseries of metrics across all tweets published by a user aggregated by day.Delegated access when looking up metrics for a user other than yourself is validated in the backing service.
  
  Generated from Strato column: [graphql/publisher-incentives/metricsByDay.User](https://strato.twitter.biz/web/browse/User/graphql/publisher-incentives/metricsByDay)
  """
  metrics_by_day(end_time_in_millis: Int53!, metrics: [UserMetricsByDayKeyInput!]!, start_time_in_millis: Int53!, timezone: String!): UserMetricsByDayResult @development @strato_column(path : "graphql/publisher-incentives/metricsByDay.User") @strato_op(value : Fetch)
  """
  NFT Collection associated with user's NFT avatar
  
  Generated from Strato column: [graphql/tweb3/nftAvatarCollection.User](https://strato.twitter.biz/web/browse/User/graphql/tweb3/nftAvatarCollection)
  """
  nft_avatar_collection: Web3NFTCollection @development @strato_column(path : "graphql/tweb3/nftAvatarCollection.User") @strato_op(value : Fetch)
  """
  Returns NFT avatar metadata, if any
  
  Generated from Strato column: [graphql/tweb3/nftAvatarMetadata.User](https://strato.twitter.biz/web/browse/User/graphql/tweb3/nftAvatarMetadata)
  """
  nft_avatar_metadata: NFT @strato_column(path : "graphql/tweb3/nftAvatarMetadata.User") @strato_op(value : Fetch)
  """
  Users that a user follows but has turned off retweets from, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/noRetweetsFollowingSlice.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/noRetweetsFollowingSlice)
  """
  no_retweets_following_slice(count: Int, cursor: String): SocialgraphSliceResponse @strato_column(path : "graphql/socialgraph/noRetweetsFollowingSlice.User") @strato_op(value : Fetch)
  """
  This query gets email notification settings for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsEmailNotifications.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsEmailNotifications)
  """
  notifications_email_notifications: EmailNotificationSettings @strato_column(path : "graphql/notifications/notificationsEmailNotifications.User") @strato_op(value : Fetch)
  """
  This query manages 'sendAccountUpdatesEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendAccountUpdatesEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendAccountUpdatesEmail)
  """
  notifications_send_account_updates_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendAccountUpdatesEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendActivationEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendActivationEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendActivationEmail)
  """
  notifications_send_activation_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendActivationEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendAddressBookNotificationEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendAddressBookNotificationEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendAddressBookNotificationEmail)
  """
  notifications_send_address_book_notification_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendAddressBookNotificationEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendEmailNewsletter' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendEmailNewsletter.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendEmailNewsletter)
  """
  notifications_send_email_newsletter: Boolean @strato_column(path : "graphql/notifications/notificationsSendEmailNewsletter.User") @strato_op(value : Fetch)
  """
  This query manages 'sendEmailVitWeekly' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendEmailVitWeekly.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendEmailVitWeekly)
  """
  notifications_send_email_vit_weekly: Boolean @strato_column(path : "graphql/notifications/notificationsSendEmailVitWeekly.User") @strato_op(value : Fetch)
  """
  This query manages 'sendFollowRecsEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendFollowRecsEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendFollowRecsEmail)
  """
  notifications_send_follow_recs_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendFollowRecsEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendLoginNotificationEmail' for a given user.
  
  Generated from Strato column: [graphql/notifications/notificationsSendLoginNotificationEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendLoginNotificationEmail)
  """
  notifications_send_login_notification_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendLoginNotificationEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendNetworkActivityEmail' for a given user.
  
  Generated from Strato column: [graphql/notifications/notificationsSendNetworkActivityEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendNetworkActivityEmail)
  """
  notifications_send_network_activity_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendNetworkActivityEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendFollowRecsEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendNetworkDigest.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendNetworkDigest)
  """
  notifications_send_network_digest: DigestSchedule @strato_column(path : "graphql/notifications/notificationsSendNetworkDigest.User") @strato_op(value : Fetch)
  """
  This query manages 'sendNewDirectTextEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendNewDirectTextEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendNewDirectTextEmail)
  """
  notifications_send_new_direct_text_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendNewDirectTextEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendPartnerEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendPartnerEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendPartnerEmail)
  """
  notifications_send_partner_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendPartnerEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendPerformanceDigest' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendPerformanceDigest.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendPerformanceDigest)
  """
  notifications_send_performance_digest: DigestSchedule @strato_column(path : "graphql/notifications/notificationsSendPerformanceDigest.User") @strato_op(value : Fetch)
  """
  This query manages 'sendResurrectionEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendResurrectionEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendResurrectionEmail)
  """
  notifications_send_resurrection_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendResurrectionEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendSharedTweetEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendSharedTweetEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSharedTweetEmail)
  """
  notifications_send_shared_tweet_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendSharedTweetEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendSimilarPeopleEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendSimilarPeopleEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSimilarPeopleEmail)
  """
  notifications_send_similar_people_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendSimilarPeopleEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendSmbSalesMarketingEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode)
  
  Generated from Strato column: [graphql/notifications/notificationsSendSmbSalesMarketingEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSmbSalesMarketingEmail)
  """
  notifications_send_smb_sales_marketing_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendSmbSalesMarketingEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendSurveyEmail' for a given user.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendSurveyEmail.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendSurveyEmail)
  """
  notifications_send_survey_email: Boolean @strato_column(path : "graphql/notifications/notificationsSendSurveyEmail.User") @strato_op(value : Fetch)
  """
  This query manages 'sendTwitterEmails' for a given user, which controls all email sending.
  Access policy: this column is subject to Bouncer restrictions (writes allowed when in read-only mode).
  
  Generated from Strato column: [graphql/notifications/notificationsSendTwitterEmails.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/notificationsSendTwitterEmails)
  """
  notifications_send_twitter_emails: Boolean @strato_column(path : "graphql/notifications/notificationsSendTwitterEmails.User") @strato_op(value : Fetch)
  """
  Reference to the user's list that they own given the slug.
  
  Generated from Strato column: [graphql/list/ownedList.User](https://strato.twitter.biz/web/browse/User/graphql/list/ownedList)
  """
  owned_list(slug: String!): List @strato_column(path : "graphql/list/ownedList.User") @strato_op(value : Fetch)
  """
  Lists a user is an owner of, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/ownershipsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/ownershipsSlice)
  """
  ownerships_slice(count: Int, cursor: String): SocialgraphListsSliceResponse @strato_column(path : "graphql/socialgraph/ownershipsSlice.User") @strato_op(value : Fetch)
  """
  Timeline of the lists that a user owns.
  
  Generated from Strato column: [graphql/list/ownershipsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/list/ownershipsTimeline)
  """
  ownerships_timeline: Timeline @strato_column(path : "graphql/list/ownershipsTimeline.User") @strato_op(value : Fetch)
  """
  Whether the viewer's status as a super follower of the user should remain private.
      If false, their super follower badge will be publicly viewable.
  
  Generated from Strato column: [graphql/audiencerewards/privateSuperFollowing.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/privateSuperFollowing)
  """
  private_super_following: Boolean @strato_column(path : "graphql/audiencerewards/privateSuperFollowing.User") @strato_op(value : Fetch)
  """
  A professional entity
  
  Generated from Strato column: [graphql/bizprofiles/professional.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/professional)
  """
  professional: Professional @strato_column(path : "graphql/bizprofiles/professional.User") @strato_op(value : Fetch)
  """
  A professional result entity
  
  Generated from Strato column: [graphql/bizprofiles/professionalResult.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/professionalResult)
  """
  professional_result: ProfessionalResult @strato_column(path : "graphql/bizprofiles/professionalResult.User") @strato_op(value : Fetch)
  """
  A Timeline of the user's about tab in profile page
  
  Generated from Strato column: [graphql/timelines/profileAboutTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileAboutTimeline)
  """
  profile_about_timeline: Timeline @strato_column(path : "graphql/timelines/profileAboutTimeline.User") @strato_op(value : Fetch)
  """
  This column handles the User Profile signals reaction timeline fetch operation, which returns a timeline of tweets that a given user has reacted to. Details can be found at go/signals-infra-tdd
  
  Generated from Strato column: [graphql/signals/profileReactionTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/signals/profileReactionTimeline)
  """
  profile_reaction_timeline(cursor: UserProfileReactionTimelineCursorInput): UserProfileReactionTimelineResponse @development @strato_column(path : "graphql/signals/profileReactionTimeline.User") @strato_op(value : Fetch)
  """
  A Timeline of the user's profile, excluding replies, and bypassing TLS-API
  
  Generated from Strato column: [graphql/timelines/profileTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileTimeline)
  """
  profile_timeline: Timeline @strato_column(path : "graphql/timelines/profileTimeline.User") @strato_op(value : Fetch)
  """
  A Timeline of the user's profile, excluding replies, without URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone)
  
  Generated from Strato column: [graphql/timelines/profileTimelineV2.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileTimelineV2)
  """
  profile_timeline_v2: Timeline @strato_column(path : "graphql/timelines/profileTimelineV2.User") @strato_op(value : Fetch)
  """
  A user's profile timeline, serving tweets _and_ replies.
  
  Generated from Strato column: [graphql/timelines/profileTweetsAndRepliesTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileTweetsAndRepliesTimeline)
  """
  profile_tweets_and_replies_timeline: Timeline @deprecated(reason : "Moved to `graphql/timelines/profileWithRepliesTimeline.User.strato`") @strato_column(path : "graphql/timelines/profileTweetsAndRepliesTimeline.User") @strato_op(value : Fetch)
  """
  A user's profile timeline, serving tweets but not replies.
  
  Generated from Strato column: [graphql/timelines/profileTweetsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileTweetsTimeline)
  """
  profile_tweets_timeline: Timeline @deprecated(reason : "Moved to `graphql/timelines/profileTimeline.User.strato`") @strato_column(path : "graphql/timelines/profileTweetsTimeline.User") @strato_op(value : Fetch)
  """
  A Timeline of the user's profile with replies, and bypassing TLS-API
  
  Generated from Strato column: [graphql/timelines/profileWithRepliesTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileWithRepliesTimeline)
  """
  profile_with_replies_timeline: Timeline @strato_column(path : "graphql/timelines/profileWithRepliesTimeline.User") @strato_op(value : Fetch)
  """
  A Timeline of the user's profile, with replies, without URT tombstones and forward pivots (see TweetWithVisibilityResults and TweetTombstone)
  
  Generated from Strato column: [graphql/timelines/profileWithRepliesTimelineV2.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/profileWithRepliesTimelineV2)
  """
  profile_with_replies_timeline_v2: Timeline @strato_column(path : "graphql/timelines/profileWithRepliesTimelineV2.User") @strato_op(value : Fetch)
  """
  List of all profile modules for a user
  
  Generated from Strato column: [graphql/bizprofiles/profilemodules.User](https://strato.twitter.biz/web/browse/User/graphql/bizprofiles/profilemodules)
  """
  profilemodules: UserBusinessModulesResponse @strato_column(path : "graphql/bizprofiles/profilemodules.User") @strato_op(value : Fetch)
  """
  QueryColumn for Pronouns on a User
  
  Generated from Strato column: [graphql/profile-foundations/pronouns.User](https://strato.twitter.biz/web/browse/User/graphql/profile-foundations/pronouns)
  """
  pronouns: Pronouns @development @strato_column(path : "graphql/profile-foundations/pronouns.User") @strato_op(value : Fetch)
  """
  Fetch tickets purchased by user
  
  Generated from Strato column: [graphql/audiospace/purchasedAudioSpaceTickets.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/purchasedAudioSpaceTickets)
  """
  purchased_audio_space_tickets(cursor: String, limit: Int): AudioSpaceTicketSlice @strato_column(path : "graphql/audiospace/purchasedAudioSpaceTickets.User") @strato_op(value : Fetch)
  """
  Receieved strike tips for respective user
  
  Generated from Strato column: [graphql/creator-dashboard/receivedStrikeTipsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/receivedStrikeTipsSlice)
  """
  received_strike_tips_slice(cursor: String, limit: Int): StrikeTipSlice @development @strato_column(path : "graphql/creator-dashboard/receivedStrikeTipsSlice.User") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: UnsignedLong!
  """
  Detail about a specific reviewed report
  
  Generated from Strato column: [graphql/health-notifications/reviewedReport.User](https://strato.twitter.biz/web/browse/User/graphql/health-notifications/reviewedReport)
  """
  reviewed_report(report_notification_id: NumericString!): ReviewedReportDetail @development @safety_level(value : "ReportCenter") @strato_column(path : "graphql/health-notifications/reviewedReport.User") @strato_op(value : Fetch)
  """
  Returns a timeline of Rito-actioned Tweets between the perspectival user and the supplied user.
  
  Generated from Strato column: [graphql/interventions/ritoActionedTweetsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/ritoActionedTweetsTimeline)
  """
  rito_actioned_tweets_timeline: Timeline @strato_column(path : "graphql/interventions/ritoActionedTweetsTimeline.User") @strato_op(value : Fetch)
  """
  Returns a timeline of Tweets between the perspectival user and the supplied user that have been flagged by Rito as possibly abusive or spammy.
  
  Generated from Strato column: [graphql/interventions/ritoFlaggedTweetsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/ritoFlaggedTweetsTimeline)
  """
  rito_flagged_tweets_timeline: Timeline @strato_column(path : "graphql/interventions/ritoFlaggedTweetsTimeline.User") @strato_op(value : Fetch)
  """
  Returns a list of users and a result count in order to enable a FacePile of suggested actions (i.e: autoblocks) to be rendered.
  
  Generated from Strato column: [graphql/interventions/ritoSuggestedActionsFacePile.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/ritoSuggestedActionsFacePile)
  """
  rito_suggested_actions_face_pile: RitoSuggestedActionsFacePile @safety_level(value : "FilterDefault") @strato_column(path : "graphql/interventions/ritoSuggestedActionsFacePile.User") @strato_op(value : Fetch)
  """
  Returns the current safety mode settings for a given user.
  
  Generated from Strato column: [graphql/interventions/safetyModeSettings.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/safetyModeSettings)
  """
  safety_mode_settings: SafetyModeSettingsReqRes @strato_column(path : "graphql/interventions/safetyModeSettings.User") @strato_op(value : Fetch)
  """
  Profile labels for twitter accounts, powered by Semantic Core.
  
  Generated from Strato column: [graphql/semanticCore/semanticCoreProfileLabel.User](https://strato.twitter.biz/web/browse/User/graphql/semanticCore/semanticCoreProfileLabel)
  """
  semantic_core_profile_label: HighlightedUserLabelResponse @strato_column(path : "graphql/semanticCore/semanticCoreProfileLabel.User") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/account-security/sessionsList.User](https://strato.twitter.biz/web/browse/User/graphql/account-security/sessionsList)"
  sessions_list: [SessionResponse!] @strato_column(path : "graphql/account-security/sessionsList.User") @strato_op(value : Fetch)
  """
  A column for reading and writing a spaces user's listener data sharing setting
  
  Generated from Strato column: [graphql/audiospace/sharingListeningDataWithFollowers.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/sharingListeningDataWithFollowers)
  """
  sharing_listening_data_with_followers: Boolean @strato_column(path : "graphql/audiospace/sharingListeningDataWithFollowers.User") @strato_op(value : Fetch)
  """
  Returns UserBusinessModuleResponseV1 of type SHOP for the provided userId
  
  Generated from Strato column: [graphql/commerce/shopmodule/shopModuleConfig.User](https://strato.twitter.biz/web/browse/User/graphql/commerce/shopmodule/shopModuleConfig)
  """
  shop_module_config: ShopConfig @strato_column(path : "graphql/commerce/shopmodule/shopModuleConfig.User") @strato_op(value : Fetch)
  """
  Determines if the perspectival user is Smart Blocked by the user
  
  Generated from Strato column: [graphql/interventions/smartBlockedBy.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/smartBlockedBy)
  """
  smart_blocked_by: Boolean @strato_column(path : "graphql/interventions/smartBlockedBy.User") @strato_op(value : Fetch)
  """
  Determines if the perspectival user is smart blocking the user
  
  Generated from Strato column: [graphql/interventions/smartBlocking.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/smartBlocking)
  """
  smart_blocking: Boolean @strato_column(path : "graphql/interventions/smartBlocking.User") @strato_op(value : Fetch)
  """
  Determines when the perspectival user will stop smart blocking the user
  
  Generated from Strato column: [graphql/interventions/smartBlockingExpiration.User](https://strato.twitter.biz/web/browse/User/graphql/interventions/smartBlockingExpiration)
  """
  smart_blocking_expiration: Int53 @strato_column(path : "graphql/interventions/smartBlockingExpiration.User") @strato_op(value : Fetch)
  """
  Hydrates and returns the displayed social proof on a user.
  
  Generated from Strato column: [graphql/timelines/socialProof.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/socialProof)
  """
  social_proof: Timeline @development @strato_column(path : "graphql/timelines/socialProof.User") @strato_op(value : Fetch)
  """
  Fetch tickets sold by user via hosting spaces
  
  Generated from Strato column: [graphql/audiospace/soldAudioSpaceTicketsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/soldAudioSpaceTicketsSlice)
  """
  sold_audio_space_tickets_slice(cursor: String, limit: Int): AudioSpaceTicketSlice @strato_column(path : "graphql/audiospace/soldAudioSpaceTicketsSlice.User") @strato_op(value : Fetch)
  """
  Whether the viewer is set to receive notifications for space events authored by the user. Mutually exclusive to the device follow & live follow relationships.
  
  Generated from Strato column: [graphql/notifications/spaceDeviceFollowing.User](https://strato.twitter.biz/web/browse/User/graphql/notifications/spaceDeviceFollowing)
  """
  space_device_following: Boolean @strato_column(path : "graphql/notifications/spaceDeviceFollowing.User") @strato_op(value : Fetch)
  """
  Example column for use in Building Product Features classes. Not for production use.
  
  Generated from Strato column: [graphql/stack/stackMood.User](https://strato.twitter.biz/web/browse/User/graphql/stack/stackMood)
  """
  stack_mood: String @example @strato_column(path : "graphql/stack/stackMood.User") @strato_op(value : Fetch)
  """
  Aggregated Strike tips revenue per user
  
  Generated from Strato column: [graphql/creator-dashboard/strikeTipsRevenue.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/strikeTipsRevenue)
  """
  strike_tips_revenue: CreatorDashboardStrikeInfo @development @strato_column(path : "graphql/creator-dashboard/strikeTipsRevenue.User") @strato_op(value : Fetch)
  """
  Current stripe account onboarding status
  
  Generated from Strato column: [graphql/audiospace/stripeAccountStatus.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/stripeAccountStatus)
  """
  stripe_account_status: StripeIntegrationStatus @strato_column(path : "graphql/audiospace/stripeAccountStatus.User") @strato_op(value : Fetch)
  """
  Detail about a specific submitted report
  
  Generated from Strato column: [graphql/health-notifications/submittedReport.User](https://strato.twitter.biz/web/browse/User/graphql/health-notifications/submittedReport)
  """
  submitted_report(report_notification_id: NumericString!): ReportDetail @safety_level(value : "ConversationFocalTweet") @strato_column(path : "graphql/health-notifications/submittedReport.User") @strato_op(value : Fetch)
  """
  Lists a subscribes to, fetched from Socialgraph Mixer and returned as a Slice.
  
  Generated from Strato column: [graphql/socialgraph/subscriptionsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/socialgraph/subscriptionsSlice)
  """
  subscriptions_slice(count: Int, cursor: String): SocialgraphListsSliceResponse @strato_column(path : "graphql/socialgraph/subscriptionsSlice.User") @strato_op(value : Fetch)
  """
  Timeline of the lists that a user subscribed to.
  
  Generated from Strato column: [graphql/list/subscriptionsTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/list/subscriptionsTimeline)
  """
  subscriptions_timeline: Timeline @strato_column(path : "graphql/list/subscriptionsTimeline.User") @strato_op(value : Fetch)
  """
  Reads user creator benefits offered from the Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/superFollowCreatorBenefits.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/superFollowCreatorBenefits)
  """
  super_follow_creator_benefits: AudienceRewardsBenefitsData @strato_column(path : "graphql/audiencerewards/superFollowCreatorBenefits.User") @strato_op(value : Fetch)
  """
  Gets creator price metadata stored in Audience Rewards Thrift Service
  
  Generated from Strato column: [graphql/audiencerewards/superFollowCreatorPriceMetadata.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/superFollowCreatorPriceMetadata)
  """
  super_follow_creator_price_metadata: SuperFollowsSelectedPrice @strato_column(path : "graphql/audiencerewards/superFollowCreatorPriceMetadata.User") @strato_op(value : Fetch)
  """
  Returns the Stripe product metadata for a SuperFollows creator
  
  Generated from Strato column: [graphql/audiencerewards/superFollowCreatorProductMetadata.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/superFollowCreatorProductMetadata)
  """
  super_follow_creator_product_metadata: AudienceRewardsProductMetadata @development @strato_column(path : "graphql/audiencerewards/superFollowCreatorProductMetadata.User") @strato_op(value : Fetch)
  """
  Exposes a boolean indicating whether or not the user can be super followed
  
  Generated from Strato column: [graphql/audiencerewards/superFollowEligible.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/superFollowEligible)
  """
  super_follow_eligible: Boolean @strato_column(path : "graphql/audiencerewards/superFollowEligible.User") @strato_op(value : Fetch)
  """
  A Timeline of the user's super follow timeline tab in profile page, excluding replies, and bypassing TLS-API
  
  Generated from Strato column: [graphql/timelines/superFollowProfileTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/superFollowProfileTimeline)
  """
  super_follow_profile_timeline: Timeline @strato_column(path : "graphql/timelines/superFollowProfileTimeline.User") @strato_op(value : Fetch)
  """
  Returns whether the viewer is super followed by the user
  
  Generated from Strato column: [graphql/audiencerewards/superFollowedBy.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/superFollowedBy)
  """
  super_followed_by: Boolean @strato_column(path : "graphql/audiencerewards/superFollowedBy.User") @strato_op(value : Fetch)
  """
  Returns whether the viewer is super following the user
  
  Generated from Strato column: [graphql/audiencerewards/superFollowing.User](https://strato.twitter.biz/web/browse/User/graphql/audiencerewards/superFollowing)
  """
  super_following: Boolean @strato_column(path : "graphql/audiencerewards/superFollowing.User") @strato_op(value : Fetch)
  """
  List of requirements which you haven't met in order to sell super follows. Empty if you're ok.
  
  Generated from Strato column: [graphql/audiospace/superFollowingEligibility.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/superFollowingEligibility)
  """
  super_following_eligibility: [String!] @strato_column(path : "graphql/audiospace/superFollowingEligibility.User") @strato_op(value : Fetch)
  """
  Status of an application to sell superfollows
  
  Generated from Strato column: [graphql/audiospace/superFollowsApplicationStatus.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/superFollowsApplicationStatus)
  """
  super_follows_application_status: SellerApplicationState @strato_column(path : "graphql/audiospace/superFollowsApplicationStatus.User") @strato_op(value : Fetch)
  """
  New superfollow subscribers per respective user
  
  Generated from Strato column: [graphql/creator-dashboard/superfollowsNewSubscribersSlice.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/superfollowsNewSubscribersSlice)
  """
  superfollows_new_subscribers_slice(cursor: String, limit: Int): SuperfollowsSubscriptionSlice @development @strato_column(path : "graphql/creator-dashboard/superfollowsNewSubscribersSlice.User") @strato_op(value : Fetch)
  """
  Superfollow renewal events for respective user
  
  Generated from Strato column: [graphql/creator-dashboard/superfollowsRenewalsSlice.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/superfollowsRenewalsSlice)
  """
  superfollows_renewals_slice(cursor: String, limit: Int): SuperfollowsSubscriptionSlice @development @strato_column(path : "graphql/creator-dashboard/superfollowsRenewalsSlice.User") @strato_op(value : Fetch)
  """
  Aggregated superfollows revenue per user
  
  Generated from Strato column: [graphql/creator-dashboard/superfollowsRevenue.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/superfollowsRevenue)
  """
  superfollows_revenue: CreatorDashboardRevenueInfo @development @strato_column(path : "graphql/creator-dashboard/superfollowsRevenue.User") @strato_op(value : Fetch)
  """
  Aggregated ticketed space revenue per user
  
  Generated from Strato column: [graphql/creator-dashboard/ticketedSpacesRevenue.User](https://strato.twitter.biz/web/browse/User/graphql/creator-dashboard/ticketedSpacesRevenue)
  """
  ticketed_spaces_revenue: CreatorDashboardRevenueInfo @development @strato_column(path : "graphql/creator-dashboard/ticketedSpacesRevenue.User") @strato_op(value : Fetch)
  """
  A user's profile timeline, serving tweets but not replies.
  
  Generated from Strato column: [graphql/timelines/timelinesProfileTweets.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/timelinesProfileTweets)
  """
  timelines_profile_tweets(autoplay_enabled: Boolean, cards_platform: String, context: String, count: Int53, cursor: String): TimelineTimeline @deprecated(reason : "Moved to `graphql/profileTweetsTimeline.User`") @strato_column(path : "graphql/timelines/timelinesProfileTweets.User") @strato_op(value : Fetch)
  """
  A user's profile timeline, serving tweets and tweet replies.
  
  Generated from Strato column: [graphql/timelines/timelinesProfileTweetsAndReplies.User](https://strato.twitter.biz/web/browse/User/graphql/timelines/timelinesProfileTweetsAndReplies)
  """
  timelines_profile_tweets_and_replies(autoplay_enabled: Boolean, cards_platform: String, context: String, count: Int53, cursor: String): TimelineTimeline @deprecated(reason : "Moved to `graphql/profileTweetsAndRepliesTimeline.User`") @strato_column(path : "graphql/timelines/timelinesProfileTweetsAndReplies.User") @strato_op(value : Fetch)
  """
  Status of an application to add tipjar to your account
  
  Generated from Strato column: [graphql/audiospace/tipJarApplicationStatus.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/tipJarApplicationStatus)
  """
  tip_jar_application_status: SellerApplicationState @strato_column(path : "graphql/audiospace/tipJarApplicationStatus.User") @strato_op(value : Fetch)
  """
  List of requirements which you haven't met in order to use tipJar. Empty if you're ok.
  
  Generated from Strato column: [graphql/audiospace/tipJarEligibility.User](https://strato.twitter.biz/web/browse/User/graphql/audiospace/tipJarEligibility)
  """
  tip_jar_eligibility: [SellerEligibilityViolations!] @strato_column(path : "graphql/audiospace/tipJarEligibility.User") @strato_op(value : Fetch)
  """
  Top level TipJar settings
  
  Generated from Strato column: [graphql/tipjar/tipjarSettings.User](https://strato.twitter.biz/web/browse/User/graphql/tipjar/tipjarSettings)
  """
  tipjar_settings: TipJar @strato_column(path : "graphql/tipjar/tipjarSettings.User") @strato_op(value : Fetch)
  """
  Graphql entrypoint to machine translate a profile
  
  Generated from Strato column: [graphql/translation/translateProfile.User](https://strato.twitter.biz/web/browse/User/graphql/translation/translateProfile)
  """
  translate_profile(translation_source: String): TranslatedProfile @strato_column(path : "graphql/translation/translateProfile.User") @strato_op(value : Fetch)
  """
  Describes whether a user's profile can be translated.
  
  Generated from Strato column: [graphql/translation/translationServiceGraphqlIsProfileTranslatable.User](https://strato.twitter.biz/web/browse/User/graphql/translation/translationServiceGraphqlIsProfileTranslatable)
  """
  translation_service_graphql_is_profile_translatable: Boolean @strato_column(path : "graphql/translation/translationServiceGraphqlIsProfileTranslatable.User") @strato_op(value : Fetch)
  """
  Returns daily tweetCounts timeseries for a User from insightservice and timeline
  
  Generated from Strato column: [graphql/publisher-incentives/tweetCountByDay.User](https://strato.twitter.biz/web/browse/User/graphql/publisher-incentives/tweetCountByDay)
  """
  tweet_count_by_day(end_time_in_millis: Int53!, start_time_in_millis: Int53!, timezone: String!): TweetCountByDayResult @development @strato_column(path : "graphql/publisher-incentives/tweetCountByDay.User") @strato_op(value : Fetch)
  """
  Provides a list of tweet IDs the user has created, depending on options also including replies and retweets. Intended to be used by the public API, not TOO clients.
  
  Generated from Strato column: [graphql/dataproducts/tweetsSliceResult.User](https://strato.twitter.biz/web/browse/User/graphql/dataproducts/tweetsSliceResult)
  """
  tweets_slice_result(end_time: String, exclude: [TweetTypeExcludeOptionsInput!], max_results: Short, next_token: String, pagination_token: String, previous_token: String, since_id: NumericString, start_time: String, until_id: NumericString): UserTweetsSliceResult @strato_column(path : "graphql/dataproducts/tweetsSliceResult.User") @strato_op(value : Fetch)
  """
  Provides a paginated list of a user's Twitter Articles.
  
  Generated from Strato column: [graphql/longform/twitterArticlesSlice.User](https://strato.twitter.biz/web/browse/User/graphql/longform/twitterArticlesSlice)
  """
  twitter_articles_slice(
    count: Int, 
    cursor: String, 
    "Deprecated( replaced by visibility filter)"
    published_only: Boolean! = false, 
    visibility: TwitterArticleVisibilityInput
  ): TwitterArticlesSlice @development @strato_column(path : "graphql/longform/twitterArticlesSlice.User") @strato_op(value : Fetch)
  """
  Viewing Other Users' Topics Page
  
  Generated from Strato column: [graphql/interestsMixer/viewingOtherUsersTopicsPage.User](https://strato.twitter.biz/web/browse/User/graphql/interestsMixer/viewingOtherUsersTopicsPage)
  """
  viewing_other_users_topics_page: Page @safety_level(value : "TimelineHomeTopicFollowRecommendations") @strato_column(path : "graphql/interestsMixer/viewingOtherUsersTopicsPage.User") @strato_op(value : Fetch)
  """
  The Web Sidebar TTF Timeline
  
  Generated from Strato column: [graphql/interestsMixer/webSidebarTtfTimeline.User](https://strato.twitter.biz/web/browse/User/graphql/interestsMixer/webSidebarTtfTimeline)
  """
  web_sidebar_ttf_timeline: Timeline @strato_column(path : "graphql/interestsMixer/webSidebarTtfTimeline.User") @strato_op(value : Fetch)
  """
  Fetch the businesses for a target user
  
  Generated from Strato column: [graphql/webaf/layout/webafLayoutBusinesses.User](https://strato.twitter.biz/web/browse/User/graphql/webaf/layout/webafLayoutBusinesses)
  """
  webaf_layout_businesses: [WebAfBusiness!] @development @safety_level(value : "FilterAll") @strato_column(path : "graphql/webaf/layout/webafLayoutBusinesses.User") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.accounttypes.strato.UserAccountLabel`](http://go/sg.thrift/UserAccountLabel)"
type UserAccountLabel @thrift_type(name : "UserAccountLabel", package : "com.twitter.accounttypes.strato") {
  managed_label: ManagedLabel
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserBookmarksSlice`](http://go/sg.thrift/UserBookmarksSlice)"
type UserBookmarksSlice @thrift_type(name : "UserBookmarksSlice", package : "com.twitter.dataproducts.aaa.graphql") {
  items: [UserBookmarksSliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [UserBookmarksSliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [UserBookmarksSliceItemResults]!
  slice_info: SliceInfo
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserBusinessConfigurableModuleV1`](http://go/sg.thrift/UserBusinessConfigurableModuleV1)"
type UserBusinessConfigurableModuleV1 @thrift_type(name : "UserBusinessConfigurableModuleV1", package : "com.twitter.bizprofiles.graphql") {
  module_data: UserBusinessEditableModuleV1
  module_type: ModuleType!
  sample_data: ProfileModule
  subtitle: String!
  title: String!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserBusinessEditableModuleV1`](http://go/sg.thrift/UserBusinessEditableModuleV1)"
type UserBusinessEditableModuleV1 @thrift_type(name : "UserBusinessEditableModuleV1", package : "com.twitter.bizprofiles.graphql") {
  enabled_for_display: Boolean!
  module_id: NumericString!
  profile_module: ProfileModule!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserBusinessEditableModules`](http://go/sg.thrift/UserBusinessEditableModules)"
type UserBusinessEditableModules @thrift_type(name : "UserBusinessEditableModules", package : "com.twitter.bizprofiles.graphql") {
  configurable_modules_v1: [UserBusinessConfigurableModuleV1!]
  modules_for_display: [ModuleForDisplay!]
  v1: [UserBusinessEditableModuleV1!]
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserBusinessModuleResponseV1`](http://go/sg.thrift/UserBusinessModuleResponseV1)"
type UserBusinessModuleResponseV1 @thrift_type(name : "UserBusinessModuleResponseV1", package : "com.twitter.bizprofiles.graphql") {
  module_id: NumericString!
  profile_module: ProfileModule!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserBusinessModulesResponse`](http://go/sg.thrift/UserBusinessModulesResponse)"
type UserBusinessModulesResponse @thrift_type(name : "UserBusinessModulesResponse", package : "com.twitter.bizprofiles.graphql") {
  v1: [UserBusinessModuleResponseV1!]
}

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteAction`](http://go/sg.thrift/UserCommunityInviteAction)"
type UserCommunityInviteAction @thrift_type(name : "UserCommunityInviteAction", package : "com.twitter.communities.actions") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteActionUnavailable`](http://go/sg.thrift/UserCommunityInviteActionUnavailable)"
type UserCommunityInviteActionUnavailable @thrift_type(name : "UserCommunityInviteActionUnavailable", package : "com.twitter.communities.actions") {
  message: String
  reason: UserCommunityInviteActionUnavailableReason!
}

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteMutationError`](http://go/sg.thrift/UserCommunityInviteMutationError)"
type UserCommunityInviteMutationError @thrift_type(name : "UserCommunityInviteMutationError", package : "com.twitter.communities.actions") {
  message: String
  reason: UserCommunityInviteMutationErrorReason!
}

"Generated from Strato space: `UserCommunityRelationship`"
type UserCommunityRelationship @strato_space(name : "UserCommunityRelationship") {
  """
  Collection of actions' availability in a user's relationship to a community, for the viewer.
  
  Generated from Strato column: [graphql/communities/actions.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/actions)
  """
  actions: UserCommunityRelationshipActions! @strato_column(path : "graphql/communities/actions.UserCommunityRelationship") @strato_op(value : Fetch)
  """
  Community of the user community relationship.
  
  Generated from Strato column: [graphql/communities/community.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/community)
  """
  community: Community! @strato_column(path : "graphql/communities/community.UserCommunityRelationship") @strato_op(value : Fetch)
  "A globally unique identifier"
  id: ID!
  """
  Fetch community moderation state of the user community relationship.
  
  Generated from Strato column: [graphql/communities/moderationState.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/moderationState)
  """
  moderation_state: CommunityUserModerationState! @strato_column(path : "graphql/communities/moderationState.UserCommunityRelationship") @strato_op(value : Fetch)
  """
  Role of the user within the community.
  
  Generated from Strato column: [graphql/communities/role.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/role)
  """
  role: CommunityRole! @strato_column(path : "graphql/communities/role.UserCommunityRelationship") @strato_op(value : Fetch)
  """
  User of the user community relationship.
  
  Generated from Strato column: [graphql/communities/user.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/user)
  """
  user: User! @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/communities/user.UserCommunityRelationship") @strato_op(value : Fetch)
  """
  Result field; User of the user community relationship.
  
  Generated from Strato column: [graphql/communities/user.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/user)
  """
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/communities/user.UserCommunityRelationship") @strato_op(value : Fetch)
  """
  Result field; User of the user community relationship.
  
  Generated from Strato column: [graphql/communities/user.UserCommunityRelationship](https://strato.twitter.biz/web/browse/UserCommunityRelationship/graphql/communities/user)
  """
  user_results: UserResults! @strato_column(path : "graphql/communities/user.UserCommunityRelationship") @strato_op(value : Fetch)
}

"Generated from Strato space: `UserCommunityRelationshipActions`"
type UserCommunityRelationshipActions @strato_space(name : "UserCommunityRelationshipActions") {
  "A globally unique identifier"
  id: ID!
  """
  Invite Action availability on a user/community pair, for the viewer.
  
  Generated from Strato column: [graphql/communities/inviteActionResult.UserCommunityRelationshipActions](https://strato.twitter.biz/web/browse/UserCommunityRelationshipActions/graphql/communities/inviteActionResult)
  """
  invite_action_result: UserCommunityInviteActionResult @strato_column(path : "graphql/communities/inviteActionResult.UserCommunityRelationshipActions") @strato_op(value : Fetch)
  """
  Availability of the remove member action for the viewer on a user-community pair.
  
  Generated from Strato column: [graphql/communities/removeActionResult.UserCommunityRelationshipActions](https://strato.twitter.biz/web/browse/UserCommunityRelationshipActions/graphql/communities/removeActionResult)
  """
  remove_action_result: CommunityMemberRemoveActionResult @strato_column(path : "graphql/communities/removeActionResult.UserCommunityRelationshipActions") @strato_op(value : Fetch)
}

type UserCommunityRelationshipSlice {
  items: [UserCommunityRelationship!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.commerce.drops.api.graphql.UserDropSubscriptionConfigV1`](http://go/sg.thrift/UserDropSubscriptionConfigV1)"
type UserDropSubscriptionConfigV1 @thrift_type(name : "UserDropSubscriptionConfigV1", package : "com.twitter.commerce.drops.api.graphql") {
  is_user_subscribed: Boolean!
}

"Generated from type: [`com.twitter.strato.graphql.UserEntities`](http://go/sg.thrift/UserEntities)"
type UserEntities @thrift_type(name : "UserEntities", package : "com.twitter.strato.graphql") {
  description: EntitySet
  url: EntitySet
}

type UserFailures {
  key: NumericString!
  value: UserFailuresReason!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserFavoritesSlice`](http://go/sg.thrift/UserFavoritesSlice)"
type UserFavoritesSlice @thrift_type(name : "UserFavoritesSlice", package : "com.twitter.dataproducts.aaa.graphql") {
  items: [UserFavoriteSliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [UserFavoriteSliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [UserFavoriteSliceItemResults]!
  slice_info: SliceInfo
}

type UserFeature {
  enabled: Boolean!
  feature: String!
}

"Generated from type: [`com.twitter.strato.graphql.UserItem`](http://go/sg.thrift/UserItem)"
type UserItem @thrift_type(name : "UserItem", package : "com.twitter.strato.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserMentionsSlice`](http://go/sg.thrift/UserMentionsSlice)"
type UserMentionsSlice @thrift_type(name : "UserMentionsSlice", package : "com.twitter.dataproducts.aaa.graphql") {
  items: [UserTweetSliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [UserTweetSliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [UserTweetSliceItemResults]!
  slice_info: SliceInfo
}

type UserMetricByDay {
  key: UserMetricsByDayKey!
  value: UserMetricResult!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.UserMetricResult`](http://go/sg.thrift/UserMetricResult)"
type UserMetricResult @thrift_type(name : "UserMetricResult", package : "com.twitter.dataproducts.metrics.graphql") {
  organic_ts: [Int53!]!
  promoted_ts: [Int53!]
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.UserMetricsByDayResult`](http://go/sg.thrift/UserMetricsByDayResult)"
type UserMetricsByDayResult @thrift_type(name : "UserMetricsByDayResult", package : "com.twitter.dataproducts.metrics.graphql") {
  metrics: [UserMetricByDay!]!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserModuleVisibilityUpdateResponse`](http://go/sg.thrift/UserModuleVisibilityUpdateResponse)"
type UserModuleVisibilityUpdateResponse @thrift_type(name : "UserModuleVisibilityUpdateResponse", package : "com.twitter.bizprofiles.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserProfessionalCategoriesDisplayUpdateResponse`](http://go/sg.thrift/UserProfessionalCategoriesDisplayUpdateResponse)"
type UserProfessionalCategoriesDisplayUpdateResponse @thrift_type(name : "UserProfessionalCategoriesDisplayUpdateResponse", package : "com.twitter.bizprofiles.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.UserProfessionalTypeUpdateResponse`](http://go/sg.thrift/UserProfessionalTypeUpdateResponse)"
type UserProfessionalTypeUpdateResponse @thrift_type(name : "UserProfessionalTypeUpdateResponse", package : "com.twitter.bizprofiles.graphql") {
  user: User! @deprecated(reason : "migrated to user_results")
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null")
  user_results: UserResults!
}

"Generated from type: [`com.twitter.signals.reactions.UserProfileReactionTimelineCursor`](http://go/sg.thrift/UserProfileReactionTimelineCursor)"
type UserProfileReactionTimelineCursor @thrift_type(name : "UserProfileReactionTimelineCursor", package : "com.twitter.signals.reactions") {
  next: String!
  previous: String
}

"Generated from type: [`com.twitter.signals.reactions.UserProfileReactionTimelineEntry`](http://go/sg.thrift/UserProfileReactionTimelineEntry)"
type UserProfileReactionTimelineEntry @thrift_type(name : "UserProfileReactionTimelineEntry", package : "com.twitter.signals.reactions") {
  reaction_type: SignalsReactionType!
  tweet: Tweet! @deprecated(reason : "migrated to tweet_results")
  tweet_result: TweetResult @deprecated(reason : "migrated to tweet_results; field will always be null")
  tweet_results: TweetResults!
}

"Generated from type: [`com.twitter.signals.reactions.UserProfileReactionTimelineResponse`](http://go/sg.thrift/UserProfileReactionTimelineResponse)"
type UserProfileReactionTimelineResponse @thrift_type(name : "UserProfileReactionTimelineResponse", package : "com.twitter.signals.reactions") {
  cursor: UserProfileReactionTimelineCursor
  user_profile_reaction_timeline_entries: [UserProfileReactionTimelineEntry!]!
}

"Generated from type: [`com.twitter.easypromote.UserEligibilityResponse`](http://go/sg.thrift/UserEligibilityResponse)"
type UserQuickPromoteEligibilityResponse @thrift_type(name : "UserEligibilityResponse", package : "com.twitter.easypromote") {
  ads_account_id: String
  is_eligible: Boolean!
  reason: UserQuickPromoteIneligibilityReason
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserRelationshipSliceInvalidParameterError`](http://go/sg.thrift/UserRelationshipSliceInvalidParameterError)"
type UserRelationshipSliceInvalidParameterError @thrift_type(name : "UserRelationshipSliceInvalidParameterError", package : "com.twitter.dataproducts.aaa.graphql") {
  error_code: RequestValidationError!
  error_message: String!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserRelationshipSliceInvalidParametersResponse`](http://go/sg.thrift/UserRelationshipSliceInvalidParametersResponse)"
type UserRelationshipSliceInvalidParametersResponse @thrift_type(name : "UserRelationshipSliceInvalidParametersResponse", package : "com.twitter.dataproducts.aaa.graphql") {
  parameter_errors: [UserRelationshipSliceInvalidParameterError!]!
}

"Generated from Strato space: `UserResults`"
type UserResults @strato_space(name : "UserResults") {
  "Generated from Strato column: [graphql/results/_result.User](https://strato.twitter.biz/web/browse/User/graphql/results/_result)"
  result: UserResult @strato_column(path : "graphql/results/_result.User") @strato_op(value : Fetch)
  "safetyLevel used to hydrate entities at this level"
  safety_level: String @deprecated(reason : "Intended only for use on internal testing. Resolves to null for non internal requests")
}

type UserSlice {
  items: [User!]! @deprecated(reason : "migrated to items_results")
  items_result: [UserResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [UserResults!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.UserTweetsSlice`](http://go/sg.thrift/UserTweetsSlice)"
type UserTweetsSlice @thrift_type(name : "UserTweetsSlice", package : "com.twitter.dataproducts.aaa.graphql") {
  items: [UserTweetSliceItem!]! @deprecated(reason : "migrated to items_results")
  items_result: [UserTweetSliceItemResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [UserTweetSliceItemResults]!
  slice_info: SliceInfo
}

"Generated from type: [`com.twitter.strato.graphql.UserUnavailable`](http://go/sg.thrift/UserUnavailable)"
type UserUnavailable @thrift_type(name : "UserUnavailable", package : "com.twitter.strato.graphql") {
  message: String
  unavailable_message: TimelineRichText
  unavailable_reason: UserUnavailableReason!
}

"Generated from type: [`com.twitter.strato.graphql.UserWithVisibilityTreatment`](http://go/sg.thrift/UserWithVisibilityTreatment)"
type UserWithVisibilityTreatment @thrift_type(name : "UserWithVisibilityTreatment", package : "com.twitter.strato.graphql") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added."
  _no_fields_available: Boolean! @deprecated(reason : "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object. Please do not select this field, as it will disappear if a convertible field is added.")
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UsersSliceInvalidParameterError`](http://go/sg.thrift/UsersSliceInvalidParameterError)"
type UsersSliceInvalidParameterError @thrift_type(name : "UsersSliceInvalidParameterError", package : "com.twitter.dataproducts.userrelationships.graphql") {
  error_message: String!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UsersSliceInvalidParametersResponse`](http://go/sg.thrift/UsersSliceInvalidParametersResponse)"
type UsersSliceInvalidParametersResponse @thrift_type(name : "UsersSliceInvalidParametersResponse", package : "com.twitter.dataproducts.userrelationships.graphql") {
  parameter_errors: [UsersSliceInvalidParameterError!]!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UsersSliceNotAuthorizedResponse`](http://go/sg.thrift/UsersSliceNotAuthorizedResponse)"
type UsersSliceNotAuthorizedResponse @thrift_type(name : "UsersSliceNotAuthorizedResponse", package : "com.twitter.dataproducts.userrelationships.graphql") {
  reason: String!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UsersSliceParameterValidationErrorResponse`](http://go/sg.thrift/UsersSliceParameterValidationErrorResponse)"
type UsersSliceParameterValidationErrorResponse @thrift_type(name : "UsersSliceParameterValidationErrorResponse", package : "com.twitter.dataproducts.userrelationships.graphql") {
  parameter_error_response: ParameterValidationErrorResponse!
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UsersSliceSuccessResponse`](http://go/sg.thrift/UsersSliceSuccessResponse)"
type UsersSliceSuccessResponse @thrift_type(name : "UsersSliceSuccessResponse", package : "com.twitter.dataproducts.userrelationships.graphql") {
  items: [User!]! @deprecated(reason : "migrated to items_results")
  items_result: [UserResult] @deprecated(reason : "migrated to items_results; field will always be null")
  items_results: [UserResults!]!
  slice_info: SliceInfo!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.ValidationError`](http://go/sg.thrift/ValidationError)"
type ValidationError @thrift_type(name : "ValidationError", package : "com.twitter.bizprofiles.graphql") {
  code: Int!
  context: [ContextMap!]
  reason: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.VerificationSession`](http://go/sg.thrift/VerificationSession)"
type VerificationSession @thrift_type(name : "VerificationSession", package : "com.twitter.tweb3.graphql.model") {
  bridge_url: String
  created_at_msec: Int53!
  message: String!
  token: String!
}

"Generated from type: [`com.twitter.vibes.Vibe`](http://go/sg.thrift/Vibe)"
type Vibe @thrift_type(name : "Vibe", package : "com.twitter.vibes") {
  annotation: TweetAnnotation
  discovery_url: String
  text: String!
  verb: VibeVerb!
}

"Generated from type: [`com.twitter.vibes.VibeTag`](http://go/sg.thrift/VibeTag)"
type VibeTag @thrift_type(name : "VibeTag", package : "com.twitter.vibes") {
  is_author_active_vibe: Boolean!
  is_vibe_announcement_tweet: Boolean!
  vibe: Vibe!
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.VideoQuartileCounts`](http://go/sg.thrift/VideoQuartileCounts)"
type VideoQuartileCounts @thrift_type(name : "VideoQuartileCounts", package : "com.twitter.dataproducts.metrics.graphql") {
  playback0_count: Count
  playback100_count: Count
  playback25_count: Count
  playback50_count: Count
  playback75_count: Count
}

"Generated from type: [`com.twitter.mediaservices.commons.tweetmedia.VideoVariant`](http://go/sg.thrift/VideoVariant)"
type VideoVariant @thrift_type(name : "VideoVariant", package : "com.twitter.mediaservices.commons.tweetmedia") {
  bit_rate: Int
  content_type: String!
  url: String!
}

"Generated from Strato space: `Unit`"
type Viewer @strato_space(name : "") {
  """
  Query a user's Coins balance.
  
  Generated from Strato column: [graphql/audiencerewards/accountBalance](https://strato.twitter.biz/web/browse/graphql/audiencerewards/accountBalance)
  """
  account_balance(balance_type: AccountBalanceTypeInput!): AccountBalance @development @strato_column(path : "graphql/audiencerewards/accountBalance") @strato_op(value : Fetch)
  """
  Column to retrieve Accountsync ClientConfig object for the authenticated user
  
  Generated from Strato column: [graphql/gryphon/accountsyncClientConfig](https://strato.twitter.biz/web/browse/graphql/gryphon/accountsyncClientConfig)
  """
  accountsync_client_config: AccountSyncClientConfig @strato_column(path : "graphql/gryphon/accountsyncClientConfig") @strato_op(value : Fetch)
  """
      Indicates whether this user is whitelisted to use Ads Subscriptions product (aka Promote Mode).
      [go/twitter-pro](https://go.twitter.biz/twitter-pro)
      This column is a GraphQL alias for
      [ext/adsSubscription.User](https://strato.twitter.biz/web/browse/User/ext/adsSubscription)
      As of 2/2021, ads subscriptions has been deprecated
  
  Generated from Strato column: [graphql/ads_subscription/ads_subscription](https://strato.twitter.biz/web/browse/graphql/ads_subscription/ads_subscription)
  """
  ads_subscription: AdsSubscriptionAccess @deprecated(reason : "The ads subscriptions product has been shut down") @strato_column(path : "graphql/ads_subscription/ads_subscription") @strato_op(value : Fetch)
  """
  This endpoint is used for article nudges. It currently returns a list of all valid domains for nudging via the article nudge.
  
  Generated from Strato column: [graphql/incentives/articleNudgeDomains](https://strato.twitter.biz/web/browse/graphql/incentives/articleNudgeDomains)
  """
  article_nudge_domains: [String!] @strato_column(path : "graphql/incentives/articleNudgeDomains") @strato_op(value : Fetch)
  """
  Returns a list of purchasable products that matches the filter from the product catalog for In App Purchase. Live products are visible to all, but test environment products are restricted to users with reward_products_test role. Locale settings are set from CallContext
  
  Generated from Strato column: [graphql/audiencerewards/audienceRewardsProducts](https://strato.twitter.biz/web/browse/graphql/audiencerewards/audienceRewardsProducts)
  """
  audience_rewards_products(category: AudienceRewardsProductCategoryInput, count: Int, cursor: String, environment: AudienceRewardsProductEnvironmentInput, platform: AudienceRewardsProductPlatformInput!): [AudienceRewardsProduct!] @deprecated(reason : "use inAppPurchaseProductsSlice") @strato_column(path : "graphql/audiencerewards/audienceRewardsProducts") @strato_op(value : Fetch)
  """
  Returns a list of purchasable products that matches the filter from the product catalog for In App Purchase. Live products are visible to all, but test environment products are restricted to users with reward_products_test role. Locale settings are set from CallContext
  
  Generated from Strato column: [graphql/audiencerewards/audienceRewardsProductsSlice](https://strato.twitter.biz/web/browse/graphql/audiencerewards/audienceRewardsProductsSlice)
  """
  audience_rewards_products_slice(category: AudienceRewardsProductCategoryInput, count: Int, cursor: String, environment: AudienceRewardsProductEnvironmentInput, platform: AudienceRewardsProductPlatformInput!): AudienceRewardsProductsSlice @deprecated(reason : "use inAppPurchaseProductsSlice") @strato_column(path : "graphql/audiencerewards/audienceRewardsProductsSlice") @strato_op(value : Fetch)
  """
  Returns a list of products from the product catalog mysql db that match filtering criteria
  
  Generated from Strato column: [graphql/audiencerewards/awardsProducts](https://strato.twitter.biz/web/browse/graphql/audiencerewards/awardsProducts)
  """
  awards_products: [TweetAward!] @development @strato_column(path : "graphql/audiencerewards/awardsProducts") @strato_op(value : Fetch)
  """
  Birdwatch home page.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchHomePage](https://strato.twitter.biz/web/browse/graphql/birdwatch/birdwatchHomePage)
  """
  birdwatch_home_page: Page @safety_level(value : "BirdwatchNoteTweetsTimeline") @strato_column(path : "graphql/birdwatch/birdwatchHomePage") @strato_op(value : Fetch)
  """
  (Deprecated) Global timeline of Tweets with Birdwatch notes.
  
  Generated from Strato column: [graphql/birdwatch/birdwatchNotesGlobalTimeline](https://strato.twitter.biz/web/browse/graphql/birdwatch/birdwatchNotesGlobalTimeline)
  """
  birdwatch_notes_global_timeline: Timeline @deprecated(reason : "use birdwatchHomePage column instead") @strato_column(path : "graphql/birdwatch/birdwatchNotesGlobalTimeline") @strato_op(value : Fetch)
  """
  A user's blocking timeline.
  
  Generated from Strato column: [graphql/socialgraph/blockingTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/blockingTimeline)
  """
  blocking_timeline: Timeline @strato_column(path : "graphql/socialgraph/blockingTimeline") @strato_op(value : Fetch)
  """
  Returns a list of claims for the logged in user.
  
  Generated from Strato column: [graphql/subscription-services/claims](https://strato.twitter.biz/web/browse/graphql/subscription-services/claims)
  """
  claims: [Claim!] @strato_column(path : "graphql/subscription-services/claims") @strato_op(value : Fetch)
  """
  Returns a list of Purchasable coin products that matches the filter from product catalog. Live products are visible to all, but test environment products are restricted to users with reward_products_test role. Locale settings are set from CallContext. 
  
  Generated from Strato column: [graphql/audiencerewards/coinsProducts](https://strato.twitter.biz/web/browse/graphql/audiencerewards/coinsProducts)
  """
  coins_products(category: CoinsProductCategoryInput, count: Int, cursor: String, environment: CoinsProductEnvironmentInput): [CoinsProduct!] @deprecated(reason : "use inAppPurchaseProductsSlice") @strato_column(path : "graphql/audiencerewards/coinsProducts") @strato_op(value : Fetch)
  """
  Returns a slice of Purchasable coin products that matches the filter from product catalog. Live products are visible to all, but test environment products are restricted to users with reward_products_test role. Locale settings are set from CallContext. 
  
  Generated from Strato column: [graphql/audiencerewards/coinsProductsSlice](https://strato.twitter.biz/web/browse/graphql/audiencerewards/coinsProductsSlice)
  """
  coins_products_slice(category: CoinsProductCategoryInput, count: Int, cursor: String, environment: CoinsProductEnvironmentInput): CoinsProductsSlice @deprecated(reason : "use inAppPurchaseProductsSlice") @strato_column(path : "graphql/audiencerewards/coinsProductsSlice") @strato_op(value : Fetch)
  """
  Timeline of tweets from communities the viewer is a member of, in reverse chronological order.
  
  Generated from Strato column: [graphql/communities/communitiesTimeline](https://strato.twitter.biz/web/browse/graphql/communities/communitiesTimeline)
  """
  communities_timeline: Timeline! @strato_column(path : "graphql/communities/communitiesTimeline") @strato_op(value : Fetch)
  """
  Timeline of community-to-join recommendations for the viewer.
  
  Generated from Strato column: [graphql/communities/communityDiscoveryTimeline](https://strato.twitter.biz/web/browse/graphql/communities/communityDiscoveryTimeline)
  """
  community_discovery_timeline: Timeline! @development @strato_column(path : "graphql/communities/communityDiscoveryTimeline") @strato_op(value : Fetch)
  """
  Communities the viewer is a member of, ordered by access recency and frequency.
  
  Generated from Strato column: [graphql/communities/communityMembershipsRecent](https://strato.twitter.biz/web/browse/graphql/communities/communityMembershipsRecent)
  """
  community_memberships_recent: [Community!]! @strato_column(path : "graphql/communities/communityMembershipsRecent") @strato_op(value : Fetch)
  """
  Create community availability for viewer.
  
  Generated from Strato column: [graphql/communities/createCommunityActionResult](https://strato.twitter.biz/web/browse/graphql/communities/createCommunityActionResult)
  """
  create_community_action_result: CommunityCreateActionResult @development @strato_column(path : "graphql/communities/createCommunityActionResult") @strato_op(value : Fetch)
  """
  User preference toggle for reducing data usage
  
  Access policy: this column is subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/data_saver_preferences/data_saver_preferences](https://strato.twitter.biz/web/browse/graphql/data_saver_preferences/data_saver_preferences)
  """
  data_saver_preferences(device_id: String!): DataSaverPreferences @strato_column(path : "graphql/data_saver_preferences/data_saver_preferences") @strato_op(value : Fetch)
  """
  Returns a user's ordered list of Decks.
  
  Generated from Strato column: [graphql/gryphon/decks](https://strato.twitter.biz/web/browse/graphql/gryphon/decks)
  """
  decks: [Deck!] @strato_column(path : "graphql/gryphon/decks") @strato_op(value : Fetch)
  """
  A user's DM muting timeline.
  
  Generated from Strato column: [graphql/directmessages/dmMutingTimeline](https://strato.twitter.biz/web/browse/graphql/directmessages/dmMutingTimeline)
  """
  dm_muting_timeline: Timeline @strato_column(path : "graphql/directmessages/dmMutingTimeline") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/draft/draftList](https://strato.twitter.biz/web/browse/graphql/draft/draftList)"
  draft_list(ascending: Boolean! = true, if_modified_since: Int53, limit: Short, max_execute_at_secs: Int53, max_id: NumericString, min_execute_at_secs: Int53, min_id: NumericString, states: [ScheduledTweetStateInput!]! = []): DraftListResponse @strato_column(path : "graphql/draft/draftList") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/draft/draftTweetList](https://strato.twitter.biz/web/browse/graphql/draft/draftTweetList)"
  draft_tweet_list(ascending: Boolean! = true, if_modified_since: Int53, limit: Short, max_execute_at_secs: Int53, max_id: NumericString, min_execute_at_secs: Int53, min_id: NumericString, states: [ScheduledTweetStateInput!]! = []): [DraftTweet!] @strato_column(path : "graphql/draft/draftTweetList") @strato_op(value : Fetch)
  """
  Explore user settings
  
  Generated from Strato column: [graphql/explore/explore_settings](https://strato.twitter.biz/web/browse/graphql/explore/explore_settings)
  """
  explore_settings: ExploreSettings @strato_column(path : "graphql/explore/explore_settings") @strato_op(value : Fetch)
  """
  Followed Topics Me Timeline
  
  Generated from Strato column: [graphql/socialgraph/followedTopicsMeTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/followedTopicsMeTimeline)
  """
  followed_topics_me_timeline: Timeline @strato_column(path : "graphql/socialgraph/followedTopicsMeTimeline") @strato_op(value : Fetch)
  """
  Client Education Flags to represent when a user has seen an informative prompt
  
  Generated from Strato column: [graphql/clientEducationFlags/getClientEducationFlags](https://strato.twitter.biz/web/browse/graphql/clientEducationFlags/getClientEducationFlags)
  """
  get_client_education_flags: [ClientEducationFlagWithTimestamp!] @strato_column(path : "graphql/clientEducationFlags/getClientEducationFlags") @strato_op(value : Fetch)
  """
  GraphQL endpoint for client to query for logged out candidates.
  
  Generated from Strato column: [graphql/frigate/getLoggedOutCandidates](https://strato.twitter.biz/web/browse/graphql/frigate/getLoggedOutCandidates)
  """
  get_logged_out_candidates(country_code: String, device_language: String!, guest_id: NumericString!, ip_address: String): LoggedOutCandidate @development @safety_level(value : "MagicRecsV2") @strato_column(path : "graphql/frigate/getLoggedOutCandidates") @strato_op(value : Fetch)
  """
  Whether or not the viewer is a member of any communities.
  
  Generated from Strato column: [graphql/communities/hasCommunityMemberships](https://strato.twitter.biz/web/browse/graphql/communities/hasCommunityMemberships)
  """
  has_community_memberships: Boolean! @strato_column(path : "graphql/communities/hasCommunityMemberships") @strato_op(value : Fetch)
  """
  Whether or not the viewer has access to gryphon.
  
  Generated from Strato column: [graphql/gryphon/hasGryphonAccess](https://strato.twitter.biz/web/browse/graphql/gryphon/hasGryphonAccess)
  """
  has_gryphon_access: Boolean @strato_column(path : "graphql/gryphon/hasGryphonAccess") @strato_op(value : Fetch)
  """
  A user's imported blocking timeline.
  
  Generated from Strato column: [graphql/socialgraph/importedBlockingTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/importedBlockingTimeline)
  """
  imported_blocking_timeline: Timeline @strato_column(path : "graphql/socialgraph/importedBlockingTimeline") @strato_op(value : Fetch)
  """
  Returns a list of purchasable products that matches the filter from the product catalog for In App Purchase. Locale settings are set from the CallContext
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseProductsSlice](https://strato.twitter.biz/web/browse/graphql/audiencerewards/inAppPurchaseProductsSlice)
  """
  in_app_purchase_products_slice(
    category: InAppPurchaseProductCategoryInput, 
    count: Int, 
    "UserId of the product owner"
    creator_id: NumericString, 
    cursor: String, 
    environment: InAppPurchaseProductEnvironmentInput, 
    platform: InAppPurchaseProductPlatformInput!, 
    "Country code of the App Stores"
    requested_country_code: String
  ): InAppPurchaseProductsSlice @strato_column(path : "graphql/audiencerewards/inAppPurchaseProductsSlice") @strato_op(value : Fetch)
  """
  Get onetime purchase token from Manhattan for inAppPurchase Verification
  
  Generated from Strato column: [graphql/audiencerewards/inAppPurchaseToken](https://strato.twitter.biz/web/browse/graphql/audiencerewards/inAppPurchaseToken)
  """
  in_app_purchase_token: String @deprecated(reason : "use inAppPurchaseObfuscatedIdRedeem") @strato_column(path : "graphql/audiencerewards/inAppPurchaseToken") @strato_op(value : Fetch)
  """
  A user's pending followers.
  
  Generated from Strato column: [graphql/socialgraph/incomingFollowRequestsTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/incomingFollowRequestsTimeline)
  """
  incoming_follow_requests_timeline: Timeline @strato_column(path : "graphql/socialgraph/incomingFollowRequestsTimeline") @strato_op(value : Fetch)
  """
  Exposes a boolean indicating whether or not the viewer is eligible to create exclusive tweets.
  
  Generated from Strato column: [graphql/audiencerewards/isActiveCreator](https://strato.twitter.biz/web/browse/graphql/audiencerewards/isActiveCreator)
  """
  is_active_creator: Boolean @strato_column(path : "graphql/audiencerewards/isActiveCreator") @strato_op(value : Fetch)
  """
  Describes whether the user's session is restricted according to TFE header X-TFE-Restricted-Session.
  
  Generated from Strato column: [graphql/auth/isTfeRestrictedSession](https://strato.twitter.biz/web/browse/graphql/auth/isTfeRestrictedSession)
  """
  is_tfe_restricted_session: Boolean @strato_column(path : "graphql/auth/isTfeRestrictedSession") @strato_op(value : Fetch)
  """
  Returns a list of Delegation Groups the authenticated user is part of.
  
  Generated from Strato column: [graphql/account-delegation/delegate/listDelegationGroups](https://strato.twitter.biz/web/browse/graphql/account-delegation/delegate/listDelegationGroups)
  """
  list_delegation_groups(roles: [DelegationRoleInput!], status: DelegationInvitationStatusInput): [DelegationGroup!] @development @strato_column(path : "graphql/account-delegation/delegate/listDelegationGroups") @strato_op(value : Fetch)
  """
  Timeline which defines content of the List Discovery Page
  
  Generated from Strato column: [graphql/list/listDiscoveryTimeline](https://strato.twitter.biz/web/browse/graphql/list/listDiscoveryTimeline)
  """
  list_discovery_timeline: Timeline @development @strato_column(path : "graphql/list/listDiscoveryTimeline") @strato_op(value : Fetch)
  """
  Timeline which defines content of the List Management Page
  
  Generated from Strato column: [graphql/list/listManagementTimeline](https://strato.twitter.biz/web/browse/graphql/list/listManagementTimeline)
  """
  list_management_timeline: Timeline @strato_column(path : "graphql/list/listManagementTimeline") @strato_op(value : Fetch)
  """
  Returns all ProductSubscriptions for the given authenticated user.
  
  Generated from Strato column: [graphql/subscription-services/listProductSubscriptions](https://strato.twitter.biz/web/browse/graphql/subscription-services/listProductSubscriptions)
  """
  list_product_subscriptions: [ProductSubscription!] @strato_column(path : "graphql/subscription-services/listProductSubscriptions") @strato_op(value : Fetch)
  """
  Returns all SubscriptionProducts.
  
  Generated from Strato column: [graphql/subscription-services/listSubscriptionProducts](https://strato.twitter.biz/web/browse/graphql/subscription-services/listSubscriptionProducts)
  """
  list_subscription_products: [SubscriptionProduct!] @strato_column(path : "graphql/subscription-services/listSubscriptionProducts") @strato_op(value : Fetch)
  """
  A user's muting timeline.
  
  Generated from Strato column: [graphql/socialgraph/mutingTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/mutingTimeline)
  """
  muting_timeline: Timeline @strato_column(path : "graphql/socialgraph/mutingTimeline") @strato_op(value : Fetch)
  """
  NotInterested Topics Me Timeline
  
  Generated from Strato column: [graphql/interestsMixer/notInterestedTopicsMeTimeline](https://strato.twitter.biz/web/browse/graphql/interestsMixer/notInterestedTopicsMeTimeline)
  """
  not_interested_topics_me_timeline: Timeline @strato_column(path : "graphql/interestsMixer/notInterestedTopicsMeTimeline") @strato_op(value : Fetch)
  """
  User's NotInterested Topics Timeline
  
  Generated from Strato column: [graphql/interestsMixer/notInterestedTopicsTimeline](https://strato.twitter.biz/web/browse/graphql/interestsMixer/notInterestedTopicsTimeline)
  """
  not_interested_topics_timeline: Timeline @strato_column(path : "graphql/interestsMixer/notInterestedTopicsTimeline") @strato_op(value : Fetch)
  """
  Nux Category Picker timeline
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxCategoryPickerTimeline](https://strato.twitter.biz/web/browse/graphql/account-recommendations-mixer/nuxCategoryPickerTimeline)
  """
  nux_category_picker_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/nuxCategoryPickerTimeline") @strato_op(value : Fetch)
  """
  Nux Topics Picker timeline
  
  Generated from Strato column: [graphql/account-recommendations-mixer/nuxTopicsPickerTimeline](https://strato.twitter.biz/web/browse/graphql/account-recommendations-mixer/nuxTopicsPickerTimeline)
  """
  nux_topics_picker_timeline: Timeline @strato_column(path : "graphql/account-recommendations-mixer/nuxTopicsPickerTimeline") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/weaverbird/phone](https://strato.twitter.biz/web/browse/graphql/weaverbird/phone)"
  phone: ApiUserPhone @strato_column(path : "graphql/weaverbird/phone") @strato_op(value : Fetch)
  """
  Fetches the current user's pinned lists. If the user no longer follows a pinned list, then it is dropped and remaining pinned lists are written to backing store.
  
  Generated from Strato column: [graphql/list/pinnedLists](https://strato.twitter.biz/web/browse/graphql/list/pinnedLists)
  """
  pinned_lists: [List!] @strato_column(path : "graphql/list/pinnedLists") @strato_op(value : Fetch)
  """
  This is a demo column for returning a urt-formatted timeline of items.
  
  It is intended to be used as a development stub in client applications and should not be used in production.
  
  Generated from Strato column: [graphql/timelines/prototypeDemoTimeline](https://strato.twitter.biz/web/browse/graphql/timelines/prototypeDemoTimeline)
  """
  prototype_demo_timeline(moment_ids: [String!], tweet_ids: [String!], user_ids: [String!]): TimelineTimeline @strato_column(path : "graphql/timelines/prototypeDemoTimeline") @strato_op(value : Fetch)
  """
  Fetches the audience estimations for certain targeting criteria and budget
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteAudienceEstimation](https://strato.twitter.biz/web/browse/graphql/quick-promote/quick-promoteAudienceEstimation)
  """
  quick_promote_audience_estimation(budget: QuickPromotePromotionBudgetInput!, targeting: EasypromoteTargetingOverridesInput!, tweet_id: NumericString!, user: QuickPromotePromotionContextInput!): QuickPromoteAudienceEstimates @strato_column(path : "graphql/quick-promote/quick-promoteAudienceEstimation") @strato_op(value : Fetch)
  """
  Budget range per country
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteBudgetByCountry](https://strato.twitter.biz/web/browse/graphql/quick-promote/quick-promoteBudgetByCountry)
  """
  quick_promote_budget_by_country(
    "Country code"
    country_code: String!
  ): QuickPromoteBudgets @strato_column(path : "graphql/quick-promote/quick-promoteBudgetByCountry") @strato_op(value : Fetch)
  """
  Budget range per currency
  
  Generated from Strato column: [graphql/quick-promote/quick-promoteBudgetByCurrency](https://strato.twitter.biz/web/browse/graphql/quick-promote/quick-promoteBudgetByCurrency)
  """
  quick_promote_budget_by_currency(
    "Currency code"
    currency_code: String!
  ): QuickPromoteBudgets @strato_column(path : "graphql/quick-promote/quick-promoteBudgetByCurrency") @strato_op(value : Fetch)
  """
  Timeline of tweets from communities the viewer is a member of, ranked by relevance.
  
  Generated from Strato column: [graphql/communities/rankedCommunitiesTimeline](https://strato.twitter.biz/web/browse/graphql/communities/rankedCommunitiesTimeline)
  """
  ranked_communities_timeline: Timeline! @strato_column(path : "graphql/communities/rankedCommunitiesTimeline") @strato_op(value : Fetch)
  """
  Returns a timeline of would-be Rito-actioned users had the perspectival user been enrolled in Safety Mode.
  
  Generated from Strato column: [graphql/interventions/ritoFlaggedAccountsTimeline](https://strato.twitter.biz/web/browse/graphql/interventions/ritoFlaggedAccountsTimeline)
  """
  rito_flagged_accounts_timeline: Timeline @strato_column(path : "graphql/interventions/ritoFlaggedAccountsTimeline") @strato_op(value : Fetch)
  """
  Rux Topics Picker timeline
  
  Generated from Strato column: [graphql/interestsMixer/ruxTopicsPickerTimeline](https://strato.twitter.biz/web/browse/graphql/interestsMixer/ruxTopicsPickerTimeline)
  """
  rux_topics_picker_timeline: Timeline @strato_column(path : "graphql/interestsMixer/ruxTopicsPickerTimeline") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/schedule/scheduledList](https://strato.twitter.biz/web/browse/graphql/schedule/scheduledList)"
  scheduled_list(ascending: Boolean! = true, if_modified_since: Int53, limit: Short, max_execute_at_secs: Int53, max_id: NumericString, min_execute_at_secs: Int53, min_id: NumericString, states: [ScheduledTweetStateInput!]! = []): ScheduledTweetResponse @strato_column(path : "graphql/schedule/scheduledList") @strato_op(value : Fetch)
  "Generated from Strato column: [graphql/schedule/scheduledTweetList](https://strato.twitter.biz/web/browse/graphql/schedule/scheduledTweetList)"
  scheduled_tweet_list(ascending: Boolean! = true, if_modified_since: Int53, limit: Short, max_execute_at_secs: Int53, max_id: NumericString, min_execute_at_secs: Int53, min_id: NumericString, states: [ScheduledTweetStateInput!]! = []): [ScheduledTweet!] @strato_column(path : "graphql/schedule/scheduledTweetList") @strato_op(value : Fetch)
  """
  Search query string
  
  Generated from Strato column: [graphql/search/searchSearchByRawQuery](https://strato.twitter.biz/web/browse/graphql/search/searchSearchByRawQuery)
  """
  search_search_by_raw_query(raw_query: String!): SearchQuery @development @strato_column(path : "graphql/search/searchSearchByRawQuery") @strato_op(value : Fetch)
  """
  A user's smart blocking timeline.
  
  Generated from Strato column: [graphql/interventions/smartBlockingTimeline](https://strato.twitter.biz/web/browse/graphql/interventions/smartBlockingTimeline)
  """
  smart_blocking_timeline: Timeline @strato_column(path : "graphql/interventions/smartBlockingTimeline") @strato_op(value : Fetch)
  """
  List SubscriptionProductFeatures available for the calling client.
  
  Generated from Strato column: [graphql/subscription-product-features/subscriptionProductFeaturesForClient](https://strato.twitter.biz/web/browse/graphql/subscription-product-features/subscriptionProductFeaturesForClient)
  """
  subscription_product_features_for_client: [SubscriptionProductFeature!] @strato_column(path : "graphql/subscription-product-features/subscriptionProductFeaturesForClient") @strato_op(value : Fetch)
  """
  The total number of users who super follow the viewer
  
  Generated from Strato column: [graphql/audiencerewards/superFollowersCount](https://strato.twitter.biz/web/browse/graphql/audiencerewards/superFollowersCount)
  """
  super_followers_count: Int @strato_column(path : "graphql/audiencerewards/superFollowersCount") @strato_op(value : Fetch)
  """
  A timeline of users that super follow the viewer
  
  Generated from Strato column: [graphql/audiencerewards/superFollowersTimeline](https://strato.twitter.biz/web/browse/graphql/audiencerewards/superFollowersTimeline)
  """
  super_followers_timeline: Timeline @strato_column(path : "graphql/audiencerewards/superFollowersTimeline") @strato_op(value : Fetch)
  """
  Exposes a boolean indicating whether or not the viewer is eligible for super likes
  
  Generated from Strato column: [graphql/audiencerewards/superLikesEligible](https://strato.twitter.biz/web/browse/graphql/audiencerewards/superLikesEligible)
  """
  super_likes_eligible: Boolean @development @strato_column(path : "graphql/audiencerewards/superLikesEligible") @strato_op(value : Fetch)
  """
  Authenticated user's team relationships
  Access policy: this column is subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/teams/teams](https://strato.twitter.biz/web/browse/graphql/teams/teams)
  """
  teams: TeamsRelationships @strato_column(path : "graphql/teams/teams") @strato_op(value : Fetch)
  """
  Topics Management Page
  
  Generated from Strato column: [graphql/interestsMixer/topicsManagementPage](https://strato.twitter.biz/web/browse/graphql/interestsMixer/topicsManagementPage)
  """
  topics_management_page: Page @safety_level(value : "TimelineHomeTopicFollowRecommendations") @strato_column(path : "graphql/interestsMixer/topicsManagementPage") @strato_op(value : Fetch)
  """
  Home Topics Picker Page
  
  Generated from Strato column: [graphql/interestsMixer/topicsPickerPage](https://strato.twitter.biz/web/browse/graphql/interestsMixer/topicsPickerPage)
  """
  topics_picker_page: Page @safety_level(value : "TimelineHomeTopicFollowRecommendations") @strato_column(path : "graphql/interestsMixer/topicsPickerPage") @strato_op(value : Fetch)
  """
  A debug endpoint that returns URT.
  
  Generated from Strato column: [graphql/timelines/urtFixture](https://strato.twitter.biz/web/browse/graphql/timelines/urtFixture)
  """
  urt_fixture: Timeline @development @strato_column(path : "graphql/timelines/urtFixture") @strato_op(value : Fetch)
  """
  Links to the currently-logged-in user within the viewer entry point as part of the private GraphQL schema
  
  Generated from Strato column: [graphql/core-api/user](https://strato.twitter.biz/web/browse/graphql/core-api/user)
  """
  user: User @deprecated(reason : "migrated to user_results") @strato_column(path : "graphql/core-api/user") @strato_op(value : Fetch)
  """
  Returns true/false for a list of provided feature names
  
  Access policy: this column is subject to Bouncer restrictions.
  
  Generated from Strato column: [graphql/userFeatures/userFeatures](https://strato.twitter.biz/web/browse/graphql/userFeatures/userFeatures)
  """
  user_features(features: [String!]!): [UserFeature!] @strato_column(path : "graphql/userFeatures/userFeatures") @strato_op(value : Fetch)
  """
  Result field; Links to the currently-logged-in user within the viewer entry point as part of the private GraphQL schema
  
  Generated from Strato column: [graphql/core-api/user](https://strato.twitter.biz/web/browse/graphql/core-api/user)
  """
  user_result: UserResult @deprecated(reason : "migrated to user_results; field will always be null") @strato_column(path : "graphql/core-api/user") @strato_op(value : Fetch)
  """
  Result field; Links to the currently-logged-in user within the viewer entry point as part of the private GraphQL schema
  
  Generated from Strato column: [graphql/core-api/user](https://strato.twitter.biz/web/browse/graphql/core-api/user)
  """
  user_results: UserResults @strato_column(path : "graphql/core-api/user") @strato_op(value : Fetch)
  """
  A very important tweeter (VIT)'s VIT followers timeline.
  
  Generated from Strato column: [graphql/socialgraph/vitFollowersTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/vitFollowersTimeline)
  """
  vit_followers_timeline: Timeline @strato_column(path : "graphql/socialgraph/vitFollowersTimeline") @strato_op(value : Fetch)
  """
  A very important tweeter (VIT)'s VIT following timeline.
  
  Generated from Strato column: [graphql/socialgraph/vitFollowingTimeline](https://strato.twitter.biz/web/browse/graphql/socialgraph/vitFollowingTimeline)
  """
  vit_following_timeline: Timeline @strato_column(path : "graphql/socialgraph/vitFollowingTimeline") @strato_op(value : Fetch)
}

"Generated from type: [`com.twitter.voice.PublicVoiceInfo`](http://go/sg.thrift/PublicVoiceInfo)"
type VoiceInfo @thrift_type(name : "PublicVoiceInfo", package : "com.twitter.voice") {
  audio_space_id: String
  audio_space_title: String
  audiowave_values: [Short!]
  clip_index: Short
  number_of_clips: Short
  total_duration_millis: Int
}

"Generated from Strato space: `Web3NFTCollection`"
type Web3NFTCollection @strato_space(name : "Web3NFTCollection") {
  "A globally unique identifier"
  id: ID!
  """
  Page through users owning at least one NFT in given collection
  
  Generated from Strato column: [graphql/tweb3/nftOwnersSlice.Web3NFTCollection](https://strato.twitter.biz/web/browse/Web3NFTCollection/graphql/tweb3/nftOwnersSlice)
  """
  nft_owners_slice(count: Int, cursor: String): UserSlice @development @strato_column(path : "graphql/tweb3/nftOwnersSlice.Web3NFTCollection") @strato_op(value : Fetch)
  """
  Page through users owning at least one NFT in given collection
  
  Generated from Strato column: [graphql/tweb3/nftOwnersTimeline.Web3NFTCollection](https://strato.twitter.biz/web/browse/Web3NFTCollection/graphql/tweb3/nftOwnersTimeline)
  """
  nft_owners_timeline(cursor_string: String, max_count: Int): TimelineTimeline @development @strato_column(path : "graphql/tweb3/nftOwnersTimeline.Web3NFTCollection") @strato_op(value : Fetch)
  """
  Total number of twitter users owning at least one asset in this collection
  
  Generated from Strato column: [graphql/tweb3/ownersCount.Web3NFTCollection](https://strato.twitter.biz/web/browse/Web3NFTCollection/graphql/tweb3/ownersCount)
  """
  owners_count: Int53 @development @strato_column(path : "graphql/tweb3/ownersCount.Web3NFTCollection") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.Web3Wallet`](http://go/sg.thrift/Web3Wallet)"
type Web3Wallet @thrift_type(name : "Web3Wallet", package : "com.twitter.tweb3.graphql.model") {
  address: String!
  connected_at_msec: Int53!
  network: Network!
  nickname: String
}

"Generated from type: [`com.twitter.webaf.strato.Business`](http://go/sg.thrift/Business)"
type WebAfBusiness @thrift_type(name : "Business", package : "com.twitter.webaf.strato") {
  id: NumericString!
  name: String!
}

"Generated from type: [`com.twitter.payments.web.SubscriptionCheckoutSession`](http://go/sg.thrift/SubscriptionCheckoutSession)"
type WebSubscriptionCheckoutSession @thrift_type(name : "SubscriptionCheckoutSession", package : "com.twitter.payments.web") {
  currency_code: WebSubscriptionsCurrencyCode
  external_user_id: String
  session_id: String!
  session_status: SessionStatus!
  session_url: String!
  sub_total_amount_local_micro: Int53
  tax_amount_local_micro: Int53
  total_amount_local_micro: Int53
}

"Generated from Strato space: `WebSubscriptionProductDetails`"
type WebSubscriptionProductDetails @strato_space(name : "WebSubscriptionProductDetails") {
  "A globally unique identifier"
  id: ID!
  """
  Returns price list for the fetched ProductDetailsResponse.
  
  Generated from Strato column: [graphql/payments/prices.WebSubscriptionProductDetails](https://strato.twitter.biz/web/browse/WebSubscriptionProductDetails/graphql/payments/prices)
  """
  prices: [PriceDetail!] @strato_column(path : "graphql/payments/prices.WebSubscriptionProductDetails") @strato_op(value : Fetch)
  "An ID suitable for use in the REST API."
  rest_id: String!
}

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.WebsiteTarget`](http://go/sg.thrift/WebsiteTarget)"
type WebsiteTarget @thrift_type(name : "WebsiteTarget", package : "com.twitter.strato.columns.creative_entity_enrichments") {
  url: Url!
}

"Generated from type: [`com.twitter.strato.graphql.WholeEntity`](http://go/sg.thrift/WholeEntity)"
type WholeEntity @thrift_type(name : "WholeEntity", package : "com.twitter.strato.graphql") {
  end: Int!
  normalized_text: String
  probability: Float!
  start: Int!
  whole_entity_type: String
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestFailedReason`](http://go/sg.thrift/AcceptFollowRequestFailedReason)"
enum AcceptFollowRequestFailedReason @thrift_type(name : "AcceptFollowRequestFailedReason", package : "com.twitter.strato.columns.socialgraph") {
  OverLimit
  SafetyRateLimit
  Spammer
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestInvalidRequestReason`](http://go/sg.thrift/AcceptFollowRequestInvalidRequestReason)"
enum AcceptFollowRequestInvalidRequestReason @thrift_type(name : "AcceptFollowRequestInvalidRequestReason", package : "com.twitter.strato.columns.socialgraph") {
  AccountIsPublic
  Blocked
  CannotFollowSelf
  Deactivated
  FollowRequestNotFound
  Offboarded
  Protected
  SafetyBounce
  Suspended
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.AcceptFollowRequestSuccessReason`](http://go/sg.thrift/AcceptFollowRequestSuccessReason)"
enum AcceptFollowRequestSuccessReason @thrift_type(name : "AcceptFollowRequestSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  AcceptedFollowRequest
}

"Generated from type: [`com.twitter.balance_service.graphql.AccountBalanceType`](http://go/sg.thrift/AccountBalanceType)"
enum AccountBalanceType @thrift_type(name : "AccountBalanceType", package : "com.twitter.balance_service.graphql") {
  Coins
  CoinsPayout
  Seeds
  SeedsPile
}

"Generated from type: [`com.twitter.balance_service.graphql.AccountBalanceType`](http://go/sg.thrift/AccountBalanceType)"
enum AccountBalanceTypeInput @thrift_type(name : "AccountBalanceType", package : "com.twitter.balance_service.graphql") {
  Coins
  CoinsPayout
  Seeds
  SeedsPile
}

"Generated from type: [`com.twitter.ceaaccountpermissions.PermissionSet`](http://go/sg.thrift/PermissionSet)"
enum AccountPermissionSet @thrift_type(name : "PermissionSet", package : "com.twitter.ceaaccountpermissions") {
  AccountAdmin
  AdManager
  AdViewer
  Analyst
  ApiPartnerAccountAdmin
  ApiPartnerUser
  BillingAnalyst
  CreativeManager
  MeasurementApiPartnerUser
  RestrictedAudienceManager
  StudioAccountAdmin
  StudioAnalyst
  StudioPublisher
  StudioUploader
  StudioUser
  TweetComposer
}

"Generated from type: [`com.twitter.accountsync.ColumnWidth`](http://go/sg.thrift/ColumnWidth)"
enum AccountSyncColumnWidth @thrift_type(name : "ColumnWidth", package : "com.twitter.accountsync") {
  Medium
  Narrow
  Wide
}

"Generated from type: [`com.twitter.accountsync.ColumnWidth`](http://go/sg.thrift/ColumnWidth)"
enum AccountSyncColumnWidthInput @thrift_type(name : "ColumnWidth", package : "com.twitter.accountsync") {
  Medium
  Narrow
  Wide
}

"Generated from type: [`com.twitter.accountsync.FeedType`](http://go/sg.thrift/FeedType)"
enum AccountSyncFeedType @thrift_type(name : "FeedType", package : "com.twitter.accountsync") {
  Bookmarks
  Broadcast
  Chat
  Conversation
  Drafts
  Event
  Explore
  Generic
  Home
  List
  Messages
  Notifications
  Profile
  Scheduled
  Search
  Topic
}

"Generated from type: [`com.twitter.accountsync.FeedType`](http://go/sg.thrift/FeedType)"
enum AccountSyncFeedTypeInput @thrift_type(name : "FeedType", package : "com.twitter.accountsync") {
  Bookmarks
  Broadcast
  Chat
  Conversation
  Drafts
  Event
  Explore
  Generic
  Home
  List
  Messages
  Notifications
  Profile
  Scheduled
  Search
  Topic
}

"Generated from type: [`com.twitter.accountsync.MediaPreview`](http://go/sg.thrift/MediaPreview)"
enum AccountSyncMediaPreview @thrift_type(name : "MediaPreview", package : "com.twitter.accountsync") {
  Cropped
  Small
  Uncropped
}

"Generated from type: [`com.twitter.accountsync.MediaPreview`](http://go/sg.thrift/MediaPreview)"
enum AccountSyncMediaPreviewInput @thrift_type(name : "MediaPreview", package : "com.twitter.accountsync") {
  Cropped
  Small
  Uncropped
}

"Generated from type: [`com.twitter.accountsync.Pages`](http://go/sg.thrift/Pages)"
enum AccountSyncPages @thrift_type(name : "Pages", package : "com.twitter.accountsync") {
  Feed
  Filters
  Width
}

"Generated from type: [`com.twitter.accountsync.Pages`](http://go/sg.thrift/Pages)"
enum AccountSyncPagesInput @thrift_type(name : "Pages", package : "com.twitter.accountsync") {
  Feed
  Filters
  Width
}

"Generated from type: [`com.twitter.accountsync.SharingStatus`](http://go/sg.thrift/SharingStatus)"
enum AccountSyncSharingStatus @thrift_type(name : "SharingStatus", package : "com.twitter.accountsync") {
  Following
  Private
  Public
}

"Generated from type: [`com.twitter.accountsync.SharingStatus`](http://go/sg.thrift/SharingStatus)"
enum AccountSyncSharingStatusInput @thrift_type(name : "SharingStatus", package : "com.twitter.accountsync") {
  Following
  Private
  Public
}

"Generated from type: [`com.twitter.accountsync.Tabs`](http://go/sg.thrift/Tabs)"
enum AccountSyncTabs @thrift_type(name : "Tabs", package : "com.twitter.accountsync") {
  Options
  Search
}

"Generated from type: [`com.twitter.accountsync.Tabs`](http://go/sg.thrift/Tabs)"
enum AccountSyncTabsInput @thrift_type(name : "Tabs", package : "com.twitter.accountsync") {
  Options
  Search
}

"Generated from type: [`com.twitter.accountsync.TweetFeedOptionsEnum`](http://go/sg.thrift/TweetFeedOptionsEnum)"
enum AccountSyncTweetFeedOptions @thrift_type(name : "TweetFeedOptionsEnum", package : "com.twitter.accountsync") {
  Auto
  Manual
}

"Generated from type: [`com.twitter.accountsync.TweetFeedOptionsEnum`](http://go/sg.thrift/TweetFeedOptionsEnum)"
enum AccountSyncTweetFeedOptionsInput @thrift_type(name : "TweetFeedOptionsEnum", package : "com.twitter.accountsync") {
  Auto
  Manual
}

"Generated from type: [`com.twitter.accountsync.VisualScaling`](http://go/sg.thrift/VisualScaling)"
enum AccountSyncVisualScaling @thrift_type(name : "VisualScaling", package : "com.twitter.accountsync") {
  Default
  ExtraLarge
  ExtraSmall
  Large
  Small
}

"Generated from type: [`com.twitter.accountsync.VisualScaling`](http://go/sg.thrift/VisualScaling)"
enum AccountSyncVisualScalingInput @thrift_type(name : "VisualScaling", package : "com.twitter.accountsync") {
  Default
  ExtraLarge
  ExtraSmall
  Large
  Small
}

enum AdAccountUserPermissionSet {
  AccountAdmin
  AdManager
  AdViewer
  Analyst
  ApiPartnerAccountAdmin
  ApiPartnerUser
  BillingAnalyst
  CreativeManager
  MeasurementApiPartnerUser
  RestrictedAudienceManager
  StudioAccountAdmin
  StudioAnalyst
  StudioPublisher
  StudioUploader
  StudioUser
  TweetComposer
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberFailedReason`](http://go/sg.thrift/AddListMemberFailedReason)"
enum AddListMemberFailedReason @thrift_type(name : "AddListMemberFailedReason", package : "com.twitter.dataproducts.devo.lists.graphql") {
  SpammerRejected
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberInvalidRequestReason`](http://go/sg.thrift/AddListMemberInvalidRequestReason)"
enum AddListMemberInvalidRequestReason @thrift_type(name : "AddListMemberInvalidRequestReason", package : "com.twitter.dataproducts.devo.lists.graphql") {
  Blocked
  Deactivated
  ListNotFound
  MaxMembersExceeded
  NotAllowed
  Offboarded
  ReadOnly
  Suspended
  UserNotFound
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.AddListMemberSuccessReason`](http://go/sg.thrift/AddListMemberSuccessReason)"
enum AddListMemberSuccessReason @thrift_type(name : "AddListMemberSuccessReason", package : "com.twitter.dataproducts.devo.lists.graphql") {
  Added
}

"Generated from type: [`com.twitter.convosvc.strato.AddParticipantsFailureReason`](http://go/sg.thrift/AddParticipantsFailureReason)"
enum AddParticipantsFailureReason @thrift_type(name : "AddParticipantsFailureReason", package : "com.twitter.convosvc.strato") {
  BouncedException
  ClientError
  UserValidationError
  ValidationError
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.AddSuperFollowerPrivacyResultCode`](http://go/sg.thrift/AddSuperFollowerPrivacyResultCode)"
enum AddSuperFollowerPrivacyResultCode @thrift_type(name : "AddSuperFollowerPrivacyResultCode", package : "com.twitter.strato.columns.audience_rewards") {
  AlreadyPrivate
  NotSuperFollowing
  Success
}

"Generated from type: [`com.twitter.ads.entities.db.AgeBucket`](http://go/sg.thrift/AgeBucket)"
enum AdsAgeBucketInput @thrift_type(name : "AgeBucket", package : "com.twitter.ads.entities.db") {
  Age13To17
  Age13To19
  Age13To24
  Age13To29
  Age13To34
  Age13To39
  Age13To49
  Age13To54
  Age18To24
  Age18To34
  Age18To49
  Age18To54
  Age20To29
  Age20To34
  Age20To39
  Age20To49
  Age21To34
  Age21To49
  Age21To54
  Age25To34
  Age25To49
  Age25To54
  Age30To39
  Age30To49
  Age35To44
  Age35To49
  Age35To54
  Age40To49
  Age45To54
  Age55To64
  AgeOver13
  AgeOver18
  AgeOver20
  AgeOver21
  AgeOver25
  AgeOver30
  AgeOver35
  AgeOver40
  AgeOver50
  AgeOver65
  AgeUnder13
  AgeUnknown
}

"Generated from type: [`com.twitter.ads.entities.db.Gender`](http://go/sg.thrift/Gender)"
enum AdsGenderInput @thrift_type(name : "Gender", package : "com.twitter.ads.entities.db") {
  AnyGender
  Female
  Male
}

"Generated from type: [`com.twitter.ads.dataservice.client.CampaignDisplayState`](http://go/sg.thrift/CampaignDisplayState)"
enum AdvertiserCampaignDisplayState @thrift_type(name : "CampaignDisplayState", package : "com.twitter.ads.dataservice.client") {
  Deleted
  Draft
  Exhausted
  Expired
  Halted
  Paused
  Pending
  Recommended
  Running
  Scheduled
  Unknown
  Unsaved
}

"Generated from type: [`com.twitter.ads.dataservice.client.CampaignDisplayState`](http://go/sg.thrift/CampaignDisplayState)"
enum AdvertiserCampaignDisplayStateInput @thrift_type(name : "CampaignDisplayState", package : "com.twitter.ads.dataservice.client") {
  Deleted
  Draft
  Exhausted
  Expired
  Halted
  Paused
  Pending
  Recommended
  Running
  Scheduled
  Unknown
  Unsaved
}

"Generated from type: [`com.twitter.adsmanager.CampaignType`](http://go/sg.thrift/CampaignType)"
enum AdvertiserCampaignType @thrift_type(name : "CampaignType", package : "com.twitter.adsmanager") {
  ObjectiveBasedCampaigns
  PromotedTrends
  Reserved3
  Reserved4
}

"Generated from type: [`com.twitter.adsmanager.CampaignType`](http://go/sg.thrift/CampaignType)"
enum AdvertiserCampaignTypeInput @thrift_type(name : "CampaignType", package : "com.twitter.adsmanager") {
  ObjectiveBasedCampaigns
  PromotedTrends
  Reserved3
  Reserved4
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnCategory`](http://go/sg.thrift/ColumnCategory)"
enum AdvertiserColumnCategory @thrift_type(name : "ColumnCategory", package : "com.twitter.ceacmetricolumn") {
  Accounts
  AdGroups
  AdUnits
  Ads
  Audiences
  Campaigns
  DisplayCreatives
  FundingSources
  Segmentation
  Unknown
  VideoCreatives
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnCreationSource`](http://go/sg.thrift/ColumnCreationSource)"
enum AdvertiserColumnCreationSource @thrift_type(name : "ColumnCreationSource", package : "com.twitter.ceacmetricolumn") {
  AdsDataService
  DataApi
  DataService
  Unknown
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnDisplayType`](http://go/sg.thrift/ColumnDisplayType)"
enum AdvertiserColumnDisplayType @thrift_type(name : "ColumnDisplayType", package : "com.twitter.ceacmetricolumn") {
  Default
  Fixed
  Required
  Unknown
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnGroup`](http://go/sg.thrift/ColumnGroup)"
enum AdvertiserColumnGroup @thrift_type(name : "ColumnGroup", package : "com.twitter.ceacmetricolumn") {
  AppInstallResults
  AuctionInsights
  BilledResults
  Conversions
  FollowerResults
  LeadResults
  MidrollResults
  OrganicResults
  OtherEarnedResults
  PrerollResults
  ResultsForObjective
  Serving
  Settings
  Spend
  TweetEngagementResults
  Unknown
  VideoViewResults
  WebsiteResults
}

"Generated from type: [`com.twitter.ceacmetricolumn.ColumnType`](http://go/sg.thrift/ColumnType)"
enum AdvertiserColumnType @thrift_type(name : "ColumnType", package : "com.twitter.ceacmetricolumn") {
  Date
  Id
  Number
  Percentage
  Spend
  Status
  Text
  Unknown
}

"Generated from type: [`com.twitter.ceafilters.FilterEntityLevel`](http://go/sg.thrift/FilterEntityLevel)"
enum AdvertiserFilterEntityLevel @thrift_type(name : "FilterEntityLevel", package : "com.twitter.ceafilters") {
  Ad
  AdGroup
  Campaign
  FundingSource
}

"Generated from type: [`com.twitter.ceafilters.FilterKey`](http://go/sg.thrift/FilterKey)"
enum AdvertiserFilterKey @thrift_type(name : "FilterKey", package : "com.twitter.ceafilters") {
  AdvertiserAdNameFilter
  AdvertiserCampaignIdFilter
  AdvertiserCampaignNameFilter
  AdvertiserCampaignTypesFilter
  AdvertiserDisplayStateFilter
  AdvertiserFundingInstrumentsFilter
  AdvertiserFundingSourceNameFilter
  AdvertiserHadDeliveryFilter
  AdvertiserLineItemIdFilter
  AdvertiserLineItemNameFilter
  AdvertiserObjectivesFilter
}

"Generated from type: [`com.twitter.ceafilters.AdvertiserFilterType`](http://go/sg.thrift/AdvertiserFilterType)"
enum AdvertiserFilterType @thrift_type(name : "AdvertiserFilterType", package : "com.twitter.ceafilters") {
  BooleanMatch
  LiteralInputMatch
  MultiSelectList
  MultiTextInputMatch
  SingleSelectList
  SubstringInputMatch
}

"Generated from type: [`com.twitter.adsmanager.PlacementCategory`](http://go/sg.thrift/PlacementCategory)"
enum AdvertiserPlacementCategory @thrift_type(name : "PlacementCategory", package : "com.twitter.adsmanager") {
  AllChannels
  CrossChannel
  OffTwitter
  OnTwitter
  Reserved5
  Reserved6
}

"Generated from type: [`com.twitter.adsmanager.PlacementCategory`](http://go/sg.thrift/PlacementCategory)"
enum AdvertiserPlacementCategoryInput @thrift_type(name : "PlacementCategory", package : "com.twitter.adsmanager") {
  AllChannels
  CrossChannel
  OffTwitter
  OnTwitter
  Reserved5
  Reserved6
}

"Generated from type: [`com.twitter.adsmanager.StringOperator`](http://go/sg.thrift/StringOperator)"
enum AdvertiserStringOperator @thrift_type(name : "StringOperator", package : "com.twitter.adsmanager") {
  Contains
  NotContains
}

"Generated from type: [`com.twitter.adsmanager.StringOperator`](http://go/sg.thrift/StringOperator)"
enum AdvertiserStringOperatorInput @thrift_type(name : "StringOperator", package : "com.twitter.adsmanager") {
  Contains
  NotContains
}

"Generated from type: [`com.twitter.strato.graphql.accessibility.AltTextPromptType`](http://go/sg.thrift/AltTextPromptType)"
enum AltTextPromptType @thrift_type(name : "AltTextPromptType", package : "com.twitter.strato.graphql.accessibility") {
  None
  Nudge
  Prompt
  Require
}

"Generated from type: [`com.twitter.strato.graphql.accessibility.AltTextPromptType`](http://go/sg.thrift/AltTextPromptType)"
enum AltTextPromptTypeInput @thrift_type(name : "AltTextPromptType", package : "com.twitter.strato.graphql.accessibility") {
  None
  Nudge
  Prompt
  Require
}

"Generated from type: [`com.twitter.professionalanalytics.MetricType`](http://go/sg.thrift/MetricType)"
enum AnalyticsMetricType @thrift_type(name : "MetricType", package : "com.twitter.professionalanalytics") {
  DetailExpands
  Engagement
  Follows
  Impressions
  Likes
  LinkClicks
  MediaViews
  ProfileVisits
  Replies
  Retweets
  UniqueVideoViews
  VideoCompletions
  VideoPlayed25Percent
  VideoPlayed50Percent
  VideoPlayed75Percent
  VideoStarts
  VideoViews
}

"Generated from type: [`com.twitter.professionalanalytics.MetricType`](http://go/sg.thrift/MetricType)"
enum AnalyticsMetricTypeInput @thrift_type(name : "MetricType", package : "com.twitter.professionalanalytics") {
  DetailExpands
  Engagement
  Follows
  Impressions
  Likes
  LinkClicks
  MediaViews
  ProfileVisits
  Replies
  Retweets
  UniqueVideoViews
  VideoCompletions
  VideoPlayed25Percent
  VideoPlayed50Percent
  VideoPlayed75Percent
  VideoStarts
  VideoViews
}

"""
The conversation control policy. See go/dont-at-me for more details.

Generated from type: [`com.twitter.strato.graphql.ApiConversationPolicy`](http://go/sg.thrift/ApiConversationPolicy)
"""
enum ApiConversationPolicy @thrift_type(name : "ApiConversationPolicy", package : "com.twitter.strato.graphql") {
  ByInvitation
  Community
  Followers
}

"Generated from type: [`com.twitter.strato.graphql.MediaAvailabilityStatus`](http://go/sg.thrift/MediaAvailabilityStatus)"
enum ApiMediaAvailabilityStatus @thrift_type(name : "MediaAvailabilityStatus", package : "com.twitter.strato.graphql") {
  Available
  Reserved3
  Reserved4
  Reserved5
  Unavailable
  Unknown
}

"Generated from type: [`com.twitter.strato.graphql.MediaUnavailabilityReason`](http://go/sg.thrift/MediaUnavailabilityReason)"
enum ApiMediaUnavailabilityReason @thrift_type(name : "MediaUnavailabilityReason", package : "com.twitter.strato.graphql") {
  CopyrightViolation
  Deleted
  Dmcaed
  Geoblocked
  Reserved4
}

"Generated from type: [`com.twitter.strato.graphql.ApiMomentSportsEventStatus`](http://go/sg.thrift/ApiMomentSportsEventStatus)"
enum ApiMomentSportsEventStatus @thrift_type(name : "ApiMomentSportsEventStatus", package : "com.twitter.strato.graphql") {
  Canceled
  Completed
  Delayed
  Live
  Upcoming
}

"Generated from type: [`com.twitter.strato.graphql.ApiVerifiedType`](http://go/sg.thrift/ApiVerifiedType)"
enum ApiVerifiedType @thrift_type(name : "ApiVerifiedType", package : "com.twitter.strato.graphql") {
  Reserved1
  Reserved2
  Reserved3
  Reserved4
  User
}

"Generated from type: [`com.twitter.strato.graphql.ArticleListSeedType`](http://go/sg.thrift/ArticleListSeedType)"
enum ArticleListSeedTypeInput @thrift_type(name : "ArticleListSeedType", package : "com.twitter.strato.graphql") {
  FollowingList
  FriendsOfFriends
  ListId
}

"Generated from type: [`com.twitter.audience_rewards.common.BenefitFeature`](http://go/sg.thrift/BenefitFeature)"
enum AudienceRewardsBenefitFeature @thrift_type(name : "BenefitFeature", package : "com.twitter.audience_rewards.common") {
  Badge
  DealsDiscounts
  ExclusiveContent
}

"Generated from type: [`com.twitter.audience_rewards.common.BenefitFeature`](http://go/sg.thrift/BenefitFeature)"
enum AudienceRewardsBenefitFeatureInput @thrift_type(name : "BenefitFeature", package : "com.twitter.audience_rewards.common") {
  Badge
  DealsDiscounts
  ExclusiveContent
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AudienceRewardsProductCategory`](http://go/sg.thrift/AudienceRewardsProductCategory)"
enum AudienceRewardsProductCategoryInput @thrift_type(name : "AudienceRewardsProductCategory", package : "com.twitter.audiencerewards.productcatalog") {
  "Deprecated( no products available under this category)"
  Awards @deprecated(reason : "no products available under this category")
  Coins
  Seeds
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AudienceRewardsProductEnvironment`](http://go/sg.thrift/AudienceRewardsProductEnvironment)"
enum AudienceRewardsProductEnvironmentInput @thrift_type(name : "AudienceRewardsProductEnvironment", package : "com.twitter.audiencerewards.productcatalog") {
  "Monetizable products: verify with Live App stores"
  Live
  "Test products: verify with Sandbox App stores"
  Sandbox
  "Test products: skip verification"
  Test
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AudienceRewardsProductPlatform`](http://go/sg.thrift/AudienceRewardsProductPlatform)"
enum AudienceRewardsProductPlatformInput @thrift_type(name : "AudienceRewardsProductPlatform", package : "com.twitter.audiencerewards.productcatalog") {
  AppleAppStore
  GooglePlayStore
  Web
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.AudienceRewardsProductStatus`](http://go/sg.thrift/AudienceRewardsProductStatus)"
enum AudienceRewardsProductStatus @thrift_type(name : "AudienceRewardsProductStatus", package : "com.twitter.audiencerewards.productcatalog") {
  Purchasable
  Unpurchasable
}

"Generated from type: [`com.twitter.audience_rewards.ResponseCode`](http://go/sg.thrift/ResponseCode)"
enum AudienceRewardsResponseCode @thrift_type(name : "ResponseCode", package : "com.twitter.audience_rewards") {
  BadRequest
  Failure
  IdempotencyNoOp
  InsufficientBalance
  NotFound
  Success
  ValidationError
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpaceFilterInput`](http://go/sg.thrift/AudioSpaceFilterInput)"
enum AudioSpaceFilterInput @thrift_type(name : "AudioSpaceFilterInput", package : "com.twitter.periscope.audio_space") {
  All
  LiveAndUpcoming
}

"Generated from type: [`com.twitter.periscope.audio_space.Kind`](http://go/sg.thrift/Kind)"
enum AudioSpaceItemKind @thrift_type(name : "Kind", package : "com.twitter.periscope.audio_space") {
  Audiospace
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharingsFailureReason`](http://go/sg.thrift/AudioSpaceSharingsFailureReason)"
enum AudioSpaceSharingsFailureReason @thrift_type(name : "AudioSpaceSharingsFailureReason", package : "com.twitter.strato.graphql") {
  SpaceEnded
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSoldTicketsFailureReason`](http://go/sg.thrift/AudioSpaceSoldTicketsFailureReason)"
enum AudioSpaceSoldTicketsFailureReason @thrift_type(name : "AudioSpaceSoldTicketsFailureReason", package : "com.twitter.strato.graphql") {
  NotCreator
}

"Generated from type: [`com.twitter.ubs.AudioSpaceTicketPlatform`](http://go/sg.thrift/AudioSpaceTicketPlatform)"
enum AudioSpaceTicketPlatform @thrift_type(name : "AudioSpaceTicketPlatform", package : "com.twitter.ubs") {
  AppStore
  HostGiveaway
  PlayStore
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpacesOmnisearchFilter`](http://go/sg.thrift/AudioSpacesOmnisearchFilter)"
enum AudioSpacesOmnisearchFilterInput @thrift_type(name : "AudioSpacesOmnisearchFilter", package : "com.twitter.periscope.audio_space") {
  All
  Live
  Scheduled
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpacesSearchFilter`](http://go/sg.thrift/AudioSpacesSearchFilter)"
enum AudioSpacesSearchFilter @thrift_type(name : "AudioSpacesSearchFilter", package : "com.twitter.periscope.audio_space") {
  Live
  Top
  Upcoming
}

"Generated from type: [`com.twitter.periscope.audio_space.AudioSpacesSearchFilter`](http://go/sg.thrift/AudioSpacesSearchFilter)"
enum AudioSpacesSearchFilterInput @thrift_type(name : "AudioSpacesSearchFilter", package : "com.twitter.periscope.audio_space") {
  Live
  Top
  Upcoming
}

"""
Indicates whether a Tweet was created using a batch composer, and if so position of a Tweet within the batch. A value of None, indicates that the tweet was not created in a batch. More info: go/batchcompose.

Generated from type: [`com.twitter.tweetypie.graphql.BatchComposeMode`](http://go/sg.thrift/BatchComposeMode)
"""
enum BatchComposeModeInput @thrift_type(name : "BatchComposeMode", package : "com.twitter.tweetypie.graphql") {
  "This is the first Tweet in a batch."
  BatchFirst
  "This is any of the subsequent Tweets in a batch."
  BatchSubsequent
}

"Generated from type: [`com.twitter.ads.entities.db.BidUnit`](http://go/sg.thrift/BidUnit)"
enum BidUnitInput @thrift_type(name : "BidUnit", package : "com.twitter.ads.entities.db") {
  CostPer1kVideoStarts
  CostPerInstall
  CostPerKeyConversion
  CostPerMrcView
  CostPerPurchase
  CostPerQualityView
  CostPerShortFormVideoComplete
  CostPerSiteVisit
  CostPerSocialEngagement
  Cpe
  Cpm
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchBadge`](http://go/sg.thrift/BirdwatchBadge)"
enum BirdwatchBadge @thrift_type(name : "BirdwatchBadge", package : "com.twitter.birdwatch") {
  Top10Author
  Top10Rater
  Top25Author
  Top25Rater
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteAppealStatus`](http://go/sg.thrift/BirdwatchNoteAppealStatus)"
enum BirdwatchNoteAppealStatus @thrift_type(name : "BirdwatchNoteAppealStatus", package : "com.twitter.birdwatch") {
  AppealReceived
  NotAppealed
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteBelievableTag`](http://go/sg.thrift/BirdwatchNoteBelievableTag)"
enum BirdwatchNoteBelievableTag @thrift_type(name : "BirdwatchNoteBelievableTag", package : "com.twitter.birdwatch") {
  BelievableByFew
  BelievableByMany
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteBelievableTag`](http://go/sg.thrift/BirdwatchNoteBelievableTag)"
enum BirdwatchNoteBelievableTagInput @thrift_type(name : "BirdwatchNoteBelievableTag", package : "com.twitter.birdwatch") {
  BelievableByFew
  BelievableByMany
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteClassification`](http://go/sg.thrift/BirdwatchNoteClassification)"
enum BirdwatchNoteClassification @thrift_type(name : "BirdwatchNoteClassification", package : "com.twitter.birdwatch") {
  HarmfullyMisleading
  MisinformedOrPotentiallyMisleading
  NotMisleading
  PotentiallyMisleading
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteClassification`](http://go/sg.thrift/BirdwatchNoteClassification)"
enum BirdwatchNoteClassificationInput @thrift_type(name : "BirdwatchNoteClassification", package : "com.twitter.birdwatch") {
  HarmfullyMisleading
  MisinformedOrPotentiallyMisleading
  NotMisleading
  PotentiallyMisleading
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteEaseOfValidationTag`](http://go/sg.thrift/BirdwatchNoteEaseOfValidationTag)"
enum BirdwatchNoteEaseOfValidationTag @thrift_type(name : "BirdwatchNoteEaseOfValidationTag", package : "com.twitter.birdwatch") {
  Challenging
  Easy
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteEaseOfValidationTag`](http://go/sg.thrift/BirdwatchNoteEaseOfValidationTag)"
enum BirdwatchNoteEaseOfValidationTagInput @thrift_type(name : "BirdwatchNoteEaseOfValidationTag", package : "com.twitter.birdwatch") {
  Challenging
  Easy
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteHarmfulTag`](http://go/sg.thrift/BirdwatchNoteHarmfulTag)"
enum BirdwatchNoteHarmfulTag @thrift_type(name : "BirdwatchNoteHarmfulTag", package : "com.twitter.birdwatch") {
  ConsiderableHarm
  LittleHarm
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteHarmfulTag`](http://go/sg.thrift/BirdwatchNoteHarmfulTag)"
enum BirdwatchNoteHarmfulTagInput @thrift_type(name : "BirdwatchNoteHarmfulTag", package : "com.twitter.birdwatch") {
  ConsiderableHarm
  LittleHarm
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteMisleadingTag`](http://go/sg.thrift/BirdwatchNoteMisleadingTag)"
enum BirdwatchNoteMisleadingTag @thrift_type(name : "BirdwatchNoteMisleadingTag", package : "com.twitter.birdwatch") {
  DisputedClaimAsFact
  FactualError
  ManipulatedMedia
  MisinterpretedSatire
  MissingImportantContext
  Other
  OutdatedInformation
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteMisleadingTag`](http://go/sg.thrift/BirdwatchNoteMisleadingTag)"
enum BirdwatchNoteMisleadingTagInput @thrift_type(name : "BirdwatchNoteMisleadingTag", package : "com.twitter.birdwatch") {
  DisputedClaimAsFact
  FactualError
  ManipulatedMedia
  MisinterpretedSatire
  MissingImportantContext
  Other
  OutdatedInformation
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteNotMisleadingTag`](http://go/sg.thrift/BirdwatchNoteNotMisleadingTag)"
enum BirdwatchNoteNotMisleadingTag @thrift_type(name : "BirdwatchNoteNotMisleadingTag", package : "com.twitter.birdwatch") {
  ClearlySatire
  FactuallyCorrect
  Other
  OutdatedNowButNotWhenWritten
  PersonalOpinion
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteNotMisleadingTag`](http://go/sg.thrift/BirdwatchNoteNotMisleadingTag)"
enum BirdwatchNoteNotMisleadingTagInput @thrift_type(name : "BirdwatchNoteNotMisleadingTag", package : "com.twitter.birdwatch") {
  ClearlySatire
  FactuallyCorrect
  Other
  OutdatedNowButNotWhenWritten
  PersonalOpinion
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteHelpfulTags`](http://go/sg.thrift/BirdwatchNoteHelpfulTags)"
enum BirdwatchNoteRatingHelpfulTags @thrift_type(name : "BirdwatchNoteHelpfulTags", package : "com.twitter.birdwatch") {
  AddressesClaim
  Clear
  Empathetic
  GoodSources
  ImportantContext
  Informative
  Other
  UnbiasedLanguage
  UniqueContext
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteHelpfulTags`](http://go/sg.thrift/BirdwatchNoteHelpfulTags)"
enum BirdwatchNoteRatingHelpfulTagsInput @thrift_type(name : "BirdwatchNoteHelpfulTags", package : "com.twitter.birdwatch") {
  AddressesClaim
  Clear
  Empathetic
  GoodSources
  ImportantContext
  Informative
  Other
  UnbiasedLanguage
  UniqueContext
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteRatingHelpfulnessLevel`](http://go/sg.thrift/BirdwatchNoteRatingHelpfulnessLevel)"
enum BirdwatchNoteRatingHelpfulnessLevel @thrift_type(name : "BirdwatchNoteRatingHelpfulnessLevel", package : "com.twitter.birdwatch") {
  Helpful
  NotHelpful
  SomewhatHelpful
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteRatingHelpfulnessLevel`](http://go/sg.thrift/BirdwatchNoteRatingHelpfulnessLevel)"
enum BirdwatchNoteRatingHelpfulnessLevelInput @thrift_type(name : "BirdwatchNoteRatingHelpfulnessLevel", package : "com.twitter.birdwatch") {
  Helpful
  NotHelpful
  SomewhatHelpful
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteNotHelpfulTags`](http://go/sg.thrift/BirdwatchNoteNotHelpfulTags)"
enum BirdwatchNoteRatingNotHelpfulTags @thrift_type(name : "BirdwatchNoteNotHelpfulTags", package : "com.twitter.birdwatch") {
  Biased
  Incorrect
  IrrelevantSources
  MissingKeyPoints
  NoSources
  NoteNotNeeded
  OffTopic
  OpinionSpeculation
  Other
  Outdated
  Rude
  TwitterViolationAny
  Unclear
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteNotHelpfulTags`](http://go/sg.thrift/BirdwatchNoteNotHelpfulTags)"
enum BirdwatchNoteRatingNotHelpfulTagsInput @thrift_type(name : "BirdwatchNoteNotHelpfulTags", package : "com.twitter.birdwatch") {
  Biased
  Incorrect
  IrrelevantSources
  MissingKeyPoints
  NoSources
  NoteNotNeeded
  OffTopic
  OpinionSpeculation
  Other
  Outdated
  Rude
  TwitterViolationAny
  Unclear
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteRatingOrigin`](http://go/sg.thrift/BirdwatchNoteRatingOrigin)"
enum BirdwatchNoteRatingOriginInput @thrift_type(name : "BirdwatchNoteRatingOrigin", package : "com.twitter.birdwatch") {
  NoteDetailPage
  TimelinePivotInline
  TweetDetailPage
}

"Generated from type: [`com.twitter.birdwatch.BirdwatchNoteRatingStatus`](http://go/sg.thrift/BirdwatchNoteRatingStatus)"
enum BirdwatchNoteRatingStatus @thrift_type(name : "BirdwatchNoteRatingStatus", package : "com.twitter.birdwatch") {
  CurrentlyRatedHelpful
  CurrentlyRatedNotHelpful
  NeedsMoreRatings
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchPivotActionType`](http://go/sg.thrift/BirdwatchPivotActionType)"
enum BirdwatchPivotActionType @thrift_type(name : "BirdwatchPivotActionType", package : "com.twitter.strato.graphql") {
  ExternalUrl
  RatingForm
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchPivotIconType`](http://go/sg.thrift/BirdwatchPivotIconType)"
enum BirdwatchPivotIconType @thrift_type(name : "BirdwatchPivotIconType", package : "com.twitter.strato.graphql") {
  BirdwatchFlagFill
  BirdwatchFlagStroke
  BirdwatchV1Icon
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockFailedReason`](http://go/sg.thrift/BlockFailedReason)"
enum BlockFailedReason @thrift_type(name : "BlockFailedReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  SpammerRejected
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockInvalidRequestReason`](http://go/sg.thrift/BlockInvalidRequestReason)"
enum BlockInvalidRequestReason @thrift_type(name : "BlockInvalidRequestReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  CannotBlockSelf
  UserNotFound
  UserOffboarded
  UserSuspended
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.BlockSuccessReason`](http://go/sg.thrift/BlockSuccessReason)"
enum BlockSuccessReason @thrift_type(name : "BlockSuccessReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  Blocked
}

"Generated from type: [`com.twitter.ubs.BroadcastSource`](http://go/sg.thrift/BroadcastSource)"
enum BroadcastSource @thrift_type(name : "BroadcastSource", package : "com.twitter.ubs") {
  LiveCms
  Producer
  ReplayKit
}

"Generated from type: [`com.twitter.ubs.BroadcastState`](http://go/sg.thrift/BroadcastState)"
enum BroadcastState @thrift_type(name : "BroadcastState", package : "com.twitter.ubs") {
  Canceled
  Ended
  NotStarted
  PrePublished
  Running
  TimedOut
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimesType`](http://go/sg.thrift/BusinessOpenTimesType)"
enum BusinessOpenTimesType @thrift_type(name : "BusinessOpenTimesType", package : "com.twitter.bizprofiles.manhattan") {
  AlwaysOpen
  RegularHours
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimesType`](http://go/sg.thrift/BusinessOpenTimesType)"
enum BusinessOpenTimesTypeInput @thrift_type(name : "BusinessOpenTimesType", package : "com.twitter.bizprofiles.manhattan") {
  AlwaysOpen
  RegularHours
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.AppType`](http://go/sg.thrift/AppType)"
enum CardAppType @thrift_type(name : "AppType", package : "com.twitter.strato.graphql.unified_cards") {
  AndroidApp
  IpadApp
  IphoneApp
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ButtonCtas`](http://go/sg.thrift/ButtonCtas)"
enum CardButtonCta @thrift_type(name : "ButtonCtas", package : "com.twitter.strato.graphql.unified_cards") {
  Book
  Connect
  Install
  Open
  Order
  Play
  PlayDemo
  Shop
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ButtonElementType`](http://go/sg.thrift/ButtonElementType)"
enum CardButtonElementType @thrift_type(name : "ButtonElementType", package : "com.twitter.strato.graphql.unified_cards") {
  Cta
  Custom
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.ButtonStyle`](http://go/sg.thrift/ButtonStyle)"
enum CardButtonStyle @thrift_type(name : "ButtonStyle", package : "com.twitter.strato.graphql.unified_cards") {
  OnMedia
  Primary
  Secondary
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.IconType`](http://go/sg.thrift/IconType)"
enum CardIconType @thrift_type(name : "IconType", package : "com.twitter.strato.graphql.unified_cards") {
  DirectMessage
  Install
  Link
  PlayGame
  TweetComposer
}

"Generated from type: [`com.twitter.strato.graphql.unified_cards.CardType`](http://go/sg.thrift/CardType)"
enum CardType @thrift_type(name : "CardType", package : "com.twitter.strato.graphql.unified_cards") {
  DeveloperCard
  ImageAndUrls
  ImageApp
  ImageCarouselApp
  ImageCarouselWebsite
  ImageMultiDestCarouselApp
  ImageMultiDestCarouselWebsite
  ImageWebsite
  MixedMediaMultiDestCarouselApp
  MixedMediaMultiDestCarouselWebsite
  MixedMediaSingleDestCarouselApp
  MixedMediaSingleDestCarouselWebsite
  ModelExplorerWebsite
  Product
  SummaryLargeImage
  VideoAndUrls
  VideoApp
  VideoCarouselApp
  VideoCarouselWebsite
  VideoMultiDestCarouselApp
  VideoMultiDestCarouselWebsite
  VideoPlayableApp
  VideoWebsite
}

"Generated from type: [`com.twitter.strato.graphql.ClientEducationFlagType`](http://go/sg.thrift/ClientEducationFlagType)"
enum ClientEducationFlagType @thrift_type(name : "ClientEducationFlagType", package : "com.twitter.strato.graphql") {
  AltTextEducation
  ArticleNudge
  BirdwatchRatingFormDataPrivacyNotice
  ChangeConversationControlsEducation
  CommunitiesEducationComposerAudience
  CommunitiesEducationComposerControls
  CommunitiesEducationComposerRules
  CommunitiesEducationRuleManagementInform
  CommunitiesEducationToolsRulesAdvice
  CommunitiesEducationWelcome
  ConversationMutedEducation
  DMC16JPCompliancePrompt
  DownvoteFullscreen
  DownvoteInline
  DownvoteInlinePrivate
  FlexibleParticipationCreate
  FlexibleParticipationReply
  HideReplyAuthorEducation
  LeaveThisConversationInline
  MuteKeywordEducation
  NewsletterCallout
  PersistentConversationControlsEducation
  PinnedConversationsEducation
  SignalsReactionsEducation
  SpacesClippingEducation
  SpacesGeneralEducation
  TrustedFriendsEducationFlag
  TweetdeckEducationDisplaySettings
  TweetdeckEducationTour
  TweetdeckEducationWelcome
  UnmuteKeywordConfirmation
  VerifiedAvatarEducation
}

"Generated from type: [`com.twitter.strato.graphql.ClientEducationFlagType`](http://go/sg.thrift/ClientEducationFlagType)"
enum ClientEducationFlagTypeInput @thrift_type(name : "ClientEducationFlagType", package : "com.twitter.strato.graphql") {
  AltTextEducation
  ArticleNudge
  BirdwatchRatingFormDataPrivacyNotice
  ChangeConversationControlsEducation
  CommunitiesEducationComposerAudience
  CommunitiesEducationComposerControls
  CommunitiesEducationComposerRules
  CommunitiesEducationRuleManagementInform
  CommunitiesEducationToolsRulesAdvice
  CommunitiesEducationWelcome
  ConversationMutedEducation
  DMC16JPCompliancePrompt
  DownvoteFullscreen
  DownvoteInline
  DownvoteInlinePrivate
  FlexibleParticipationCreate
  FlexibleParticipationReply
  HideReplyAuthorEducation
  LeaveThisConversationInline
  MuteKeywordEducation
  NewsletterCallout
  PersistentConversationControlsEducation
  PinnedConversationsEducation
  SignalsReactionsEducation
  SpacesClippingEducation
  SpacesGeneralEducation
  TrustedFriendsEducationFlag
  TweetdeckEducationDisplaySettings
  TweetdeckEducationTour
  TweetdeckEducationWelcome
  UnmuteKeywordConfirmation
  VerifiedAvatarEducation
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsProductCategory`](http://go/sg.thrift/CoinsProductCategory)"
enum CoinsProductCategoryInput @thrift_type(name : "CoinsProductCategory", package : "com.twitter.audiencerewards.productcatalog") {
  Chirps
  SuperLikes
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsProductEnvironment`](http://go/sg.thrift/CoinsProductEnvironment)"
enum CoinsProductEnvironmentInput @thrift_type(name : "CoinsProductEnvironment", package : "com.twitter.audiencerewards.productcatalog") {
  "Live products"
  Live
  "Test products"
  Test
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.CoinsProductStatus`](http://go/sg.thrift/CoinsProductStatus)"
enum CoinsProductStatus @thrift_type(name : "CoinsProductStatus", package : "com.twitter.audiencerewards.productcatalog") {
  Purchasable
  Unpurchasable
}

"Generated from type: [`com.twitter.tweetypie.graphql.CollabControlType`](http://go/sg.thrift/CollabControlType)"
enum CollabControlTypeInput @thrift_type(name : "CollabControlType", package : "com.twitter.tweetypie.graphql") {
  "This represents a CollabInvitation."
  CollabInvitation
  "This represents a published CollabTweet."
  CollabTweet
}

"""
Collaborator invitation status

Generated from type: [`com.twitter.strato.graphql.CollabInvitationStatus`](http://go/sg.thrift/CollabInvitationStatus)
"""
enum CollabInvitationStatus @thrift_type(name : "CollabInvitationStatus", package : "com.twitter.strato.graphql") {
  Accepted
  Pending
  Rejected
}

"Generated from type: [`com.twitter.commerce.catalog.core.CatalogType`](http://go/sg.thrift/CatalogType)"
enum CommerceCatalogType @thrift_type(name : "CatalogType", package : "com.twitter.commerce.catalog.core") {
  Product
}

"Generated from type: [`com.twitter.commerce.catalog.core.CatalogType`](http://go/sg.thrift/CatalogType)"
enum CommerceCatalogTypeInput @thrift_type(name : "CatalogType", package : "com.twitter.commerce.catalog.core") {
  Product
}

"Generated from type: [`com.twitter.commerce.catalog.common.CommerceConfigType`](http://go/sg.thrift/CommerceConfigType)"
enum CommerceConfigTypeInput @thrift_type(name : "CommerceConfigType", package : "com.twitter.commerce.catalog.common") {
  ProductSet
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceProductGroupUnavailableReason`](http://go/sg.thrift/CommerceProductGroupUnavailableReason)"
enum CommerceProductGroupUnavailableReason @thrift_type(name : "CommerceProductGroupUnavailableReason", package : "com.twitter.commerce.catalog.api.graphql") {
  NoReasonAvailable
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CommerceProductUnavailableReason`](http://go/sg.thrift/CommerceProductUnavailableReason)"
enum CommerceProductUnavailableReason @thrift_type(name : "CommerceProductUnavailableReason", package : "com.twitter.commerce.catalog.api.graphql") {
  NoReasonAvailable
}

"Generated from type: [`com.twitter.communities.CommunityAccess`](http://go/sg.thrift/CommunityAccess)"
enum CommunityAccess @thrift_type(name : "CommunityAccess", package : "com.twitter.communities") {
  Closed
  Private
  Public
}

"Generated from type: [`com.twitter.communities.CommunityAccess`](http://go/sg.thrift/CommunityAccess)"
enum CommunityAccessInput @thrift_type(name : "CommunityAccess", package : "com.twitter.communities") {
  Closed
  Private
  Public
}

"Generated from type: [`com.twitter.communities.actions.CommunityCreateActionUnavailableReason`](http://go/sg.thrift/CommunityCreateActionUnavailableReason)"
enum CommunityCreateActionUnavailableReason @thrift_type(name : "CommunityCreateActionUnavailableReason", package : "com.twitter.communities.actions") {
  CountLimitExceeded
  RateLimitExceeded
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityCreateErrorReason`](http://go/sg.thrift/CommunityCreateErrorReason)"
enum CommunityCreateErrorReason @thrift_type(name : "CommunityCreateErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.communities.membership.CommunityInvitesPolicy`](http://go/sg.thrift/CommunityInvitesPolicy)"
enum CommunityInvitesPolicy @thrift_type(name : "CommunityInvitesPolicy", package : "com.twitter.communities.membership") {
  AdminInvitesAllowed
  MemberInvitesAllowed
  ModeratorInvitesAllowed
  "Deprecated( Replaced with AdminInvitesAllowed)"
  NoInvitesAllowed @deprecated(reason : "Replaced with AdminInvitesAllowed")
}

"Generated from type: [`com.twitter.communities.membership.CommunityInvitesPolicy`](http://go/sg.thrift/CommunityInvitesPolicy)"
enum CommunityInvitesPolicyInput @thrift_type(name : "CommunityInvitesPolicy", package : "com.twitter.communities.membership") {
  AdminInvitesAllowed
  MemberInvitesAllowed
  ModeratorInvitesAllowed
  "Deprecated( Replaced with AdminInvitesAllowed)"
  NoInvitesAllowed @deprecated(reason : "Replaced with AdminInvitesAllowed")
}

"Generated from type: [`com.twitter.communities.invites.CommunityInvitesUnavailableReason`](http://go/sg.thrift/CommunityInvitesUnavailableReason)"
enum CommunityInvitesUnavailableReason @thrift_type(name : "CommunityInvitesUnavailableReason", package : "com.twitter.communities.invites") {
  CommunityIsPublic
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinActionUnavailableReason`](http://go/sg.thrift/CommunityJoinActionUnavailableReason)"
enum CommunityJoinActionUnavailableReason @thrift_type(name : "CommunityJoinActionUnavailableReason", package : "com.twitter.communities.actions") {
  Unavailable
  ViewerIsMember
  ViewerIsProtected
  ViewerIsRemoved
  ViewerNotInvited
  ViewerRequestPending
  ViewerRequestRequired
}

"Generated from type: [`com.twitter.communities.membership.CommunityJoinApprovalPolicy`](http://go/sg.thrift/CommunityJoinApprovalPolicy)"
enum CommunityJoinApprovalPolicy @thrift_type(name : "CommunityJoinApprovalPolicy", package : "com.twitter.communities.membership") {
  ModeratorApproval
  NoRequestsAllowed
  "Deprecated( Replaced with NoRequestsAllowed)"
  NoRequiredApproval @deprecated(reason : "Replaced with NoRequestsAllowed")
}

"Generated from type: [`com.twitter.communities.membership.CommunityJoinApprovalPolicy`](http://go/sg.thrift/CommunityJoinApprovalPolicy)"
enum CommunityJoinApprovalPolicyInput @thrift_type(name : "CommunityJoinApprovalPolicy", package : "com.twitter.communities.membership") {
  ModeratorApproval
  NoRequestsAllowed
  "Deprecated( Replaced with NoRequestsAllowed)"
  NoRequiredApproval @deprecated(reason : "Replaced with NoRequestsAllowed")
}

"Generated from type: [`com.twitter.communities.membership.CommunityJoinPolicy`](http://go/sg.thrift/CommunityJoinPolicy)"
enum CommunityJoinPolicy @thrift_type(name : "CommunityJoinPolicy", package : "com.twitter.communities.membership") {
  Open
  RestrictedJoinRequestsDisabled
  RestrictedJoinRequestsRequireAdminApproval
  RestrictedJoinRequestsRequireModeratorApproval
}

"Generated from type: [`com.twitter.communities.membership.CommunityJoinPolicy`](http://go/sg.thrift/CommunityJoinPolicy)"
enum CommunityJoinPolicyInput @thrift_type(name : "CommunityJoinPolicy", package : "com.twitter.communities.membership") {
  Open
  RestrictedJoinRequestsDisabled
  RestrictedJoinRequestsRequireAdminApproval
  RestrictedJoinRequestsRequireModeratorApproval
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveActionUnavailableReason`](http://go/sg.thrift/CommunityJoinRequestApproveActionUnavailableReason)"
enum CommunityJoinRequestApproveActionUnavailableReason @thrift_type(name : "CommunityJoinRequestApproveActionUnavailableReason", package : "com.twitter.communities.actions") {
  CommunityIsOpen
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestApproveErrorReason`](http://go/sg.thrift/CommunityJoinRequestApproveErrorReason)"
enum CommunityJoinRequestApproveErrorReason @thrift_type(name : "CommunityJoinRequestApproveErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestCreateActionUnavailableReason`](http://go/sg.thrift/CommunityJoinRequestCreateActionUnavailableReason)"
enum CommunityJoinRequestCreateActionUnavailableReason @thrift_type(name : "CommunityJoinRequestCreateActionUnavailableReason", package : "com.twitter.communities.actions") {
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestCreateErrorReason`](http://go/sg.thrift/CommunityJoinRequestCreateErrorReason)"
enum CommunityJoinRequestCreateErrorReason @thrift_type(name : "CommunityJoinRequestCreateErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyActionUnavailableReason`](http://go/sg.thrift/CommunityJoinRequestDenyActionUnavailableReason)"
enum CommunityJoinRequestDenyActionUnavailableReason @thrift_type(name : "CommunityJoinRequestDenyActionUnavailableReason", package : "com.twitter.communities.actions") {
  CommunityIsOpen
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityJoinRequestDenyErrorReason`](http://go/sg.thrift/CommunityJoinRequestDenyErrorReason)"
enum CommunityJoinRequestDenyErrorReason @thrift_type(name : "CommunityJoinRequestDenyErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.communities.join_requests.CommunityJoinRequestState`](http://go/sg.thrift/CommunityJoinRequestState)"
enum CommunityJoinRequestState @thrift_type(name : "CommunityJoinRequestState", package : "com.twitter.communities.join_requests") {
  Approved
  Denied
  Invalid
  Pending
}

"Generated from type: [`com.twitter.communities.join_requests.CommunityJoinRequestsUnavailableReason`](http://go/sg.thrift/CommunityJoinRequestsUnavailableReason)"
enum CommunityJoinRequestsUnavailableReason @thrift_type(name : "CommunityJoinRequestsUnavailableReason", package : "com.twitter.communities.join_requests") {
  CommunityIsOpen
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityLeaveActionUnavailableReason`](http://go/sg.thrift/CommunityLeaveActionUnavailableReason)"
enum CommunityLeaveActionUnavailableReason @thrift_type(name : "CommunityLeaveActionUnavailableReason", package : "com.twitter.communities.actions") {
  Unavailable
  ViewerIsSoleAdmin
  ViewerNotMember
}

"Generated from type: [`com.twitter.communities.actions.CommunityMemberRemoveActionUnavailableReason`](http://go/sg.thrift/CommunityMemberRemoveActionUnavailableReason)"
enum CommunityMemberRemoveActionUnavailableReason @thrift_type(name : "CommunityMemberRemoveActionUnavailableReason", package : "com.twitter.communities.actions") {
  MemberIsRemoved
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutActionUnavailableReason`](http://go/sg.thrift/CommunityMembershipSettingsPutActionUnavailableReason)"
enum CommunityMembershipSettingsPutActionUnavailableReason @thrift_type(name : "CommunityMembershipSettingsPutActionUnavailableReason", package : "com.twitter.communities.actions") {
  Unavailable
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsPutErrorReason`](http://go/sg.thrift/CommunityMembershipSettingsPutErrorReason)"
enum CommunityMembershipSettingsPutErrorReason @thrift_type(name : "CommunityMembershipSettingsPutErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateErrorReason`](http://go/sg.thrift/CommunityMembershipSettingsUpdateErrorReason)"
enum CommunityMembershipSettingsUpdateErrorReason @thrift_type(name : "CommunityMembershipSettingsUpdateErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.communities.actions.CommunityMembershipSettingsUpdateUnavailableReason`](http://go/sg.thrift/CommunityMembershipSettingsUpdateUnavailableReason)"
enum CommunityMembershipSettingsUpdateUnavailableReason @thrift_type(name : "CommunityMembershipSettingsUpdateUnavailableReason", package : "com.twitter.communities.actions") {
  Unavailable
}

"Generated from type: [`com.twitter.communities.CommunityRole`](http://go/sg.thrift/CommunityRole)"
enum CommunityRole @thrift_type(name : "CommunityRole", package : "com.twitter.communities") {
  Admin
  Member
  Moderator
  NonMember
}

"Generated from type: [`com.twitter.communities.CommunityRole`](http://go/sg.thrift/CommunityRole)"
enum CommunityRoleInput @thrift_type(name : "CommunityRole", package : "com.twitter.communities") {
  Admin
  Member
  Moderator
  NonMember
}

"Generated from type: [`com.twitter.communities.CommunityTheme`](http://go/sg.thrift/CommunityTheme)"
enum CommunityTheme @thrift_type(name : "CommunityTheme", package : "com.twitter.communities") {
  Blue
  Default
  "Deprecated( Replaced with Plum)"
  Eggplant @deprecated(reason : "Replaced with Plum")
  "Deprecated( No longer supported)"
  Foam @deprecated(reason : "No longer supported")
  "Deprecated( Replaced with Magenta)"
  Fuchsia @deprecated(reason : "Replaced with Magenta")
  Green
  Magenta
  Orange
  Plum
  Purple
  Red
  Teal
  Yellow
}

"Generated from type: [`com.twitter.communities.CommunityTheme`](http://go/sg.thrift/CommunityTheme)"
enum CommunityThemeInput @thrift_type(name : "CommunityTheme", package : "com.twitter.communities") {
  Blue
  Default
  "Deprecated( Replaced with Plum)"
  Eggplant @deprecated(reason : "Replaced with Plum")
  "Deprecated( No longer supported)"
  Foam @deprecated(reason : "No longer supported")
  "Deprecated( Replaced with Magenta)"
  Fuchsia @deprecated(reason : "Replaced with Magenta")
  Green
  Magenta
  Orange
  Plum
  Purple
  Red
  Teal
  Yellow
}

"Generated from type: [`com.twitter.dataproducts.compliance.complianceapi.JobStatus`](http://go/sg.thrift/JobStatus)"
enum ContentComplianceJobStatus @thrift_type(name : "JobStatus", package : "com.twitter.dataproducts.compliance.complianceapi") {
  Complete
  Created
  Expired
  Failed
  FailedToStart
  InProgress
}

"Generated from type: [`com.twitter.dataproducts.compliance.complianceapi.JobStatus`](http://go/sg.thrift/JobStatus)"
enum ContentComplianceJobStatusInput @thrift_type(name : "JobStatus", package : "com.twitter.dataproducts.compliance.complianceapi") {
  Complete
  Created
  Expired
  Failed
  FailedToStart
  InProgress
}

"Generated from type: [`com.twitter.dataproducts.compliance.complianceapi.JobType`](http://go/sg.thrift/JobType)"
enum ContentComplianceJobType @thrift_type(name : "JobType", package : "com.twitter.dataproducts.compliance.complianceapi") {
  Tweet
  User
}

"Generated from type: [`com.twitter.dataproducts.compliance.complianceapi.JobType`](http://go/sg.thrift/JobType)"
enum ContentComplianceJobTypeInput @thrift_type(name : "JobType", package : "com.twitter.dataproducts.compliance.complianceapi") {
  Tweet
  User
}

"Generated from type: [`com.twitter.tweetypie.graphql.ConversationControlMode`](http://go/sg.thrift/ConversationControlMode)"
enum ConversationControlModeInput @thrift_type(name : "ConversationControlMode", package : "com.twitter.tweetypie.graphql") {
  "Users that the conversation owner mentions by @screenname in the tweet text are invited."
  ByInvitation
  "The conversation owner, invited users, and users who the conversation owner follows can reply."
  Community
}

"Generated from type: [`com.twitter.convosvc.strato.ConversationListSortBy`](http://go/sg.thrift/ConversationListSortBy)"
enum ConversationListSortByInput @thrift_type(name : "ConversationListSortBy", package : "com.twitter.convosvc.strato") {
  Recency
}

"Generated from type: [`com.twitter.convosvc.strato.ConversationListType`](http://go/sg.thrift/ConversationListType)"
enum ConversationListTypeInput @thrift_type(name : "ConversationListType", package : "com.twitter.convosvc.strato") {
  LowQuality
  Trusted
  Untrusted
}

"Generated from type: [`com.twitter.convosvc.strato.ConversationType`](http://go/sg.thrift/ConversationType)"
enum ConversationType @thrift_type(name : "ConversationType", package : "com.twitter.convosvc.strato") {
  GroupDm
  OneToOneDm
  Unknown
}

"Generated from type: [`com.twitter.convosvc.strato.ConversationValidationFailureType`](http://go/sg.thrift/ConversationValidationFailureType)"
enum ConversationValidationFailureType @thrift_type(name : "ConversationValidationFailureType", package : "com.twitter.convosvc.strato") {
  BadMedia
  ConversationNameTooLong
  ConversationNotExist
  FlaggedAsSpam
  GenericValidationFailure
  InactiveDevice
  OperationNotPermitted
  SafetyRateLimited
  SpamWait
  TooFewParticipants
  TooManyParticipants
  UserRateLimited
}

"Generated from type: [`com.twitter.ubs.CopyrightViolationType`](http://go/sg.thrift/CopyrightViolationType)"
enum CopyrightViolationType @thrift_type(name : "CopyrightViolationType", package : "com.twitter.ubs") {
  Reserved0
  Reserved1
  Type0
  Type1
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.CountType`](http://go/sg.thrift/CountType)"
enum CountType @thrift_type(name : "CountType", package : "com.twitter.dataproducts.metrics.graphql") {
  Combined
  Organic
  Promoted
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.CountType`](http://go/sg.thrift/CountType)"
enum CountTypeInput @thrift_type(name : "CountType", package : "com.twitter.dataproducts.metrics.graphql") {
  Combined
  Organic
  Promoted
}

"Generated from type: [`com.twitter.convosvc.strato.CreateDMReactionFailureReason`](http://go/sg.thrift/CreateDMReactionFailureReason)"
enum CreateDMReactionFailureReason @thrift_type(name : "CreateDMReactionFailureReason", package : "com.twitter.convosvc.strato") {
  ClientError
  ConversationValidationFailure
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmFailedReason`](http://go/sg.thrift/CreateDmFailedReason)"
enum CreateDmFailedReason @thrift_type(name : "CreateDmFailedReason", package : "com.twitter.dataproducts.devo.dm.graphql") {
  Bounced
  ConversationNotCreated
  DmNotCreated
  RateLimited
  ValidationError
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmInvalidRequestReason`](http://go/sg.thrift/CreateDmInvalidRequestReason)"
enum CreateDmInvalidRequestReason @thrift_type(name : "CreateDmInvalidRequestReason", package : "com.twitter.dataproducts.devo.dm.graphql") {
  InvalidDmMessage
  InvalidDmRequest
  InvalidDmTarget
  RecipientInactive
  RecipientNotFound
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.CreationSource`](http://go/sg.thrift/CreationSource)"
enum CreationSourceInput @thrift_type(name : "CreationSource", package : "com.twitter.bizprofiles.manhattan") {
  Commerce
  EditProfile
  NavDrawer
  Pilot
  ProfileSpotlight
  Qp
  Upsell
}

"Generated from type: [`com.twitter.ceaaccountperspective.CreativeApprovalStatus`](http://go/sg.thrift/CreativeApprovalStatus)"
enum CreativeApprovalStatus @thrift_type(name : "CreativeApprovalStatus", package : "com.twitter.ceaaccountperspective") {
  ApprovedNotFamilySafe
  AutoApproved
  Rejected
  SilentlyRejected
  SilentlyUnderReview
  UnderReview
  Verified
}

"Generated from type: [`com.twitter.bff.CreditCardStatus`](http://go/sg.thrift/CreditCardStatus)"
enum CreditCardStatus @thrift_type(name : "CreditCardStatus", package : "com.twitter.bff") {
  Active
  DeletionError
  DeletionPendng
  Invalid
  New
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CurrencyCode`](http://go/sg.thrift/CurrencyCode)"
enum CurrencyCode @thrift_type(name : "CurrencyCode", package : "com.twitter.commerce.catalog.api.graphql") {
  Aed
  All
  Ars
  Aud
  Bam
  Bgn
  Bhd
  Brl
  Byr
  Cad
  Chf
  Clp
  Cny
  Cop
  Czk
  Dkk
  Dzd
  Egp
  Eur
  Gbp
  Ghs
  Gtq
  Hkd
  Hrk
  Huf
  Idr
  Ils
  Inr
  Iqd
  Jpy
  Kes
  Krw
  Kwd
  Lbp
  Mad
  Mkd
  Mxn
  Myr
  Ngn
  Nok
  Nzd
  Pen
  Php
  Pkr
  Pln
  Qar
  Ron
  Rsd
  Rub
  Sar
  Sek
  Sgd
  Thb
  Tnd
  Try
  Twd
  Tzs
  Uah
  Ugx
  Usd
  Vef
  Vnd
  Zar
  Zmw
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.CurrencyCode`](http://go/sg.thrift/CurrencyCode)"
enum CurrencyCodeInput @thrift_type(name : "CurrencyCode", package : "com.twitter.commerce.catalog.api.graphql") {
  Aed
  All
  Ars
  Aud
  Bam
  Bgn
  Bhd
  Brl
  Byr
  Cad
  Chf
  Clp
  Cny
  Cop
  Czk
  Dkk
  Dzd
  Egp
  Eur
  Gbp
  Ghs
  Gtq
  Hkd
  Hrk
  Huf
  Idr
  Ils
  Inr
  Iqd
  Jpy
  Kes
  Krw
  Kwd
  Lbp
  Mad
  Mkd
  Mxn
  Myr
  Ngn
  Nok
  Nzd
  Pen
  Php
  Pkr
  Pln
  Qar
  Ron
  Rsd
  Rub
  Sar
  Sek
  Sgd
  Thb
  Tnd
  Try
  Twd
  Tzs
  Uah
  Ugx
  Usd
  Vef
  Vnd
  Zar
  Zmw
}

"Generated from type: [`com.twitter.strato.graphql.DMConversationLabel`](http://go/sg.thrift/DMConversationLabel)"
enum DMConversationLabel @thrift_type(name : "DMConversationLabel", package : "com.twitter.strato.graphql") {
  Pinned
  ReplyLater
}

"Generated from type: [`com.twitter.strato.graphql.DMConversationLabelFailureReason`](http://go/sg.thrift/DMConversationLabelFailureReason)"
enum DMConversationLabelFailureReason @thrift_type(name : "DMConversationLabelFailureReason", package : "com.twitter.strato.graphql") {
  ExceededMaxPinnedConversations
}

"Generated from type: [`com.twitter.strato.graphql.DMConversationLabel`](http://go/sg.thrift/DMConversationLabel)"
enum DMConversationLabelInput @thrift_type(name : "DMConversationLabel", package : "com.twitter.strato.graphql") {
  Pinned
  ReplyLater
}

"Generated from type: [`com.twitter.convosvc.strato.DMConversationUnavailableReason`](http://go/sg.thrift/DMConversationUnavailableReason)"
enum DMConversationUnavailableReason @thrift_type(name : "DMConversationUnavailableReason", package : "com.twitter.convosvc.strato") {
  NoReason
}

"Generated from type: [`com.twitter.convosvc.strato.DMEventSliceFailureReason`](http://go/sg.thrift/DMEventSliceFailureReason)"
enum DMEventSliceFailureReason @thrift_type(name : "DMEventSliceFailureReason", package : "com.twitter.convosvc.strato") {
  ClientError
  Unknown
  ValidationError
}

"Generated from type: [`com.twitter.convosvc.strato.EventType`](http://go/sg.thrift/EventType)"
enum DMEventType @thrift_type(name : "EventType", package : "com.twitter.convosvc.strato") {
  ConversationCreate
  ConversationNameUpdate
  JoinConversation
  MessageCreate
  MessageHide
  ParticipantsJoin
  ParticipantsLeave
  Unknown
  WelcomeMessageCreate
}

"Generated from type: [`com.twitter.convosvc.strato.DMEventUnavailableReason`](http://go/sg.thrift/DMEventUnavailableReason)"
enum DMEventUnavailableReason @thrift_type(name : "DMEventUnavailableReason", package : "com.twitter.convosvc.strato") {
  NoReason
}

"Generated from type: [`com.twitter.convosvc.strato.DMReactionSliceFailureReason`](http://go/sg.thrift/DMReactionSliceFailureReason)"
enum DMReactionSliceFailureReason @thrift_type(name : "DMReactionSliceFailureReason", package : "com.twitter.convosvc.strato") {
  ClientError
}

enum DarkRequestDirectiveInput {
  Disabled
  Enabled
}

"Generated from type: [`com.twitter.delegate.InvitationPreferences`](http://go/sg.thrift/InvitationPreferences)"
enum DelegationInvitationPreferences @thrift_type(name : "InvitationPreferences", package : "com.twitter.delegate") {
  Everyone
  Nobody
  OnlyFollowing
}

"Generated from type: [`com.twitter.delegate.InvitationPreferences`](http://go/sg.thrift/InvitationPreferences)"
enum DelegationInvitationPreferencesInput @thrift_type(name : "InvitationPreferences", package : "com.twitter.delegate") {
  Everyone
  Nobody
  OnlyFollowing
}

"Generated from type: [`com.twitter.delegate.InvitationStatus`](http://go/sg.thrift/InvitationStatus)"
enum DelegationInvitationStatus @thrift_type(name : "InvitationStatus", package : "com.twitter.delegate") {
  Accepted
  Pending
  Rejected
}

"Generated from type: [`com.twitter.delegate.InvitationStatus`](http://go/sg.thrift/InvitationStatus)"
enum DelegationInvitationStatusInput @thrift_type(name : "InvitationStatus", package : "com.twitter.delegate") {
  Accepted
  Pending
  Rejected
}

"Generated from type: [`com.twitter.delegate.Role`](http://go/sg.thrift/Role)"
enum DelegationRole @thrift_type(name : "Role", package : "com.twitter.delegate") {
  Admin
  Contributor
  Owner
}

"Generated from type: [`com.twitter.delegate.Role`](http://go/sg.thrift/Role)"
enum DelegationRoleInput @thrift_type(name : "Role", package : "com.twitter.delegate") {
  Admin
  Contributor
  Owner
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DenyFollowRequestInvalidRequestReason`](http://go/sg.thrift/DenyFollowRequestInvalidRequestReason)"
enum DenyFollowRequestInvalidRequestReason @thrift_type(name : "DenyFollowRequestInvalidRequestReason", package : "com.twitter.strato.columns.socialgraph") {
  AccountIsPublic
  NoFollowRequest
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DenyFollowRequestSuccessReason`](http://go/sg.thrift/DenyFollowRequestSuccessReason)"
enum DenyFollowRequestSuccessReason @thrift_type(name : "DenyFollowRequestSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  DeniedFollowRequest
}

"Generated from type: [`com.twitter.developer_built_cards.schema.Axis`](http://go/sg.thrift/Axis)"
enum DevCardAxis @thrift_type(name : "Axis", package : "com.twitter.developer_built_cards.schema") {
  Horizontal
  Vertical
}

"Generated from type: [`com.twitter.developer_built_cards.schema.ButtonStyle`](http://go/sg.thrift/ButtonStyle)"
enum DevCardButtonStyle @thrift_type(name : "ButtonStyle", package : "com.twitter.developer_built_cards.schema") {
  Default
}

"Generated from type: [`com.twitter.developer_built_cards.schema.DevCardColor`](http://go/sg.thrift/DevCardColor)"
enum DevCardColor @thrift_type(name : "DevCardColor", package : "com.twitter.developer_built_cards.schema") {
  Black
  DarkGrey
  Green
  LightGrey
  Magenta
  Purple
  Red
}

"Generated from type: [`com.twitter.developer_built_cards.schema.ContainerAlignment`](http://go/sg.thrift/ContainerAlignment)"
enum DevCardContainerAlignment @thrift_type(name : "ContainerAlignment", package : "com.twitter.developer_built_cards.schema") {
  Between
  Center
  Left
  Right
}

"Generated from type: [`com.twitter.developer_built_cards.schema.FontWeight`](http://go/sg.thrift/FontWeight)"
enum DevCardFontWeight @thrift_type(name : "FontWeight", package : "com.twitter.developer_built_cards.schema") {
  Heavy
  Regular
}

"Generated from type: [`com.twitter.developer_built_cards.schema.HeaderType`](http://go/sg.thrift/HeaderType)"
enum DevCardHeaderType @thrift_type(name : "HeaderType", package : "com.twitter.developer_built_cards.schema") {
  One
  Three
  Two
}

"Generated from type: [`com.twitter.developer_built_cards.schema.ImageFill`](http://go/sg.thrift/ImageFill)"
enum DevCardImageFill @thrift_type(name : "ImageFill", package : "com.twitter.developer_built_cards.schema") {
  Fill
}

"Generated from type: [`com.twitter.developer_built_cards.schema.RadiusSize`](http://go/sg.thrift/RadiusSize)"
enum DevCardRadiusSize @thrift_type(name : "RadiusSize", package : "com.twitter.developer_built_cards.schema") {
  Large
  Medium
  None
  Small
}

"Generated from type: [`com.twitter.developer_built_cards.schema.Spacing`](http://go/sg.thrift/Spacing)"
enum DevCardSpacing @thrift_type(name : "Spacing", package : "com.twitter.developer_built_cards.schema") {
  Large
  Medium
  None
  Small
}

"Generated from type: [`com.twitter.developer_built_cards.schema.TextAlignment`](http://go/sg.thrift/TextAlignment)"
enum DevCardTextAlignment @thrift_type(name : "TextAlignment", package : "com.twitter.developer_built_cards.schema") {
  Center
  Left
  Right
}

"Generated from type: [`com.twitter.developer_built_cards.schema.TextType`](http://go/sg.thrift/TextType)"
enum DevCardTextType @thrift_type(name : "TextType", package : "com.twitter.developer_built_cards.schema") {
  Body
  Caption
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DecisionType`](http://go/sg.thrift/DecisionType)"
enum DeveloperContentFilterDecisionType @thrift_type(name : "DecisionType", package : "com.twitter.strato.columns.content_controls") {
  Spoiler
  Undesired
  Unhealthy
  Unknown
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DecisionType`](http://go/sg.thrift/DecisionType)"
enum DeveloperContentFilterDecisionTypeInput @thrift_type(name : "DecisionType", package : "com.twitter.strato.columns.content_controls") {
  Spoiler
  Undesired
  Unhealthy
  Unknown
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DeveloperContentFilterState`](http://go/sg.thrift/DeveloperContentFilterState)"
enum DeveloperContentFilterState @thrift_type(name : "DeveloperContentFilterState", package : "com.twitter.strato.columns.content_controls") {
  Development
  EarlyAccess
  Production
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DeveloperContentFilterState`](http://go/sg.thrift/DeveloperContentFilterState)"
enum DeveloperContentFilterStateInput @thrift_type(name : "DeveloperContentFilterState", package : "com.twitter.strato.columns.content_controls") {
  Development
  EarlyAccess
  Production
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceFollowInvalidRequestReason`](http://go/sg.thrift/DeviceFollowInvalidRequestReason)"
enum DeviceFollowInvalidRequestReason @thrift_type(name : "DeviceFollowInvalidRequestReason", package : "com.twitter.strato.columns.socialgraph") {
  Blocked
  NotFollowing
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceFollowSuccessReason`](http://go/sg.thrift/DeviceFollowSuccessReason)"
enum DeviceFollowSuccessReason @thrift_type(name : "DeviceFollowSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  DeviceFollowed
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceUnfollowInvalidRequestReason`](http://go/sg.thrift/DeviceUnfollowInvalidRequestReason)"
enum DeviceUnfollowInvalidRequestReason @thrift_type(name : "DeviceUnfollowInvalidRequestReason", package : "com.twitter.strato.columns.socialgraph") {
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.DeviceUnfollowSuccessReason`](http://go/sg.thrift/DeviceUnfollowSuccessReason)"
enum DeviceUnfollowSuccessReason @thrift_type(name : "DeviceUnfollowSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  DeviceUnfollowed
}

"Generated from type: [`com.twitter.gizmoduck.DigestSchedule`](http://go/sg.thrift/DigestSchedule)"
enum DigestSchedule @thrift_type(name : "DigestSchedule", package : "com.twitter.gizmoduck") {
  Daily
  None
  Periodically
  Reserved5
  Reserved6
  TwoDays
  Weekly
}

"Generated from type: [`com.twitter.gizmoduck.DigestSchedule`](http://go/sg.thrift/DigestSchedule)"
enum DigestScheduleInput @thrift_type(name : "DigestSchedule", package : "com.twitter.gizmoduck") {
  Daily
  None
  Periodically
  Reserved5
  Reserved6
  TwoDays
  Weekly
}

"Done indicates that an operation is complete. Incomplete operations are represented by the corresponding errors as usual."
enum DoneStatus {
  Done
}

"Generated from type: [`com.twitter.easypromote.MetricType`](http://go/sg.thrift/MetricType)"
enum EasyPromoteMetricType @thrift_type(name : "MetricType", package : "com.twitter.easypromote") {
  AppInstallAttempts
  AppOpens
  BidSumCount
  BidSumMicros
  DailyBudgetMicros
  DetailExpands
  DialPhone
  Dismissals
  EmailTweet
  EmbeddedMediaClicks
  Engagements
  Favorites
  Follows
  HashtagClicks
  Impressions
  Leads
  MediaEngagements
  MediaViews
  Mentions
  OtherClicks
  PromotionCardResponses
  RemainingDailyBudgetMicros
  Replies
  Retweets
  Spend
  TotalBudgetMicros
  Tweets
  Unfollows
  UrlClicks
  UserProfileClicks
  VideoView
  Votes
}

"Generated from type: [`com.twitter.easypromote.Platform`](http://go/sg.thrift/Platform)"
enum EasypromotePlatformInput @thrift_type(name : "Platform", package : "com.twitter.easypromote") {
  Android
  Ios
  Lite
  MobileWeb
  ReservedPlatform6
  ReservedPlatform7
  Web
}

"Generated from type: [`com.twitter.easypromote.PromotionResponseCode`](http://go/sg.thrift/PromotionResponseCode)"
enum EasypromotePromotionResponseCode @thrift_type(name : "PromotionResponseCode", package : "com.twitter.easypromote") {
  CampaignAlreadyRunning
  PromotionEligible
  PromotionIneligible
  StartedCampaign
}

"Generated from type: [`com.twitter.strato.graphql.ExampleEntityUnavailableReason`](http://go/sg.thrift/ExampleEntityUnavailableReason)"
enum ExampleEntityUnavailableReason @thrift_type(name : "ExampleEntityUnavailableReason", package : "com.twitter.strato.graphql") {
  NoReasonAvailable
}

"Generated from type: [`com.twitter.timelines.graphql.slices.quote_tweets.Exclude`](http://go/sg.thrift/Exclude)"
enum ExcludeInput @thrift_type(name : "Exclude", package : "com.twitter.timelines.graphql.slices.quote_tweets") {
  Replies
  Retweets
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetFollowInvalidReason`](http://go/sg.thrift/ExclusiveTweetFollowInvalidReason)"
enum ExclusiveTweetFollowInvalidReason @thrift_type(name : "ExclusiveTweetFollowInvalidReason", package : "com.twitter.strato.columns.audience_rewards") {
  AlreadyExclusiveTweetFollowing
  CannotExclusiveTweetFollowSelf
  NotSuperFollowing
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetFollowSuccessReason`](http://go/sg.thrift/ExclusiveTweetFollowSuccessReason)"
enum ExclusiveTweetFollowSuccessReason @thrift_type(name : "ExclusiveTweetFollowSuccessReason", package : "com.twitter.strato.columns.audience_rewards") {
  ExclusiveTweetFollowed
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetUnfollowInvalidReason`](http://go/sg.thrift/ExclusiveTweetUnfollowInvalidReason)"
enum ExclusiveTweetUnfollowInvalidReason @thrift_type(name : "ExclusiveTweetUnfollowInvalidReason", package : "com.twitter.strato.columns.audience_rewards") {
  NotExclusiveTweetFollowing
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.ExclusiveTweetUnfollowSuccessReason`](http://go/sg.thrift/ExclusiveTweetUnfollowSuccessReason)"
enum ExclusiveTweetUnfollowSuccessReason @thrift_type(name : "ExclusiveTweetUnfollowSuccessReason", package : "com.twitter.strato.columns.audience_rewards") {
  ExclusiveTweetUnfollowed
}

"Generated from type: [`com.twitter.ceaaccountperspective.Feature`](http://go/sg.thrift/Feature)"
enum Feature @thrift_type(name : "Feature", package : "com.twitter.ceaaccountperspective") {
  AccessToSimpleAds
  AccountHome
  AccountSelector
  AccountSettingsEmailVerification
  AccountUserCanTweet
  AccountVideosDashboard
  AdrolesSellToBillTo
  AdsCampaignPowerTools
  AdsCampaignPowerToolsBeta
  AdsCustomerSatisfactionSurvey
  AdsEditorGoal
  AdsManager
  AdsManagerOrganicExports
  AdvertiserApi
  AgencyLogin
  Allow1pCookie
  Amplify
  AmplifyGlowup2020
  AmplifyGlowupCuratedCategoriesMultiselect
  AmplifyProgramSelectorEnabled
  AnalyticsOnly
  ApiLocationSearch
  ApiPartner
  AppCardDidValue
  AppDownloadCard
  AppInstallsMactInfo
  AppInstallsMmpInfo
  AppInstallsPurchaseOptimization
  AppInstallsSkanInfo
  AppPlayableCard
  AuctionInsights
  AudienceManager
  AudienceSummaryObfuscationEnabled
  AudienceVerification
  AudienceVerificationMrcView
  AutoCreatedConversionEvents
  AutomaticBiddingWithTargetForConversions
  AwarenessReachFrequencyCap
  Beta
  BidOptimizationPreference
  BillingAnalystCreation
  BlacklistTransparencyAccount
  BrandCommentaryAnalytics
  BrandInsights
  BrandTargeting
  BroadMatchKeywordTargeting
  CampaignPlannerUiAccess
  CanCreateNoScreenNameUser
  CanPromoteScheduledTweetsWithObjective
  ChargeForGoodClick
  CityTargeting
  CityTargetingApi
  ClosedLoop
  CombinedTailoredAudience
  CommerceCards
  ContentMarketplaceWhitelistingEnabled
  ContextualTargeting
  ConversationControl
  ConversationalCard
  ConversationalCardGa
  ConversionApi
  ConversionTrackingListCounts
  ConversionTypesParamsV2
  CreativeCompositionComposer
  CreativeCompositionM2LaunchSwitchover
  CreativeEditing
  CreativeName
  CreditCardPayments
  CustomAdspyAccessApple
  CustomAdspyAccessDisney
  CustomAdspyAccessUber
  CustomAudienceTargeting
  DcmClickTracker
  DeprecateMactAssistedConvresion
  DeprecateSuperComposeCardManager
  DeprecatedAccountSettingsV2
  DeprecatedAdGroupsEnabledInAdsEditor
  DeprecatedAdGroupsReportingEnabled
  DeprecatedAdsNotificationEligibility
  DeprecatedAdsUiHoldbackExperiment
  DeprecatedAgeTargeting
  DeprecatedAllRtbCreativeSizesEnabled
  DeprecatedAmRecommendations
  DeprecatedAmplifyHybridPreroll
  DeprecatedAmplifyHybridPromotedOnlyPreroll
  DeprecatedAppCategoryTargeting
  DeprecatedAppCategoryTargetingTpn
  DeprecatedAppEngagementTpn
  DeprecatedAuctionInsightsUi
  DeprecatedAudienceExploration
  DeprecatedAudienceExplorationNext
  DeprecatedAudienceFeaturesRecommendations
  DeprecatedAudienceInsights
  DeprecatedAudienceInsightsBeta
  DeprecatedAudienceManagerV2
  DeprecatedAudienceManagerV2Denylist
  DeprecatedAudienceManagerV2ListUpload
  DeprecatedAutomaticBidding
  DeprecatedAutomaticBiddingWithTarget
  DeprecatedBffPayAmountDuePage
  DeprecatedBootstrap3
  DeprecatedBusinessAuditRecord
  DeprecatedCampaignBulkEdit
  DeprecatedCampaignChatEnable
  DeprecatedCampaignConfigurableLayouts
  DeprecatedCampaignForecasting
  DeprecatedCampaignFormReadAdGroupApi
  DeprecatedCampaignFormReadCampaignApi
  DeprecatedCampaignFormReadInstreamAdGroupApi
  DeprecatedCampaignFormReadInstreamCampaignApi
  DeprecatedCampaignFormReviewPage
  DeprecatedCanChargeByInstall
  DeprecatedCardAspectRatio11
  DeprecatedCardsManager
  DeprecatedCarrierTargeting
  DeprecatedClickToCallCard
  DeprecatedContentMarketplaceBlacklistingEnabled
  DeprecatedContentMarketplaceIabCategoryAndBwlistingEnabled
  DeprecatedConversationTopicTargeting
  DeprecatedConversationalCardAnalytics
  DeprecatedConversationalCardFourOptions
  DeprecatedConversationalCardUnlock
  DeprecatedConversionLiftUi
  DeprecatedCopyInNewForm
  DeprecatedCreateTapPlacements
  DeprecatedCreativeViewerRole
  DeprecatedCreativesVideoUpload
  DeprecatedCreditCardForm
  DeprecatedCrossDeviceConversion
  DeprecatedDefaultBidTypeExperiment
  DeprecatedDefaultBidUnitVideoObjectivesExperiment
  DeprecatedDisplayForecasterDataForUlal
  DeprecatedDrTapCustomCreatives
  DeprecatedDrTapPurePerformance
  DeprecatedDrTapWebExtension
  DeprecatedDynamicAdsRetargeting
  DeprecatedEditsInNewForm
  DeprecatedEnableTpnPlacementMutation
  DeprecatedEngagerRetargeting
  DeprecatedEnhancedTargeting
  DeprecatedEventTargeting
  DeprecatedFlexibleTailoredAudience
  DeprecatedHoldbackSmbFromObjectiveBasedCampaigns
  DeprecatedIncludeAnimatedGifInVideoViewsObjective
  DeprecatedIncludeVineInVideoViewsObjective
  DeprecatedInlineAdgroupEdits
  DeprecatedInlineAdsStatusEdits
  DeprecatedInlineBulkAdgroupEdits
  DeprecatedInlineBulkCampaignEdits
  DeprecatedInlineBulkRunAdgroups
  DeprecatedInlineBulkRunCampaigns
  DeprecatedInlineCampaignEdits
  DeprecatedInlineCreativeEdits
  DeprecatedInlineTargetingEdits
  DeprecatedInlineVideoCreativeStatusEdits
  DeprecatedInstreamCampaignCreator
  DeprecatedKeywordsPac
  DeprecatedLactPilot
  DeprecatedLcsSimplifiedCampaignForm
  DeprecatedLegacyCampaignsDashboard
  DeprecatedLegacyMcAppEngagementsAccess
  DeprecatedLegacyMcAppInstallsAccess
  DeprecatedLegacyMcAwarenessAccess
  DeprecatedLegacyMcFollowersAccess
  DeprecatedLegacyMcPrerollViewsAccess
  DeprecatedLegacyMcTweetEngagementsAccess
  DeprecatedLegacyMcVideoViewsAccess
  DeprecatedLegacyMcWebsiteClicksAccess
  DeprecatedLegacyTweetEngagerTargeting
  DeprecatedLoiSapin
  DeprecatedMacawCampaignForm
  DeprecatedMacawTfbNewCcFormForOnboarding
  DeprecatedMacawTfbSmbNewCreditCardForm
  DeprecatedMacawTfbSmbVatForm
  DeprecatedMactFingerprintTracking
  DeprecatedMactInsights
  DeprecatedMactTransactionValue
  DeprecatedMapDrTapGa
  DeprecatedMapExperimentalBackend
  DeprecatedMapTapCreativeLevelDeepLink
  DeprecatedMapTapExternalExchange
  DeprecatedMapTapNativeEnabled
  DeprecatedMapTpnGif
  DeprecatedMediaUploadComposer
  DeprecatedMultipleLineItems
  DeprecatedNewAccountUserManagementPage
  DeprecatedNewCampaignCreatives
  DeprecatedNewForecasterUi
  DeprecatedNewPtrDashboard
  DeprecatedNewSmbCountries
  DeprecatedNewVideoViewCampaignCreatives
  DeprecatedOabViewThroughConversionModel
  DeprecatedObjectiveBasedCampaigns
  DeprecatedObjectivePickerV2
  DeprecatedObjectivePickerV2All
  DeprecatedObjectivePrerolls
  DeprecatedObjectivePrerollsAllowSkippableVideos
  DeprecatedObjectivePrerollsCallToActionEnabled
  DeprecatedObjectivePrerollsContentMarketplaceEnabled
  DeprecatedObjectiveVideoViewsCallToAction
  DeprecatedOctDynamicPixel
  DeprecatedOnNetworkMobileAppCampaign
  DeprecatedOnNetworkMobileAppCampaignV3WithAppGroups
  DeprecatedOnlineConversionTracking
  DeprecatedOptimizedCostPerAppClick
  DeprecatedPartnerAudienceNegativeTargeting
  DeprecatedPartnerAudienceTargetingDeprecation
  DeprecatedPrerollCreateVastCampaignsUi
  DeprecatedPrimaryMobileConversionType
  DeprecatedPurePerformanceAds
  DeprecatedQualifiedViewsSyndication
  DeprecatedQualityViewBidType
  DeprecatedReachFrequencyAudienceExploration
  DeprecatedReachFrequencyUiBuyAccess
  DeprecatedReachObjective
  DeprecatedRedirectElectioneeringAccountToScf
  DeprecatedRedirectMcAppEngagementsToScf
  DeprecatedRedirectMcAppInstallsToScf
  DeprecatedRedirectMcAwarenessToScf
  DeprecatedRedirectMcFollowersToScf
  DeprecatedRedirectMcPrerollViewsToScf
  DeprecatedRedirectMcTweetEngagementsToScf
  DeprecatedRedirectMcVideoViewsToScf
  DeprecatedRedirectMcWebsiteClicksToScf
  DeprecatedScfAudienceExpansion
  DeprecatedScheduledTweetPreview
  DeprecatedSelectedTweetsPreviewDrawer
  DeprecatedSemanticCoreEntityTargeting
  DeprecatedShareableTailoredAudiences
  DeprecatedShowTpnLandscapePreview
  DeprecatedSimplifiedCampaignForm
  DeprecatedSimplifiedCampaignFormTcs
  DeprecatedSkidLimitExceededCallout
  DeprecatedSponsorshipSelectorV2
  DeprecatedStockPhotos
  DeprecatedSuperCompose
  DeprecatedSuperComposeCramming
  DeprecatedSuperComposeMultiImage
  DeprecatedSuperComposeScheduling
  DeprecatedSwipeableMediaComposer
  DeprecatedSwipeableMediaComposerPreviews
  DeprecatedSyndicatedTweetCustomization
  DeprecatedTailoredAudienceListNegativeTargeting
  DeprecatedTailoredAudienceWebNegativeTargeting
  DeprecatedTargetingPageRedesign
  DeprecatedTopPromotedTweets
  DeprecatedTrendsDashTable
  DeprecatedTrendsEdit
  DeprecatedTrpBuying
  DeprecatedTvTargetingScf
  DeprecatedTweetComposerVideoUpload
  DeprecatedTweetDrafts
  DeprecatedTweetDraftsTcs
  DeprecatedTweetTimelinePreview
  DeprecatedTweetsManager
  DeprecatedTwitterBusiness
  DeprecatedUnifiedCardsImageAppCarouselCreation
  DeprecatedUniversalWebsiteTagEmail
  DeprecatedUniversalWebsiteTagTa
  DeprecatedUseNewAtsEndpoints
  DeprecatedValidatedAgeTargeting
  DeprecatedVenueVisitTargeting
  DeprecatedVideoAppDownloadCard
  DeprecatedVideoCarouselCardCreation
  DeprecatedWebsiteCard21Ratio
  DeprecatedWebsiteCardUrlValidationDisabled
  DeprecatedWebsiteOct
  DeprecatedWriteViaDataservice
  DirectMessageCard
  DisplayAdsLayoutLegalLinksInHeader
  DoNotReachLists
  DoubleclickCampaignManagerV2
  DynamicProductAds
  DynamicProductAdsCampaignCreation
  DynamicSpendCapping
  Electioneering
  EnforceSkidLimit
  EnforceSkidLimitDenylist
  EngagementAudience
  EngagerRetargetingLookalike
  EnhancedMobileTargeting
  EventManagerUiCreateFlowRedesign
  EventManagerUiCreateFlowRedesignDenylist
  ExternalServiceStripeConnect
  EyeglassGatedAdspy
  EyeglassOrAdsglobalGatedAdspy
  FeatherTweetView
  FleetAds
  FractionalBidding
  FullUi
  GenderTargeting
  GifAdsComposer
  GoogleCampaignManagerClickTag
  GuaranteedDelivery
  HasAdvancedMeasurement
  HasAnalytics
  HasVideo
  HelpMenuItemUseSalesforce
  HouseExclusive
  HouseIoInstreamCampaign
  HousingAndUrbanDevelopmentLimitations
  ImageAppDownloadCard
  InCampaignAdCreation
  IncludePeriscopeInVideoViewsObjective
  IncreasedCampaignQuota
  InstreamBundles
  InstreamReachFrequencyCap
  IntegralAdScience
  IssueAds
  JapanOnlyAgeBuckets
  JebbitIntegrationTweetComposer
  KeywordReservation
  LanguageTargeting
  LeadgenCardZipcodeCardLevel
  LeadgenCardZipcodeEnabled
  LegacyIoPublishing
  LegacyVideoUploads
  LifetimeValue
  LimitedAvailabilityCards
  LineItemBudgets
  LineItemFrequencyCap
  LockedOut
  MactBroadConversionDataExclusion
  MactCpiClickOnly
  MactSocialEngagementOptimization
  MactVideoViewAsClick
  MactVideoViewOptimization
  MapBeta
  MapConversionTrackingRebuild
  MapDrTapCustomCreatives
  MapTapCustomCreatives
  MapTpnSyndication
  MapV2Objective
  MediaCreativeRequireDestinationUrl
  MediaPlatformMigration
  MidrollViews
  MixedMediaMultiDestWebsiteCarousel
  MixedMediaSingleDestAppCarousel
  MixedMediaSingleDestWebsiteCarousel
  MoatAnalytics
  MoatDisplay
  MobileAppConversionTracking
  ModelExplorerWebsite
  MultiDestCarouselComposer
  MultiDestinationAppCarousel
  MultiDestinationWebsiteCarousel
  MultiKeywordTrend
  NaiAdsManagerRebuild
  NaiAdsManagerRebuildDenylist
  NaiCampaignFormRebuild
  NaiCampaignFormRebuildRedirect
  NaiCampaignFormRebuildRedirectDenylist
  NativeAdPreviews
  NewBidBudgetFields
  NewCampaignForm
  NewCampaignWrites
  NewTakeoverLineItemObjective
  NewsExemptTransparency
  NoticeOctTermsChange201706
  NoticeScrubbedTcLongTail
  NoticeScrubbedTcTopAffected
  ObjectiveVideoViews
  OctEstimatedConversions
  OffnetworkMobileAppCampaign
  OldCampaignForm
  OneButtonExport
  OptOutOfMapDrTapCampaigns
  OptimizedCostPerWebsiteConversion
  OptimizedMrcVideoView
  OptimizedOfflineSalesImpact
  OptionalDailyBudget
  PacInTimeline
  PacMaxBidWhitelist
  PartnerAudienceTargeting
  PinnedTweets
  PixelAnalyticsDashboard
  PoliticalAds
  PrerollPlacements
  PrerollPromotedVideoQuartileAudioMetrics
  PrerollVideoStartBidding
  PrivacyInsensitive
  ProductCollectionWebsite
  PromotedMediaPolls
  PromotedTrendSpotlightCreation
  PromotedTweetCarousel
  PtwCampaignFormCreativesBeforeTargeting
  PtwOnTwitterPublisherNetwork
  QualifiedViews
  QuickPromoteAudienceEstimate
  QuickPromoteBidding
  QuickPromoteEngagement
  QuickPromoteV2
  ReachFrequencyAnalytics
  ReachFrequencyCap
  ReachFrequencyJp
  ReachFrequencyPrerolls
  ReachFrequencyUiAccess
  ReachFrequencyUk
  ReachFrequencyUs
  ReceiveDmsFromFollowers
  RemoveIpadComposer
  ReportAvailableMetricsApi
  Retargeting
  ScfTargetingSetImport
  ScheduledTweetEditing
  ScheduledTweets
  SelectedTweetsTab
  SelfserveAbTesting
  ShareAudienceOutsideBusiness
  ShortFormVideoCompletion
  ShortFormVideoCompletionPreroll
  ShowGoodLinkClicks
  SimplifiedUi
  SinglePageAdgroupRedesign
  SinglePageAdgroupRedesignDenylist
  SinglePageAdgroupRedesignTcs
  SkanCountCampaignForm
  SkanInfoAdsManager
  SkipCampaignSelectorValidationCheck
  SkipNullcastRetweet
  SkipValidateSameOsTypeDeviceModel
  SkipValidateSameOsTypeOsVersion
  SkipValidateSupportedDcmClickTrackerObjectives
  SmbUi
  StudioAdditionalPermissionSets
  StudioClaims
  StudioLibrary
  StudioLive
  SubjectToGeoWhitelist
  SupportLevel2Jp
  SurveyCard
  SurveysOnTpn
  SyndicationComponent
  TailoredAudienceMobile
  TailoredAudienceWebDirect
  TapAppInclusionsEnabled
  TapOnlyPlacement
  TapRewardedAdsPlacement
  TapVideoWebSiteCards916Enabled
  TargetingSets
  TbsOnboardingEnabled
  TeamHierarchyEnabled
  ThirdPartyConversionTracking
  ThirdPartyMeasurementApi
  TrendWithDescription
  TrendingTopicTargeting
  TvAdAnalytics
  TvAdTargeting
  TvBetaMarkets
  TvChannelTargeting
  TvEngagementAnalytics
  TvGenreTargeting
  TvShowAiringRestricted
  TvShowMovieTargeting
  TvShowTargeting
  TvTurnOffMarketSelector
  TwInsightSurveys
  TweetConversationAds
  TweetConversationCampaignUi
  TweetDraftsOptOut
  TweetNaming
  TweetTextTargeting
  TweetsRequired
  TweetsRequiredDenylist
  UnifiedAdsTab
  UnifiedCards
  UnifiedCardsAppCarouselCreation
  UnifiedCardsCarouselBreakdown
  UnifiedCardsWebsiteCarouselCreation
  UniversalLookalike
  UniversalWebsiteTag
  UniversalWebsiteTagCreateAllowed
  UrlClicks
  UseAdsLayoutService
  UwtImageOnlyPixel
  ValidateSameOsTypeOsVersion
  ValueAddForTap
  VideoCpmBilling
  VideoLeaderboardV2
  VideoSyndication
  VideoViewsBidSuggestionsExperiment
  VideoWebsiteCard
  VidmobIntegrationMediatool
  VidmobIntegrationSuperCompose
  WebConversionTrackingRebuild
  WebDrTpn
  WebsiteAggregateAttributionReporting
  WebsiteAggregateAttributionReportingDenylist
  WebsiteAnalytics
  WebsiteBidOnConversionBillOnCpm
  WebsiteBidOnLowerFunnelConversionBillOnCpm
  WebsiteCard
  WebsiteCardCustomVanityUrl
  WebsiteCardPrefetchAssetsDisabled
  WebsiteCardPrefetchAssetsEnabled
  WebsiteCardPrefetchMarkupDisabled
  WebsiteCardPrefetchMarkupEnabled
  WebsiteClicksCpmBilling
  WebsiteClicksTapOffExperiment
  WebsiteConversions
  WebsiteConversionsCpmBilling
  WebsiteConversionsGeo
  WebsiteConversionsTimezone
  WriteOnlineConversionTrackingPixelsViaDataservice
}

enum FeatureDirectiveInput {
  Include
  Skip
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowFailedReason`](http://go/sg.thrift/FollowFailedReason)"
enum FollowFailedReason @thrift_type(name : "FollowFailedReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  OverFollowLimit
  SafetyRateLimit
  SpammerRejected
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowInvalidRequestReason`](http://go/sg.thrift/FollowInvalidRequestReason)"
enum FollowInvalidRequestReason @thrift_type(name : "FollowInvalidRequestReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  AgeChallengeRequired
  AlreadyPending
  BirthdateRequired
  CannotFollowSelf
  CountryDisallowed
  ReadOnly
  SafetyBounce
  SourceUserBlockingTargetUser
  Unauthorized
  UserBlocked
  UserDeactivated
  UserNotFound
  UserOffboarded
  UserSuspended
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.FollowRetweetsFailureReason`](http://go/sg.thrift/FollowRetweetsFailureReason)"
enum FollowRetweetsFailureReason @thrift_type(name : "FollowRetweetsFailureReason", package : "com.twitter.strato.columns.socialgraph") {
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.FollowRetweetsSuccessReason`](http://go/sg.thrift/FollowRetweetsSuccessReason)"
enum FollowRetweetsSuccessReason @thrift_type(name : "FollowRetweetsSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  RetweetsFollowed
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.FollowSuccessReason`](http://go/sg.thrift/FollowSuccessReason)"
enum FollowSuccessReason @thrift_type(name : "FollowSuccessReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  AlreadyPending
  FollowPending
  Followed
}

"Generated from type: [`com.twitter.hubble.ApprovalStatus`](http://go/sg.thrift/ApprovalStatus)"
enum HubbleApprovalStatus @thrift_type(name : "ApprovalStatus", package : "com.twitter.hubble") {
  ApprovedNotFamilySafe
  AutoApproved
  Rejected
  UnderReview
  Verified
}

"Generated from type: [`com.twitter.hubble.AudienceDimension`](http://go/sg.thrift/AudienceDimension)"
enum HubbleAudienceDimensionInput @thrift_type(name : "AudienceDimension", package : "com.twitter.hubble") {
  Age
  Gender
  Interest
  Language
  Location
  Platform
}

"Generated from type: [`com.twitter.hubble.AudienceSubDimension`](http://go/sg.thrift/AudienceSubDimension)"
enum HubbleAudienceSubDimensionInput @thrift_type(name : "AudienceSubDimension", package : "com.twitter.hubble") {
  "sub-dimension for Platform"
  Device
  "sub-dimension for Location"
  Dma
  "sub-dimension for Platform"
  Os
  "sub-dimension for Location"
  Regions
}

"Generated from type: [`com.twitter.hubble.BidType`](http://go/sg.thrift/BidType)"
enum HubbleBidType @thrift_type(name : "BidType", package : "com.twitter.hubble") {
  AutoBid
  AutoBidWithTarget
  Guaranteed
  MaxBid
  NoBid
}

"Generated from type: [`com.twitter.hubble.BidUnit`](http://go/sg.thrift/BidUnit)"
enum HubbleBidUnit @thrift_type(name : "BidUnit", package : "com.twitter.hubble") {
  CostPer1kVideoStarts
  CostPerInstall
  CostPerKeyConversion
  CostPerMrcView
  CostPerPurchase
  CostPerQualityView
  CostPerShortFormVideoComplete
  CostPerSiteVisit
  CostPerSocialEngagement
  Cpe
  Cpm
}

"Generated from type: [`com.twitter.hubble.CreativeType`](http://go/sg.thrift/CreativeType)"
enum HubbleCreativeType @thrift_type(name : "CreativeType", package : "com.twitter.hubble") {
  Card
  DraftTweet
  RtbMedia
  ScheduledTweet
  SpotlightTweet
  Trend
  Tweet
  User
}

"Generated from type: [`com.twitter.hubble.FundingSourceType`](http://go/sg.thrift/FundingSourceType)"
enum HubbleFundingSourceType @thrift_type(name : "FundingSourceType", package : "com.twitter.hubble") {
  AgencyCreditLine
  CreditCard
  ExclusiveIo
  Free
  HouseExclusive
  LiveTvEventIo
  NonExclusiveIo
  NonExclusiveRevolvingIo
  PartnerManaged
  Subscription
}

"Generated from type: [`com.twitter.hubble.FundingSourceType`](http://go/sg.thrift/FundingSourceType)"
enum HubbleFundingSourceTypeInput @thrift_type(name : "FundingSourceType", package : "com.twitter.hubble") {
  AgencyCreditLine
  CreditCard
  ExclusiveIo
  Free
  HouseExclusive
  LiveTvEventIo
  NonExclusiveIo
  NonExclusiveRevolvingIo
  PartnerManaged
  Subscription
}

"Generated from type: [`com.twitter.hubble.Goal`](http://go/sg.thrift/Goal)"
enum HubbleGoal @thrift_type(name : "Goal", package : "com.twitter.hubble") {
  AppClicks
  AppInstalls
  AppPurchases
  Engagement
  Followers
  LinkClicks
  MaxReach
  Preroll
  PrerollStarts
  ReachWithEngagement
  Unknown
  VideoView
  View15s
  View3s100pct
  View6s
  WebsiteConversions
}

"Generated from type: [`com.twitter.hubble.MetricType`](http://go/sg.thrift/MetricType)"
enum HubbleMetricType @thrift_type(name : "MetricType", package : "com.twitter.hubble") {
  AppClicks
  AppClicksRate
  BilledResults
  BilledResultsRate
  CampaignDailyBudget
  CardButton1Clicks
  CardButton2Clicks
  CardButton3Clicks
  CardButton4Clicks
  CarouselSwipes
  Clicks
  ConversationCardHashtag1
  ConversationCardHashtag2
  ConversationCardHashtag3
  ConversationCardHashtag4
  ConversationEngagements
  ConversationImpressions
  ConversionAchievementsUnlockedAssisted
  ConversionAchievementsUnlockedPostEngagement
  ConversionAchievementsUnlockedPostView
  ConversionAchievementsUnlockedTotal
  ConversionAddPaymentInfoPostView
  ConversionAddPaymentInfoSaleAmount
  ConversionAddPaymentInfoTotal
  ConversionAddToCartAssisted
  ConversionAddToCartPostEngagement
  ConversionAddToCartPostView
  ConversionAddToCartSaleAmount
  ConversionAddToCartTotal
  ConversionAddToWishlistPostEngagement
  ConversionAddToWishlistTotal
  ConversionCheckoutInitiatedAssisted
  ConversionCheckoutInitiatedPostEngagement
  ConversionCheckoutInitiatedPostView
  ConversionCheckoutInitiatedSaleAmount
  ConversionCheckoutInitiatedTotal
  ConversionContentViewsAssisted
  ConversionContentViewsPostEngagement
  ConversionContentViewsPostView
  ConversionContentViewsTotal
  ConversionCostPerAchievementUnlocked
  ConversionCostPerAddPaymentInfo
  ConversionCostPerAddToCart
  ConversionCostPerAddToWishlist
  ConversionCostPerCheckoutInitiated
  ConversionCostPerContentView
  ConversionCostPerCustom
  ConversionCostPerDownload
  ConversionCostPerInstall
  ConversionCostPerInvite
  ConversionCostPerLevelAchieved
  ConversionCostPerLogin
  ConversionCostPerPurchase
  ConversionCostPerRated
  ConversionCostPerReEngage
  ConversionCostPerSearch
  ConversionCostPerSignUp
  ConversionCostPerSiteVisit
  ConversionCostPerSpentCredits
  ConversionCostPerTutorialCompleted
  ConversionCostPerUpdate
  ConversionCustomEngage
  ConversionCustomEstimated
  ConversionCustomSaleAmount
  ConversionCustomTotal
  ConversionCustomView
  ConversionDownloadPostEngagement
  ConversionDownloadPostView
  ConversionDownloadSaleAmount
  ConversionDownloadTotal
  ConversionInstallsAssisted
  ConversionInstallsAssistedMact
  ConversionInstallsAssistedMmp
  ConversionInstallsAssistedSkan
  ConversionInstallsPostEngagement
  ConversionInstallsPostEngagementMact
  ConversionInstallsPostEngagementMmp
  ConversionInstallsPostEngagementSkan
  ConversionInstallsPostView
  ConversionInstallsPostViewMact
  ConversionInstallsPostViewMmp
  ConversionInstallsPostViewSkan
  ConversionInstallsSaleAmount
  ConversionInstallsTotal
  ConversionInstallsTotalMact
  ConversionInstallsTotalSkan
  ConversionInvitesAssisted
  ConversionInvitesPostEngagement
  ConversionInvitesPostView
  ConversionInvitesTotal
  ConversionLevelAchievedAssisted
  ConversionLevelAchievedPostEngagement
  ConversionLevelAchievedPostView
  ConversionLevelAchievedSaleAmount
  ConversionLevelAchievedTotal
  ConversionLoginsAssisted
  ConversionLoginsPostEngagement
  ConversionLoginsPostView
  ConversionLoginsSaleAmount
  ConversionLoginsTotal
  ConversionLtvPurchase
  ConversionLtvPurchaseSaleAmount
  ConversionPurchaseEngageOrderQuantity
  ConversionPurchaseEngageSaleAmount
  ConversionPurchaseOrderQuantity
  ConversionPurchaseSaleAmount
  ConversionPurchasesAssisted
  ConversionPurchasesEstimated
  ConversionPurchasesMactClick
  ConversionPurchasesMactTotal
  ConversionPurchasesMactView
  ConversionPurchasesOctClick
  ConversionPurchasesOctTotal
  ConversionPurchasesOctView
  ConversionPurchasesPostEngagement
  ConversionPurchasesPostView
  ConversionPurchasesTotal
  ConversionRatedAssisted
  ConversionRatedPostEngagement
  ConversionRatedPostView
  ConversionRatedTotal
  ConversionReEngagesAssisted
  ConversionReEngagesPostEngagement
  ConversionReEngagesPostView
  ConversionReEngagesSaleAmount
  ConversionReEngagesTotal
  ConversionReservationsAssisted
  ConversionReservationsPostEngagement
  ConversionReservationsTotal
  ConversionSearchesPostEngagement
  ConversionSearchesPostView
  ConversionSearchesTotal
  ConversionSharesAssisted
  ConversionSharesPostEngagement
  ConversionSharesPostView
  ConversionSharesSaleAmount
  ConversionSharesTotal
  ConversionSignUpsAssisted
  ConversionSignUpsMactTotal
  ConversionSignUpsOctTotal
  ConversionSignUpsPostEngagement
  ConversionSignUpsPostView
  ConversionSignUpsSaleAmount
  ConversionSignUpsTotal
  ConversionSiteVisitEstimated
  ConversionSiteVisitPostEngagement
  ConversionSiteVisitPostView
  ConversionSiteVisitSaleAmount
  ConversionSiteVisitTotal
  ConversionSpentCreditsAssisted
  ConversionSpentCreditsPostEngagement
  ConversionSpentCreditsPostView
  ConversionSpentCreditsTotal
  ConversionTutorialsCompletedPostEngagement
  ConversionTutorialsCompletedPostView
  ConversionTutorialsCompletedSaleAmount
  ConversionTutorialsCompletedTotal
  ConversionUpdatesAssisted
  ConversionUpdatesPostEngagement
  ConversionUpdatesPostView
  ConversionUpdatesTotal
  CostPer1kImpressions
  CostPer1kPrerollVideoStart
  CostPerAppClick
  CostPerEngagement
  CostPerFollower
  CostPerLinkClick
  CostPerPrerollVideo3Sec100PctView
  CostPerPrerollVideoCompletion
  CostPerPrerollVideoQualityView
  CostPerPrerollVideoShortFormComplete
  CostPerPrerollVideoView
  CostPerResult
  CostPerSiteVisit
  CostPerVideo3Sec100PctView
  CostPerVideoCompletion
  CostPerVideoQualityView
  CostPerVideoShortFormComplete
  CostPerVideoView
  DetailExpands
  Engagement
  EngagementRate
  FollowRate
  Follows
  ImpressionFrequency
  Impressions
  KeyConversion
  Likes
  LinkClickRate
  LinkClicks
  MediaEngagements
  MediaViewRate
  MediaViews
  PollCardVotes
  PrerollVideo3Sec100PctViewRate
  PrerollVideo3Sec100PctViews
  PrerollVideoCompletionRate
  PrerollVideoCompletions
  PrerollVideoCtaClicks
  PrerollVideoPlayed25Percent
  PrerollVideoPlayed50Percent
  PrerollVideoPlayed75Percent
  PrerollVideoPlayed75With50pctView
  PrerollVideoQualityViewRate
  PrerollVideoQualityViews
  PrerollVideoShortFormCompleteRate
  PrerollVideoShortFormCompletes
  PrerollVideoStarts
  PrerollVideoViewRate
  PrerollVideoViews
  ProfileVisits
  Replies
  Results
  ResultsRate
  Retweets
  SiteVisitEstimated
  SiteVisitPostEngagement
  SiteVisitPostView
  SiteVisitsRate
  Spend
  TweetsPosted
  Unfollows
  UniqueImpressions
  UniqueVideoViews
  UsdCost
  UsdSpend
  Video3Sec100PctViewRate
  Video3Sec100PctViews
  VideoCompletionRate
  VideoCompletions
  VideoCompletionsWith50pctView
  VideoCompletionsWith50pctViewAndAudio
  VideoCompletionsWithAudio
  VideoCtaClicks
  VideoPlayed25Percent
  VideoPlayed25PercentWith50pctView
  VideoPlayed25PercentWith50pctViewAndAudio
  VideoPlayed25PercentWithAudio
  VideoPlayed50Percent
  VideoPlayed50PercentWith50pctView
  VideoPlayed50PercentWith50pctViewAndAudio
  VideoPlayed50PercentWithAudio
  VideoPlayed75Percent
  VideoPlayed75PercentWith50pctView
  VideoPlayed75PercentWith50pctViewAndAudio
  VideoPlayed75PercentWithAudio
  VideoQualityViewRate
  VideoQualityViews
  VideoShortFormCompleteRate
  VideoShortFormCompletes
  VideoStarts
  VideoStartsWith50pctView
  VideoStartsWith50pctViewAndAudio
  VideoStartsWithAudio
  VideoViewRate
  VideoViews
}

"Generated from type: [`com.twitter.hubble.MetricType`](http://go/sg.thrift/MetricType)"
enum HubbleMetricTypeInput @thrift_type(name : "MetricType", package : "com.twitter.hubble") {
  AppClicks
  AppClicksRate
  BilledResults
  BilledResultsRate
  CampaignDailyBudget
  CardButton1Clicks
  CardButton2Clicks
  CardButton3Clicks
  CardButton4Clicks
  CarouselSwipes
  Clicks
  ConversationCardHashtag1
  ConversationCardHashtag2
  ConversationCardHashtag3
  ConversationCardHashtag4
  ConversationEngagements
  ConversationImpressions
  ConversionAchievementsUnlockedAssisted
  ConversionAchievementsUnlockedPostEngagement
  ConversionAchievementsUnlockedPostView
  ConversionAchievementsUnlockedTotal
  ConversionAddPaymentInfoPostView
  ConversionAddPaymentInfoSaleAmount
  ConversionAddPaymentInfoTotal
  ConversionAddToCartAssisted
  ConversionAddToCartPostEngagement
  ConversionAddToCartPostView
  ConversionAddToCartSaleAmount
  ConversionAddToCartTotal
  ConversionAddToWishlistPostEngagement
  ConversionAddToWishlistTotal
  ConversionCheckoutInitiatedAssisted
  ConversionCheckoutInitiatedPostEngagement
  ConversionCheckoutInitiatedPostView
  ConversionCheckoutInitiatedSaleAmount
  ConversionCheckoutInitiatedTotal
  ConversionContentViewsAssisted
  ConversionContentViewsPostEngagement
  ConversionContentViewsPostView
  ConversionContentViewsTotal
  ConversionCostPerAchievementUnlocked
  ConversionCostPerAddPaymentInfo
  ConversionCostPerAddToCart
  ConversionCostPerAddToWishlist
  ConversionCostPerCheckoutInitiated
  ConversionCostPerContentView
  ConversionCostPerCustom
  ConversionCostPerDownload
  ConversionCostPerInstall
  ConversionCostPerInvite
  ConversionCostPerLevelAchieved
  ConversionCostPerLogin
  ConversionCostPerPurchase
  ConversionCostPerRated
  ConversionCostPerReEngage
  ConversionCostPerSearch
  ConversionCostPerSignUp
  ConversionCostPerSiteVisit
  ConversionCostPerSpentCredits
  ConversionCostPerTutorialCompleted
  ConversionCostPerUpdate
  ConversionCustomEngage
  ConversionCustomEstimated
  ConversionCustomSaleAmount
  ConversionCustomTotal
  ConversionCustomView
  ConversionDownloadPostEngagement
  ConversionDownloadPostView
  ConversionDownloadSaleAmount
  ConversionDownloadTotal
  ConversionInstallsAssisted
  ConversionInstallsAssistedMact
  ConversionInstallsAssistedMmp
  ConversionInstallsAssistedSkan
  ConversionInstallsPostEngagement
  ConversionInstallsPostEngagementMact
  ConversionInstallsPostEngagementMmp
  ConversionInstallsPostEngagementSkan
  ConversionInstallsPostView
  ConversionInstallsPostViewMact
  ConversionInstallsPostViewMmp
  ConversionInstallsPostViewSkan
  ConversionInstallsSaleAmount
  ConversionInstallsTotal
  ConversionInstallsTotalMact
  ConversionInstallsTotalSkan
  ConversionInvitesAssisted
  ConversionInvitesPostEngagement
  ConversionInvitesPostView
  ConversionInvitesTotal
  ConversionLevelAchievedAssisted
  ConversionLevelAchievedPostEngagement
  ConversionLevelAchievedPostView
  ConversionLevelAchievedSaleAmount
  ConversionLevelAchievedTotal
  ConversionLoginsAssisted
  ConversionLoginsPostEngagement
  ConversionLoginsPostView
  ConversionLoginsSaleAmount
  ConversionLoginsTotal
  ConversionLtvPurchase
  ConversionLtvPurchaseSaleAmount
  ConversionPurchaseEngageOrderQuantity
  ConversionPurchaseEngageSaleAmount
  ConversionPurchaseOrderQuantity
  ConversionPurchaseSaleAmount
  ConversionPurchasesAssisted
  ConversionPurchasesEstimated
  ConversionPurchasesMactClick
  ConversionPurchasesMactTotal
  ConversionPurchasesMactView
  ConversionPurchasesOctClick
  ConversionPurchasesOctTotal
  ConversionPurchasesOctView
  ConversionPurchasesPostEngagement
  ConversionPurchasesPostView
  ConversionPurchasesTotal
  ConversionRatedAssisted
  ConversionRatedPostEngagement
  ConversionRatedPostView
  ConversionRatedTotal
  ConversionReEngagesAssisted
  ConversionReEngagesPostEngagement
  ConversionReEngagesPostView
  ConversionReEngagesSaleAmount
  ConversionReEngagesTotal
  ConversionReservationsAssisted
  ConversionReservationsPostEngagement
  ConversionReservationsTotal
  ConversionSearchesPostEngagement
  ConversionSearchesPostView
  ConversionSearchesTotal
  ConversionSharesAssisted
  ConversionSharesPostEngagement
  ConversionSharesPostView
  ConversionSharesSaleAmount
  ConversionSharesTotal
  ConversionSignUpsAssisted
  ConversionSignUpsMactTotal
  ConversionSignUpsOctTotal
  ConversionSignUpsPostEngagement
  ConversionSignUpsPostView
  ConversionSignUpsSaleAmount
  ConversionSignUpsTotal
  ConversionSiteVisitEstimated
  ConversionSiteVisitPostEngagement
  ConversionSiteVisitPostView
  ConversionSiteVisitSaleAmount
  ConversionSiteVisitTotal
  ConversionSpentCreditsAssisted
  ConversionSpentCreditsPostEngagement
  ConversionSpentCreditsPostView
  ConversionSpentCreditsTotal
  ConversionTutorialsCompletedPostEngagement
  ConversionTutorialsCompletedPostView
  ConversionTutorialsCompletedSaleAmount
  ConversionTutorialsCompletedTotal
  ConversionUpdatesAssisted
  ConversionUpdatesPostEngagement
  ConversionUpdatesPostView
  ConversionUpdatesTotal
  CostPer1kImpressions
  CostPer1kPrerollVideoStart
  CostPerAppClick
  CostPerEngagement
  CostPerFollower
  CostPerLinkClick
  CostPerPrerollVideo3Sec100PctView
  CostPerPrerollVideoCompletion
  CostPerPrerollVideoQualityView
  CostPerPrerollVideoShortFormComplete
  CostPerPrerollVideoView
  CostPerResult
  CostPerSiteVisit
  CostPerVideo3Sec100PctView
  CostPerVideoCompletion
  CostPerVideoQualityView
  CostPerVideoShortFormComplete
  CostPerVideoView
  DetailExpands
  Engagement
  EngagementRate
  FollowRate
  Follows
  ImpressionFrequency
  Impressions
  KeyConversion
  Likes
  LinkClickRate
  LinkClicks
  MediaEngagements
  MediaViewRate
  MediaViews
  PollCardVotes
  PrerollVideo3Sec100PctViewRate
  PrerollVideo3Sec100PctViews
  PrerollVideoCompletionRate
  PrerollVideoCompletions
  PrerollVideoCtaClicks
  PrerollVideoPlayed25Percent
  PrerollVideoPlayed50Percent
  PrerollVideoPlayed75Percent
  PrerollVideoPlayed75With50pctView
  PrerollVideoQualityViewRate
  PrerollVideoQualityViews
  PrerollVideoShortFormCompleteRate
  PrerollVideoShortFormCompletes
  PrerollVideoStarts
  PrerollVideoViewRate
  PrerollVideoViews
  ProfileVisits
  Replies
  Results
  ResultsRate
  Retweets
  SiteVisitEstimated
  SiteVisitPostEngagement
  SiteVisitPostView
  SiteVisitsRate
  Spend
  TweetsPosted
  Unfollows
  UniqueImpressions
  UniqueVideoViews
  UsdCost
  UsdSpend
  Video3Sec100PctViewRate
  Video3Sec100PctViews
  VideoCompletionRate
  VideoCompletions
  VideoCompletionsWith50pctView
  VideoCompletionsWith50pctViewAndAudio
  VideoCompletionsWithAudio
  VideoCtaClicks
  VideoPlayed25Percent
  VideoPlayed25PercentWith50pctView
  VideoPlayed25PercentWith50pctViewAndAudio
  VideoPlayed25PercentWithAudio
  VideoPlayed50Percent
  VideoPlayed50PercentWith50pctView
  VideoPlayed50PercentWith50pctViewAndAudio
  VideoPlayed50PercentWithAudio
  VideoPlayed75Percent
  VideoPlayed75PercentWith50pctView
  VideoPlayed75PercentWith50pctViewAndAudio
  VideoPlayed75PercentWithAudio
  VideoQualityViewRate
  VideoQualityViews
  VideoShortFormCompleteRate
  VideoShortFormCompletes
  VideoStarts
  VideoStartsWith50pctView
  VideoStartsWith50pctViewAndAudio
  VideoStartsWithAudio
  VideoViewRate
  VideoViews
}

"Generated from type: [`com.twitter.hubble.Granularity`](http://go/sg.thrift/Granularity)"
enum HubbleMetricsTimeSeriesGranularityInput @thrift_type(name : "Granularity", package : "com.twitter.hubble") {
  Daily
  Hourly
  Weekly
}

"Generated from type: [`com.twitter.hubble.TotalBreakdownCategory`](http://go/sg.thrift/TotalBreakdownCategory)"
enum HubbleMetricsTotalBreakdownCategoryInput @thrift_type(name : "TotalBreakdownCategory", package : "com.twitter.hubble") {
  Carousel
  ConversionPlatform
  Creative
  ImpressionPlatform
  Placement
}

"Generated from type: [`com.twitter.hubble.Objective`](http://go/sg.thrift/Objective)"
enum HubbleObjective @thrift_type(name : "Objective", package : "com.twitter.hubble") {
  AppEngagements
  AppInstalls
  BrandEngagements
  DeprecatedLegacyProduct
  Followers
  LeadGeneration
  MidrollViews
  PrerollViews
  QualifiedViews
  Reach
  Takeover
  VideoViews
  WebsiteClicks
  WebsiteConversions
}

"Generated from type: [`com.twitter.hubble.Objective`](http://go/sg.thrift/Objective)"
enum HubbleObjectiveInput @thrift_type(name : "Objective", package : "com.twitter.hubble") {
  AppEngagements
  AppInstalls
  BrandEngagements
  DeprecatedLegacyProduct
  Followers
  LeadGeneration
  MidrollViews
  PrerollViews
  QualifiedViews
  Reach
  Takeover
  VideoViews
  WebsiteClicks
  WebsiteConversions
}

"Generated from type: [`com.twitter.hubble.Placement`](http://go/sg.thrift/Placement)"
enum HubblePlacement @thrift_type(name : "Placement", package : "com.twitter.hubble") {
  AllOffTwitter
  AllOnTwitter
  Fleets
  Profiles
  SearchResults
  TapBanner
  TapFull
  TapFullLandscape
  TapMrect
  TapNative
  TapRewarded
  TapTabletFull
  TapTabletFullLandscape
  TapTabletLeaderboard
  TapTabletSkyscraper
  Timelines
  TweetConversation
}

"Generated from type: [`com.twitter.hubble.ProductType`](http://go/sg.thrift/ProductType)"
enum HubbleProductType @thrift_type(name : "ProductType", package : "com.twitter.hubble") {
  DailyDeal
  FleetAds
  LiveTvEvent
  PromotedAccount
  PromotedMoment
  PromotedTrend
  PromotedTweets
  RealTimeBidding
}

"Generated from type: [`com.twitter.hubble.ServiceLevel`](http://go/sg.thrift/ServiceLevel)"
enum HubbleServiceLevel @thrift_type(name : "ServiceLevel", package : "com.twitter.hubble") {
  Analytics
  Dso
  MediaStudio
  Mms
  PartnerManaged
  Reseller
  Smb
  Subscription
}

"Generated from type: [`com.twitter.hubble.ServingStatus`](http://go/sg.thrift/ServingStatus)"
enum HubbleServingStatus @thrift_type(name : "ServingStatus", package : "com.twitter.hubble") {
  Active
  Draft
  DraftByTwitter
  Paused
}

"Generated from type: [`com.twitter.hubble.Status`](http://go/sg.thrift/Status)"
enum HubbleStatus @thrift_type(name : "Status", package : "com.twitter.hubble") {
  Active
  Deleted
  Disabled
  Draft
  Exhausted
  Expired
  Halted
  Paused
  Pending
  Recommended
  Running
  Scheduled
  Unknown
  Unsaved
}

"Generated from type: [`com.twitter.affiliates.IconType`](http://go/sg.thrift/IconType)"
enum IconType @thrift_type(name : "IconType", package : "com.twitter.affiliates") {
  InformationIcon
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.PaymentStatus`](http://go/sg.thrift/PaymentStatus)"
enum InAppPurchasePaymentStatus @thrift_type(name : "PaymentStatus", package : "com.twitter.in_app_purchases.graphql") {
  ChargedBack
  Redeemed
  Refunded
  Unverifiable
  Verified
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.PaymentStatus`](http://go/sg.thrift/PaymentStatus)"
enum InAppPurchasePaymentStatusInput @thrift_type(name : "PaymentStatus", package : "com.twitter.in_app_purchases.graphql") {
  ChargedBack
  Redeemed
  Refunded
  Unverifiable
  Verified
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProductCategory`](http://go/sg.thrift/InAppPurchaseProductCategory)"
enum InAppPurchaseProductCategoryInput @thrift_type(name : "InAppPurchaseProductCategory", package : "com.twitter.audiencerewards.productcatalog") {
  Chirps
  Coins
  QuickPromoteBudget
  Seeds
  Spaces
  Subscriptions
  SuperFollows
  SuperLikes
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProductEnvironment`](http://go/sg.thrift/InAppPurchaseProductEnvironment)"
enum InAppPurchaseProductEnvironmentInput @thrift_type(name : "InAppPurchaseProductEnvironment", package : "com.twitter.audiencerewards.productcatalog") {
  "Monetizable products: verify with Live App stores"
  Live
  "Test products: verify with Sandbox App stores"
  Sandbox
  "Test products: skip verification"
  Test
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProductPlatform`](http://go/sg.thrift/InAppPurchaseProductPlatform)"
enum InAppPurchaseProductPlatformInput @thrift_type(name : "InAppPurchaseProductPlatform", package : "com.twitter.audiencerewards.productcatalog") {
  AppleAppStore
  Coin
  GooglePlayStore
  StripeStore
  Web
}

"Generated from type: [`com.twitter.audiencerewards.productcatalog.InAppPurchaseProductStatus`](http://go/sg.thrift/InAppPurchaseProductStatus)"
enum InAppPurchaseProductStatus @thrift_type(name : "InAppPurchaseProductStatus", package : "com.twitter.audiencerewards.productcatalog") {
  Purchasable
  Unpurchasable
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.Source`](http://go/sg.thrift/Source)"
enum InAppPurchaseSource @thrift_type(name : "Source", package : "com.twitter.in_app_purchases.graphql") {
  AppStore
  PlayStore
}

"Generated from type: [`com.twitter.strato.columns.creative_entity_enrichments.Color`](http://go/sg.thrift/Color)"
enum InteractiveTextColor @thrift_type(name : "Color", package : "com.twitter.strato.columns.creative_entity_enrichments") {
  Blue
  Gray
  Green
  Magenta
  Orange
  Plum
  Purple
  Red
  Teal
  Yellow
}

"Generated from type: [`com.twitter.ldc.thrift.PrimitiveType`](http://go/sg.thrift/PrimitiveType)"
enum LDCPrimitiveType @thrift_type(name : "PrimitiveType", package : "com.twitter.ldc.thrift") {
  Boolean
  Bytes
  Float
  Long
  Record
  String
  Timestamp
}

"Generated from type: [`com.twitter.ads.entities.db.LineItemObjective`](http://go/sg.thrift/LineItemObjective)"
enum LineItemObjective @thrift_type(name : "LineItemObjective", package : "com.twitter.ads.entities.db") {
  AppEngagements
  AppInstalls
  BrandEngagements
  DeprecatedLegacyProduct
  Followers
  MidrollViews
  Objective15
  Objective16
  Objective17
  Objective18
  Objective19
  Objective20
  Objective21
  Objective22
  Objective23
  Objective24
  PrerollViews
  Reach
  Takeover
  VideoViews
  WebsiteClicks
  _DeprecatedLeadGeneration
  _DeprecatedQualifiedViews
  _DeprecatedWebsiteConversions
}

"Generated from type: [`com.twitter.ads.entities.db.LineItemObjective`](http://go/sg.thrift/LineItemObjective)"
enum LineItemObjectiveInput @thrift_type(name : "LineItemObjective", package : "com.twitter.ads.entities.db") {
  AppEngagements
  AppInstalls
  BrandEngagements
  DeprecatedLegacyProduct
  Followers
  MidrollViews
  PrerollViews
  Reach
  Takeover
  VideoViews
  WebsiteClicks
  _DeprecatedLeadGeneration
  _DeprecatedQualifiedViews
  _DeprecatedWebsiteConversions
}

"Generated from type: [`com.twitter.socialgraph.ListAccessibility`](http://go/sg.thrift/ListAccessibility)"
enum ListAccessibility @thrift_type(name : "ListAccessibility", package : "com.twitter.socialgraph") {
  Private
  Public
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveFollowInvalidRequestReason`](http://go/sg.thrift/LiveFollowInvalidRequestReason)"
enum LiveFollowInvalidRequestReason @thrift_type(name : "LiveFollowInvalidRequestReason", package : "com.twitter.strato.columns.socialgraph") {
  Blocked
  InvalidUserType
  NotFollowing
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveFollowSuccessReason`](http://go/sg.thrift/LiveFollowSuccessReason)"
enum LiveFollowSuccessReason @thrift_type(name : "LiveFollowSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  LiveFollowed
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveUnfollowInvalidRequestReason`](http://go/sg.thrift/LiveUnfollowInvalidRequestReason)"
enum LiveUnfollowInvalidRequestReason @thrift_type(name : "LiveUnfollowInvalidRequestReason", package : "com.twitter.strato.columns.socialgraph") {
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.LiveUnfollowSuccessReason`](http://go/sg.thrift/LiveUnfollowSuccessReason)"
enum LiveUnfollowSuccessReason @thrift_type(name : "LiveUnfollowSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  LiveUnfollowed
}

"Generated from type: [`com.twitter.targetingcatalog.LocationType`](http://go/sg.thrift/LocationType)"
enum LocationType @thrift_type(name : "LocationType", package : "com.twitter.targetingcatalog") {
  Cities
  Countries
  Metros
  Postals
  Regions
}

"Generated from type: [`com.twitter.ads.entities.db.LocationType`](http://go/sg.thrift/LocationType)"
enum LocationTypeInput @thrift_type(name : "LocationType", package : "com.twitter.ads.entities.db") {
  Cities
  Countries
  Metros
  Postals
  Regions
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.MediaAvailabilityStatus`](http://go/sg.thrift/MediaAvailabilityStatus)"
enum MediaAvailabilityStatus @thrift_type(name : "MediaAvailabilityStatus", package : "com.twitter.mediaservices.commons.mediainformation") {
  Available
  Reserved3
  Reserved4
  Reserved5
  Unavailable
  Unknown
}

"Generated from type: [`com.twitter.mediaservices.commons.mediainformation.MediaUnavailabilityReason`](http://go/sg.thrift/MediaUnavailabilityReason)"
enum MediaAvailabilityStatusReason @thrift_type(name : "MediaUnavailabilityReason", package : "com.twitter.mediaservices.commons.mediainformation") {
  CopyrightViolation
  Deleted
  Dmcaed
  Geoblocked
  Reserved4
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.ModuleType`](http://go/sg.thrift/ModuleType)"
enum ModuleType @thrift_type(name : "ModuleType", package : "com.twitter.bizprofiles.manhattan") {
  About
  Newsletter
  Shop
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteFailedReason`](http://go/sg.thrift/MuteFailedReason)"
enum MuteFailedReason @thrift_type(name : "MuteFailedReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  OverLimit
  SpammerRejected
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteInvalidRequestReason`](http://go/sg.thrift/MuteInvalidRequestReason)"
enum MuteInvalidRequestReason @thrift_type(name : "MuteInvalidRequestReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  CannotMuteSelf
  UserNotFound
  UserOffboarded
  UserSuspended
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.MuteSuccessReason`](http://go/sg.thrift/MuteSuccessReason)"
enum MuteSuccessReason @thrift_type(name : "MuteSuccessReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  Muted
}

"Generated from type: [`com.twitter.tweb3.graphql.model.Network`](http://go/sg.thrift/Network)"
enum Network @thrift_type(name : "Network", package : "com.twitter.tweb3.graphql.model") {
  Ethereum
}

"Generated from type: [`com.twitter.tweb3.graphql.model.Network`](http://go/sg.thrift/Network)"
enum NetworkInput @thrift_type(name : "Network", package : "com.twitter.tweb3.graphql.model") {
  Ethereum
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.ObfuscatedIdType`](http://go/sg.thrift/ObfuscatedIdType)"
enum ObfuscatedIdTypeInput @thrift_type(name : "ObfuscatedIdType", package : "com.twitter.in_app_purchases.graphql") {
  Permanent
  Temporary
}

"Generated from type: [`com.twitter.adstweetservice.LineItemObjective`](http://go/sg.thrift/LineItemObjective)"
enum ObjectiveInput @thrift_type(name : "LineItemObjective", package : "com.twitter.adstweetservice") {
  AppEngagements
  AppInstalls
  BrandEngagements
  Followers
  LeadGeneration
  PrerollViews
  QualifiedViews
  Reach
  VideoViews
  WebsiteClicks
  WebsiteConversions
}

"Generated from type: [`com.twitter.ads.entities.db.OptimizationPreference`](http://go/sg.thrift/OptimizationPreference)"
enum OptimizationPreferenceInput @thrift_type(name : "OptimizationPreference", package : "com.twitter.ads.entities.db") {
  AppClick
  Conversions
  Engagement
  FixedRate
  InDemoMrcView
  Install
  LeadGeneration
  "Campaigns optimizing for website lower funnel conversion e.g. purchase"
  LowerFunnelConversion
  MrcView
  None
  OfflineSalesImpact
  SocialEngagement
  SocialEngagementControl
  VideoView
  WebsiteClick
}

"Generated from type: [`com.twitter.steam.service.teams.Feature`](http://go/sg.thrift/Feature)"
enum OrganizationFeature @thrift_type(name : "Feature", package : "com.twitter.steam.service.teams") {
  AdsAccountCreation
  Placeholder3
  Placeholder4
  Placeholder5
  Placeholder6
  SelfServeIo
}

"Generated from type: [`com.twitter.bff.PaymentCurrencyCode`](http://go/sg.thrift/PaymentCurrencyCode)"
enum PaymentCurrencyCode @thrift_type(name : "PaymentCurrencyCode", package : "com.twitter.bff") {
  Aed
  All
  Ars
  Aud
  Bam
  Bgn
  Bhd
  Brl
  Byr
  Cad
  Chf
  Clp
  Cny
  Cop
  Czk
  Dkk
  Dzd
  Egp
  Eur
  Gbp
  Ghs
  Gtq
  Hkd
  Hrk
  Huf
  Idr
  Ils
  Inr
  Iqd
  Jpy
  Kes
  Krw
  Kwd
  Lbp
  Mad
  Mkd
  Mxn
  Myr
  Ngn
  Nok
  Nzd
  Pen
  Php
  Pkr
  Pln
  Qar
  Ron
  Rsd
  Rub
  Sar
  Sek
  Sgd
  Thb
  Tnd
  Try
  Twd
  Tzs
  Uah
  Ugx
  Usd
  Vef
  Vnd
  Zar
  Zmw
}

"""
The various payment method types currently supported.

Generated from type: [`com.twitter.bff.BFFPaymentMethodType`](http://go/sg.thrift/BFFPaymentMethodType)
"""
enum PaymentMethodType @thrift_type(name : "BFFPaymentMethodType", package : "com.twitter.bff") {
  Coupon
  CreditCard
  Paypal
}

"Generated from type: [`com.twitter.channels.management.pin_list.v3.PinListInvalidRequestReason`](http://go/sg.thrift/PinListInvalidRequestReason)"
enum PinListInvalidRequestReason @thrift_type(name : "PinListInvalidRequestReason", package : "com.twitter.channels.management.pin_list.v3") {
  ListNotFound
  NotFollowing
  TooManyPinned
}

"Generated from type: [`com.twitter.dataproducts.search.counthunter.Granularity`](http://go/sg.thrift/Granularity)"
enum PowerTrackTweetCountGranularityInput @thrift_type(name : "Granularity", package : "com.twitter.dataproducts.search.counthunter") {
  Day
  Hour
  Minute
}

"Generated from type: [`com.twitter.incentives.jiminy.PreemptiveNudgeType`](http://go/sg.thrift/PreemptiveNudgeType)"
enum PreemptiveNudgeType @thrift_type(name : "PreemptiveNudgeType", package : "com.twitter.incentives.jiminy") {
  Hide
  Mute
}

"Generated from type: [`com.twitter.payments.web.PriceType`](http://go/sg.thrift/PriceType)"
enum PriceType @thrift_type(name : "PriceType", package : "com.twitter.payments.web") {
  OneTime
  Recurring
}

"Generated from type: [`com.twitter.subsverify.PrincipalKind`](http://go/sg.thrift/PrincipalKind)"
enum PrincipalKind @thrift_type(name : "PrincipalKind", package : "com.twitter.subsverify") {
  User
}

"Generated from type: [`com.twitter.commerce.catalog.core.AgeGroup`](http://go/sg.thrift/AgeGroup)"
enum ProductAgeGroup @thrift_type(name : "AgeGroup", package : "com.twitter.commerce.catalog.core") {
  Adult
  AllAges
  Infant
  Kids
  Newborn
  Teen
  Toddler
}

"Generated from type: [`com.twitter.commerce.catalog.core.AgeGroup`](http://go/sg.thrift/AgeGroup)"
enum ProductAgeGroupInput @thrift_type(name : "AgeGroup", package : "com.twitter.commerce.catalog.core") {
  Adult
  AllAges
  Infant
  Kids
  Newborn
  Teen
  Toddler
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductAvailability`](http://go/sg.thrift/ProductAvailability)"
enum ProductAvailability @thrift_type(name : "ProductAvailability", package : "com.twitter.commerce.catalog.core") {
  AvailableForOrder
  Discontinued
  InStock
  OutOfStock
  Preorder
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductAvailability`](http://go/sg.thrift/ProductAvailability)"
enum ProductAvailabilityInput @thrift_type(name : "ProductAvailability", package : "com.twitter.commerce.catalog.core") {
  AvailableForOrder
  Discontinued
  InStock
  OutOfStock
  Preorder
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductCondition`](http://go/sg.thrift/ProductCondition)"
enum ProductCondition @thrift_type(name : "ProductCondition", package : "com.twitter.commerce.catalog.core") {
  New
  Refurbished
  Used
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductCondition`](http://go/sg.thrift/ProductCondition)"
enum ProductConditionInput @thrift_type(name : "ProductCondition", package : "com.twitter.commerce.catalog.core") {
  New
  Refurbished
  Used
}

"Generated from type: [`com.twitter.commerce.catalog.core.DataSource`](http://go/sg.thrift/DataSource)"
enum ProductDataSource @thrift_type(name : "DataSource", package : "com.twitter.commerce.catalog.core") {
  FileUpload
  ScheduledFeed
  Shopify
  ShoppingManager
}

"Generated from type: [`com.twitter.commerce.catalog.core.DataSource`](http://go/sg.thrift/DataSource)"
enum ProductDataSourceInput @thrift_type(name : "DataSource", package : "com.twitter.commerce.catalog.core") {
  FileUpload
  ScheduledFeed
  Shopify
  ShoppingManager
}

"Generated from type: [`com.twitter.commerce.catalog.core.Gender`](http://go/sg.thrift/Gender)"
enum ProductGender @thrift_type(name : "Gender", package : "com.twitter.commerce.catalog.core") {
  Female
  Male
  Unisex
}

"Generated from type: [`com.twitter.commerce.catalog.core.Gender`](http://go/sg.thrift/Gender)"
enum ProductGenderInput @thrift_type(name : "Gender", package : "com.twitter.commerce.catalog.core") {
  Female
  Male
  Unisex
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductSetItemType`](http://go/sg.thrift/ProductSetItemType)"
enum ProductSetItemTypeInput @thrift_type(name : "ProductSetItemType", package : "com.twitter.commerce.catalog.core") {
  Product
  ProductGroup
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductSetType`](http://go/sg.thrift/ProductSetType)"
enum ProductSetType @thrift_type(name : "ProductSetType", package : "com.twitter.commerce.catalog.core") {
  Full
  ManuallySelected
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductUpsertErrorType`](http://go/sg.thrift/ProductUpsertErrorType)"
enum ProductUpsertErrorType @thrift_type(name : "ProductUpsertErrorType", package : "com.twitter.commerce.catalog.api.graphql") {
  AvailabilityInvalid
  AvailabilityMissing
  BrandOrGtinOrMpnRequired
  ConditionInvalid
  ConditionMissing
  DescriptionTooLong
  DescriptionTooShort
  ImageInputMalformed
  ImageUrlInvalid
  ImageUrlTooShort
  InStockInventoryRequired
  InStockInventoryTooLow
  LinkInvalid
  LinkTooShort
  OutOfStockInventoryTooHigh
  PriceCurrencyCodeInvalid
  PriceInvalid
  PriceMissing
  ProductIdTooLong
  ProductIdTooShort
  TitleTooLong
  TitleTooShort
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductUpsertWarningType`](http://go/sg.thrift/ProductUpsertWarningType)"
enum ProductUpsertWarningType @thrift_type(name : "ProductUpsertWarningType", package : "com.twitter.commerce.catalog.api.graphql") {
  AdditionalImagesInvalid
  AgeGroupInvalid
  BrandTooLong
  BrandTooShort
  ColorTooLong
  ColorTooShort
  GenderInvalid
  GoogleProductCategoryInvalid
  GtinTooLong
  GtinTooShort
  InventoryInvalid
  ItemGroupIdTooLong
  ItemGroupIdTooShort
  MaterialTooLong
  MaterialTooShort
  MobileLinkInvalid
  MpnTooLong
  MpnTooShort
  PopularityRankInvalid
  ProductTypeInvalid
  SaleDatesInvalid
  SalePriceCurrencyCodeInvalid
  SalePriceInvalid
  SalePriceTooHigh
  SizeTooLong
  SizeTooShort
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.ProductValidityStatus`](http://go/sg.thrift/ProductValidityStatus)"
enum ProductValidityStatus @thrift_type(name : "ProductValidityStatus", package : "com.twitter.commerce.catalog.api.graphql") {
  Invalid
  Processing
  Valid
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.ProfessionalType`](http://go/sg.thrift/ProfessionalType)"
enum ProfessionalType @thrift_type(name : "ProfessionalType", package : "com.twitter.bizprofiles.manhattan") {
  Business
  Creator
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.ProfessionalType`](http://go/sg.thrift/ProfessionalType)"
enum ProfessionalTypeInput @thrift_type(name : "ProfessionalType", package : "com.twitter.bizprofiles.manhattan") {
  Business
  Creator
}

"Generated from type: [`com.twitter.bizprofiles.graphql.ProfessionalUnavailableReason`](http://go/sg.thrift/ProfessionalUnavailableReason)"
enum ProfessionalUnavailableReason @thrift_type(name : "ProfessionalUnavailableReason", package : "com.twitter.bizprofiles.graphql") {
  UserNotProfessional
}

"Generated from type: [`com.twitter.gizmoduck.ProfileVisibility`](http://go/sg.thrift/ProfileVisibility)"
enum ProfileVisibility @thrift_type(name : "ProfileVisibility", package : "com.twitter.gizmoduck") {
  Followers
  Following
  MutualFollow
  Public
  Self
}

"Generated from type: [`com.twitter.ads.entities.db.PromotedProductType`](http://go/sg.thrift/PromotedProductType)"
enum PromotedProductTypeInput @thrift_type(name : "PromotedProductType", package : "com.twitter.ads.entities.db") {
  DailyDeal
  FleetAds
  LiveTvEvent
  PromotedAccount
  PromotedMoment
  PromotedTrend
  PromotedTweets
  RealTimeBidding
}

"Generated from type: [`com.twitter.timelines.render.PromptIconPointer`](http://go/sg.thrift/PromptIconPointer)"
enum PromptIconPointer @thrift_type(name : "PromptIconPointer", package : "com.twitter.timelines.render") {
  Like
  Reply
  Retweet
  Share
}

"Generated from type: [`com.twitter.easypromote.CouponEnrollmentErrorCode`](http://go/sg.thrift/CouponEnrollmentErrorCode)"
enum QuickPromoteCouponEnrollmentErrorCode @thrift_type(name : "CouponEnrollmentErrorCode", package : "com.twitter.easypromote") {
  AccountIneligible
  MissingAdsAccount
}

"Generated from type: [`com.twitter.quick_promote.PromoteErrorCode`](http://go/sg.thrift/PromoteErrorCode)"
enum QuickPromoteErrorCode @thrift_type(name : "PromoteErrorCode", package : "com.twitter.quick_promote") {
  AccountIneligible
  AccountReviewFailure
  AccountReviewHold
  BadRequest
  CampaignCreationFailed
  InvalidBase36AdAccountId
  InvalidPaymentMethod
  MissingFundingInstrument
  MissingPromotionType
  ProtectedTweet
  TweetIneligible
  TweetReviewFailure
  Unauthorized
}

"Generated from type: [`com.twitter.quick_promote.QuickPromoteObjective`](http://go/sg.thrift/QuickPromoteObjective)"
enum QuickPromoteObjectiveInput @thrift_type(name : "QuickPromoteObjective", package : "com.twitter.quick_promote") {
  Engagements
  Followers
  WebsiteClicks
}

"Generated from type: [`com.twitter.quick_promote.ValidationErrorReason`](http://go/sg.thrift/ValidationErrorReason)"
enum QuickPromoteValidationErrorReason @thrift_type(name : "ValidationErrorReason", package : "com.twitter.quick_promote") {
  CampaignTotalActiveCountLimitExceeded
  GenericValidationError
  PromotedTweetRepliesNotAllowedPacLineItem
  PromotedTweetsInvalidCard2ForObjective
  PromotedTweetsInvalidCardTypeForObjective
  PromotedTweetsMalformedUnifiedCard
  TargetingCriterionHudAgeLimitations
  TargetingCriterionHudGenderLimitations
  TargetingCriterionHudLocationLimitations
}

"Generated from type: [`com.twitter.convosvc.strato.ReactionType`](http://go/sg.thrift/ReactionType)"
enum ReactionType @thrift_type(name : "ReactionType", package : "com.twitter.convosvc.strato") {
  Agree
  Disagree
  Excited
  Funny
  Like
  Sad
  Surprised
}

"Generated from type: [`com.twitter.convosvc.strato.ReactionType`](http://go/sg.thrift/ReactionType)"
enum ReactionTypeInput @thrift_type(name : "ReactionType", package : "com.twitter.convosvc.strato") {
  Agree
  Disagree
  Excited
  Funny
  Like
  Sad
  Surprised
}

"Generated from type: [`com.twitter.timelineservice.ReactivePromptDisplayLocation`](http://go/sg.thrift/ReactivePromptDisplayLocation)"
enum ReactivePromptDisplayLocationInput @thrift_type(name : "ReactivePromptDisplayLocation", package : "com.twitter.timelineservice") {
  Connect
  Conversations
  Explore
  Followers
  Following
  Home
  Notifications
  Nux
  Other
  Profile
  ProfileWithReplies
  Search
}

"Generated from type: [`com.twitter.timelines.render.RelevancePromptDisplayType`](http://go/sg.thrift/RelevancePromptDisplayType)"
enum RelevancePromptDisplayType @thrift_type(name : "RelevancePromptDisplayType", package : "com.twitter.timelines.render") {
  "Normal font. Small buttons on the right."
  Compact
  "Large bold font. Large buttons."
  Large
  "Bold font. Large buttons."
  Normal
  "Thumbs up and down. Padded background."
  ThumbsUpAndDown
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.RemoveListMemberFailureReason`](http://go/sg.thrift/RemoveListMemberFailureReason)"
enum RemoveListMemberFailureReason @thrift_type(name : "RemoveListMemberFailureReason", package : "com.twitter.dataproducts.devo.lists.graphql") {
  ListNotFound
  NotAllowed
  UserNotFound
}

"Generated from type: [`com.twitter.dataproducts.devo.lists.graphql.RemoveListMemberSuccessReason`](http://go/sg.thrift/RemoveListMemberSuccessReason)"
enum RemoveListMemberSuccessReason @thrift_type(name : "RemoveListMemberSuccessReason", package : "com.twitter.dataproducts.devo.lists.graphql") {
  Removed
}

"Generated from type: [`com.twitter.strato.columns.audience_rewards.RemoveSuperFollowerPrivacyResultCode`](http://go/sg.thrift/RemoveSuperFollowerPrivacyResultCode)"
enum RemoveSuperFollowerPrivacyResultCode @thrift_type(name : "RemoveSuperFollowerPrivacyResultCode", package : "com.twitter.strato.columns.audience_rewards") {
  NotPrivate
  Success
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.RequestValidationError`](http://go/sg.thrift/RequestValidationError)"
enum RequestValidationError @thrift_type(name : "RequestValidationError", package : "com.twitter.dataproducts.aaa.graphql") {
  CannotFilterBookmarksResponse
  CannotFilterMentionsResponse
  DateTimeMustBeInCorrectFormat
  DeprecatedParametersError
  EndTimeMustBeInCorrectFormat
  EndTimeMustBeInValidBounds
  InvalidPaginationTokenError
  OnlyOneOfNextOrPreviousTokenAllowed
  SinceIdMustBeLessThanUntilId
  StartTimeMustBeInCorrectFormat
  StartTimeMustBeInValidBounds
  StartTimeMustBeLessThanEndTime
}

"Generated from type: [`com.twitter.scheduleanddraftapi.ResponseStatus`](http://go/sg.thrift/ResponseStatus)"
enum ResponseStatus @thrift_type(name : "ResponseStatus", package : "com.twitter.scheduleanddraftapi") {
  Notmodified
  Reserved1
  Reserved2
  Reserved3
  Success
}

"Generated from type: [`com.twitter.longform.api.ClientAttribution`](http://go/sg.thrift/ClientAttribution)"
enum RevueSubscriptionClientAttributionInput @thrift_type(name : "ClientAttribution", package : "com.twitter.longform.api") {
  Android
  DesktopMobile
  DesktopWeb
  Ios
  MobileWeb
}

"Generated from type: [`com.twitter.longform.api.SubscriptionStatus`](http://go/sg.thrift/SubscriptionStatus)"
enum RevueSubscriptionStatus @thrift_type(name : "SubscriptionStatus", package : "com.twitter.longform.api") {
  Subscribed
  Unconfirmed
  Unsubscribed
}

"Generated from type: [`com.twitter.spam.rtf.SafetyLevel`](http://go/sg.thrift/SafetyLevel)"
enum SafetyLevelInput @thrift_type(name : "SafetyLevel", package : "com.twitter.spam.rtf") {
  "Used by the Advertiser Experience team for Twitter Business Setting app"
  AdsBusinessSettings
  "Used for displaying users in Ads Campaign Form"
  AdsCampaign
  "Used by Ads Team for new ads manager dashboard"
  AdsReportingDashboard
  "Used to show a timeline of blocked or muted users. Note that this allows access to users that are protected or block the current viewer."
  BlockMuteUsersTimeline
  "Used for community timelines"
  Communities
  "Used for the focal tweet in a conversation timeline"
  ConversationFocalTweet
  "Used for reply and parent tweets in a conversation timeline"
  ConversationReply
  "Used for Tweets shown to provide context for a Trend in the Explore page"
  CuratedTrendsRepresentativeTweet
  "Used by the following and followers DES endpoints"
  DesFollowingAndFollowersUserList
  "Used for quote tweet lookup for DES"
  DesQuoteTweetTimeline
  "Used to serve the DES endpoint for top retweeters for a tweet"
  DesRetweetingUsers
  "Duplicate TweetDetailPolicy for Des"
  DesTweetDetail
  "Used by users liking tweet DES endpoint"
  DesTweetLikingUsers
  "Used by tweets liked by user DES endpoint"
  DesUserLikedTweets
  "Used by the user mentions DES endpoints"
  DesUserMentions
  "Used by the user tweets DES endpoint"
  DesUserTweets
  "Used for a list of DM conversations (e.g. loading the DM inbox)"
  DirectMessagesConversationList
  "Used for DM muted users timeline"
  DirectMessagesMutedUsers
  "Used for pinned conversation in DMs"
  DirectMessagesPinned
  "Used for search in DMs"
  DirectMessagesSearch
  "Used to hydrate tweets as part of creating a tweet embed on Twitter Publish (or the API equivalent)"
  EmbedTweetMarkup
  "Used to hydrate tweets as part of supporting Dead Embeds"
  EmbeddedTweet
  "Used for relaunch explore."
  ExploreRecommendations
  "Drops all Tweets and Users. Useful for usage in GraphQl queries that does not reference them"
  FilterAll
  "Drops all Tweets and Users. Can be used as a temporary SafetyLevel choice in GraphQl queries that does not reference any entities but plans to do so in the future."
  FilterAllPlaceholder
  "Customers who are writing new GraphQl queries can use this SafetyLevel to unblock prototyping. Consult #visibility-filtering team (slack) with your use case to receive a more appropriate one for your use case before productionizing your query."
  ForDevelopmentOnly
  "Used for fetching users for Humanization Nudge"
  HumanizationNudge
  "Provides a comprehensive set of visible treatments on Tweets such as tombstones, interstitials, etc. Customers who are writing new GraphQl queries can use this SafetyLevel to evaluate various treatment representations. Consult #visibility-filtering team (slack) with your use case to receive a more appropriate one for your use case before productionizing your query."
  KitchenSinkDevelopment
  "Used to display lists a user is subscribed to"
  ListSubscriptions
  "for Author Moderated Replies / Hide Replies feature"
  ModeratedTweetsTimeline
  "Used for nearby timeline"
  NearbyTimeline
  "Used by quick promote for tweets eligible for ads"
  QuickPromoteTweetEligibility
  "Used in Report Center to view past reports and report outcome"
  ReportCenter
  "RITO actioned tweet timeline"
  RitoActionedTweetTimeline
  "Used for User Typeahead results in Global Search"
  SearchPeopleTypeahead
  "Used for signals reactions"
  SignalsReactions
  "Used for signals reacting users"
  SignalsTweetReactingUsers
  "Used for social proof endpoint"
  SocialProof
  Spaces
  "Used for spaces seller applications"
  SpacesSellerApplicationStatus
  "Used for shared contents in Spaces"
  SpacesSharing
  "Used by the super followers tab on the user profile"
  SuperFollowerConnections
  "Used for topical content on Home timelines."
  TimelineHomeTopicFollowRecommendations
  "The timeline seen in the Profile page Tweets & Replies tab."
  TimelineProfileAll
  "Used by the superfollows tab on the user profile timeline"
  TimelineProfileSuperFollows
  "Used for topical content on the Topic Landing page."
  TopicsLandingPageTopicRecommendations
  "Used in Trusted Friends List to block users"
  TrustedFriendsUserList
  "Used to filter the focal tweet in the TweetDetail page"
  TweetDetail
  "Used for timelines scoped under the Tweet space"
  TweetScopedTimeline
  "Commonly used for GraphQL mutations that modify tweets, like tweet creation, retweeting, or similar."
  TweetWritesApi
  "Used to render the user header information (name, avatar, banner etc) in the profile page."
  UserProfileHeader
  "Used for timelines scoped under the User space"
  UserScopedTimeline
  "Used in queries for a top-level viewer for the current authenticated user"
  UserSelfViewOnly
  "Used to retrieve settings for a user"
  UserSettings
}

"Generated from type: [`com.twitter.interventions.safetymode.SafetyModeDuration`](http://go/sg.thrift/SafetyModeDuration)"
enum SafetyModeDuration @thrift_type(name : "SafetyModeDuration", package : "com.twitter.interventions.safetymode") {
  OneDay
  SevenDays
  ThreeDays
}

"Generated from type: [`com.twitter.interventions.safetymode.SafetyModeDuration`](http://go/sg.thrift/SafetyModeDuration)"
enum SafetyModeDurationInput @thrift_type(name : "SafetyModeDuration", package : "com.twitter.interventions.safetymode") {
  OneDay
  SevenDays
  ThreeDays
}

"Generated from type: [`com.twitter.tweetscheduler.ScheduledTweetState`](http://go/sg.thrift/ScheduledTweetState)"
enum ScheduledTweetState @thrift_type(name : "ScheduledTweetState", package : "com.twitter.tweetscheduler") {
  Canceled
  Completed
  Dismissed
  Draft
  Failed
  Pending
  Reserved1
  Reserved2
  Reserved3
  Scheduled
}

"Generated from type: [`com.twitter.tweetscheduler.ScheduledTweetState`](http://go/sg.thrift/ScheduledTweetState)"
enum ScheduledTweetStateInput @thrift_type(name : "ScheduledTweetState", package : "com.twitter.tweetscheduler") {
  Canceled
  Completed
  Dismissed
  Draft
  Failed
  Pending
  Reserved1
  Reserved2
  Reserved3
  Scheduled
}

"Generated from type: [`com.twitter.incentives.jiminy.ScribeNudgeActionType`](http://go/sg.thrift/ScribeNudgeActionType)"
enum ScribeNudgeActionTypeInput @thrift_type(name : "ScribeNudgeActionType", package : "com.twitter.incentives.jiminy") {
  BackButtonPressed
  BlockUser
  CancelOnBlockUserPrompt
  CancelTweet
  CloseApp
  DismissNudge
  HideReply
  MuteUser
  NudgeNotShown
  ReviseTweet
  SendTweet
}

"Generated from type: [`com.twitter.incentives.jiminy.ScribeNudgeResultType`](http://go/sg.thrift/ScribeNudgeResultType)"
enum ScribeNudgeResultTypeInput @thrift_type(name : "ScribeNudgeResultType", package : "com.twitter.incentives.jiminy") {
  BlockUser
  CancelComposer
  CloseApp
  HideReply
  MuteUser
  SaveTweetToDrafts
  SentTweet
  TweetSentWithoutShowingNudge
}

"Generated from type: [`com.twitter.incentives.jiminy.ScribeNudgeType`](http://go/sg.thrift/ScribeNudgeType)"
enum ScribeNudgeTypeInput @thrift_type(name : "ScribeNudgeType", package : "com.twitter.incentives.jiminy") {
  Humanization
  PotentiallyToxicTweet
  PreemptiveHide
  PreemptiveMute
  ReviseOrBlock
  ReviseOrHideThenBlock
  ReviseOrMute
}

"Generated from type: [`com.twitter.adsmanager.SearchFilter`](http://go/sg.thrift/SearchFilter)"
enum SearchFilterInput @thrift_type(name : "SearchFilter", package : "com.twitter.adsmanager") {
  Nullcasted
  Organic
  Scheduled
}

"Generated from type: [`com.twitter.convosvc.search.SearchType`](http://go/sg.thrift/SearchType)"
enum SearchTypeInput @thrift_type(name : "SearchType", package : "com.twitter.convosvc.search") {
  All
  Conversations
  "Deprecated( deprecate group convo search in dmSearchComposite)"
  Groups @deprecated(reason : "deprecate group convo search in dmSearchComposite")
  "Deprecated( deprecate messages search in dmSearchComposite)"
  Messages @deprecated(reason : "deprecate messages search in dmSearchComposite")
  "Deprecated( deprecate people convo search in dmSearchComposite)"
  People @deprecated(reason : "deprecate people convo search in dmSearchComposite")
}

"Generated from type: [`com.twitter.ubs.SellerApplicationState`](http://go/sg.thrift/SellerApplicationState)"
enum SellerApplicationState @thrift_type(name : "SellerApplicationState", package : "com.twitter.ubs") {
  Approved
  NotStarted
  Rejected
  Submitted
  Waitlisted
}

"Generated from type: [`com.twitter.ubs.SellerEligibilityViolations`](http://go/sg.thrift/SellerEligibilityViolations)"
enum SellerEligibilityViolations @thrift_type(name : "SellerEligibilityViolations", package : "com.twitter.ubs") {
  AccountAge
  FollowersCount
  TweetsCount
  UserAge
}

"Generated from type: [`com.twitter.ubs.SellerTrack`](http://go/sg.thrift/SellerTrack)"
enum SellerTrackInput @thrift_type(name : "SellerTrack", package : "com.twitter.ubs") {
  AdRevenueSharing
  AudioSpaceTickets
  Awards
  SuperFollows
  TipJar
}

"Generated from type: [`com.twitter.ceaaccountperspective.ServiceLevel`](http://go/sg.thrift/ServiceLevel)"
enum ServiceLevel @thrift_type(name : "ServiceLevel", package : "com.twitter.ceaaccountperspective") {
  Analytics
  Dso
  MediaStudio
  Mms
  PartnerManaged
  Reseller
  Smb
  Subscription
}

"Generated from type: [`com.twitter.sessions.IconType`](http://go/sg.thrift/IconType)"
enum SessionIconType @thrift_type(name : "IconType", package : "com.twitter.sessions") {
  Laptop
  Mobile
  Tablet
}

"Generated from type: [`com.twitter.payments.web.SessionStatus`](http://go/sg.thrift/SessionStatus)"
enum SessionStatus @thrift_type(name : "SessionStatus", package : "com.twitter.payments.web") {
  NoPaymentRequired
  Paid
  Unknown
  Unpaid
}

"Generated from type: [`com.twitter.commerce.shopmodule.ShopModuleDisplayType`](http://go/sg.thrift/ShopModuleDisplayType)"
enum ShopModuleDisplayType @thrift_type(name : "ShopModuleDisplayType", package : "com.twitter.commerce.shopmodule") {
  Button
  Carousel
}

"Generated from type: [`com.twitter.commerce.shopmodule.ShopModuleDisplayType`](http://go/sg.thrift/ShopModuleDisplayType)"
enum ShopModuleDisplayTypeInput @thrift_type(name : "ShopModuleDisplayType", package : "com.twitter.commerce.shopmodule") {
  Button
  Carousel
}

"Generated from type: [`com.twitter.signals.reactions.ReactionType`](http://go/sg.thrift/ReactionType)"
enum SignalsReactionType @thrift_type(name : "ReactionType", package : "com.twitter.signals.reactions") {
  Cheer
  Haha
  Hmm
  Like
  Placeholder10
  Placeholder11
  Placeholder12
  Placeholder13
  Placeholder14
  Placeholder15
  Placeholder16
  Placeholder17
  Placeholder18
  Placeholder19
  Placeholder20
  Placeholder6
  Placeholder7
  Placeholder8
  Placeholder9
  Sad
}

"Generated from type: [`com.twitter.signals.reactions.ReactionType`](http://go/sg.thrift/ReactionType)"
enum SignalsReactionTypeInput @thrift_type(name : "ReactionType", package : "com.twitter.signals.reactions") {
  Cheer
  Haha
  Hmm
  Like
  Placeholder10
  Placeholder11
  Placeholder12
  Placeholder13
  Placeholder14
  Placeholder15
  Placeholder16
  Placeholder17
  Placeholder18
  Placeholder19
  Placeholder20
  Placeholder6
  Placeholder7
  Placeholder8
  Placeholder9
  Sad
}

"Generated from type: [`com.twitter.strato.graphql.SoftInterventionDisplayType`](http://go/sg.thrift/SoftInterventionDisplayType)"
enum SoftInterventionDisplayType @thrift_type(name : "SoftInterventionDisplayType", package : "com.twitter.strato.graphql") {
  GetTheLatest
  GovernmentRequested
  Misleading
  StayInformed
}

"Generated from type: [`com.twitter.dataproducts.search.idhunter.SortOrderType`](http://go/sg.thrift/SortOrderType)"
enum SortOrderTypeInput @thrift_type(name : "SortOrderType", package : "com.twitter.dataproducts.search.idhunter") {
  Recency
  Relevancy
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceFollowInvalidReason`](http://go/sg.thrift/SpaceDeviceFollowInvalidReason)"
enum SpaceDeviceFollowInvalidReason @thrift_type(name : "SpaceDeviceFollowInvalidReason", package : "com.twitter.strato.columns.notifications") {
  AlreadySpaceDeviceFollowing
  CannotSpaceDeviceFollowSelf
  NotFollowing
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceFollowSuccessReason`](http://go/sg.thrift/SpaceDeviceFollowSuccessReason)"
enum SpaceDeviceFollowSuccessReason @thrift_type(name : "SpaceDeviceFollowSuccessReason", package : "com.twitter.strato.columns.notifications") {
  SpaceDeviceFollowed
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceUnfollowInvalidReason`](http://go/sg.thrift/SpaceDeviceUnfollowInvalidReason)"
enum SpaceDeviceUnfollowInvalidReason @thrift_type(name : "SpaceDeviceUnfollowInvalidReason", package : "com.twitter.strato.columns.notifications") {
  NotSpaceDeviceFollowing
}

"Generated from type: [`com.twitter.strato.columns.notifications.SpaceDeviceUnfollowSuccessReason`](http://go/sg.thrift/SpaceDeviceUnfollowSuccessReason)"
enum SpaceDeviceUnfollowSuccessReason @thrift_type(name : "SpaceDeviceUnfollowSuccessReason", package : "com.twitter.strato.columns.notifications") {
  SpaceDeviceUnfollowed
}

enum StratoOp {
  Archive
  Delete
  DeleteUnder
  Execute
  Fetch
  Insert
  Invalidate
  Paginate
  Put
  Scan
  Unarchive
}

"Generated from type: [`com.twitter.strato.columns.tipjar.StrikeQuickReplyEmote`](http://go/sg.thrift/StrikeQuickReplyEmote)"
enum StrikeQuickReplyEmoteInput @thrift_type(name : "StrikeQuickReplyEmote", package : "com.twitter.strato.columns.tipjar") {
  ClappingHands
  FoldedHands
  GrinningFace
  HundredPoints
  RaisingHands
}

"Generated from type: [`com.twitter.strato.columns.tipjar.StrikeTransferStatus`](http://go/sg.thrift/StrikeTransferStatus)"
enum StrikeTransferStatus @thrift_type(name : "StrikeTransferStatus", package : "com.twitter.strato.columns.tipjar") {
  Expired
  Initiated
  Paid
}

"Generated from type: [`com.twitter.periscope.api.StripeIntegrationStatus`](http://go/sg.thrift/StripeIntegrationStatus)"
enum StripeIntegrationStatus @thrift_type(name : "StripeIntegrationStatus", package : "com.twitter.periscope.api") {
  Completed
  Incomplete
  NotStarted
  Pending
}

"Generated from type: [`com.twitter.creator_dashboard.PaymentPlatform`](http://go/sg.thrift/PaymentPlatform)"
enum SuperfollowsPaymentPlatform @thrift_type(name : "PaymentPlatform", package : "com.twitter.creator_dashboard") {
  AppStore
  PlayStore
}

"Generated from type: [`com.twitter.targetingcatalog.TargetingCriterionProperty`](http://go/sg.thrift/TargetingCriterionProperty)"
enum TargetingCriterionProperty @thrift_type(name : "TargetingCriterionProperty", package : "com.twitter.targetingcatalog") {
  Category
  Lookalike
  Searchable
  Targetable
}

"Generated from type: [`com.twitter.ads.entities.db.TargetingType`](http://go/sg.thrift/TargetingType)"
enum TargetingType @thrift_type(name : "TargetingType", package : "com.twitter.ads.entities.db") {
  AgeBucket
  AppStoreCategory
  AppStoreCategoryLookalike
  Brand
  BrandSurvey
  BroadMatchKeyword
  CampaignEngagerRetargeting
  CampaignEngagerRetargetingLookalike
  ContentPublisher
  Contextual
  ConversationTopic
  CustomAppList
  CustomAudience
  DeviceModel
  EngagementAudience
  Event
  ExactKeyword
  FollowersOf
  Gender
  Geo
  Heist
  IabCategory
  InterestCategory
  Language
  LiveTvEvent
  LoginStatus
  NetworkActivationDurationInSec
  NetworkOperator
  OsVersion
  Ostype
  PartnerAudience
  PartnerAudienceLookalike
  PhraseKeyword
  ProfileVisitors
  RetargetingCustomAudience
  RetargetingCustomAudienceLookalike
  RetargetingEngagementType
  RetargetingWeb
  RtbAppCategory
  SemanticCoreEntity
  SimilarToFollowersOf
  TailoredAudienceCrmLookalike
  TailoredAudienceFlexible
  TailoredAudienceFlexibleLookalike
  TailoredAudienceMobile
  TailoredAudienceMobileLookalike
  TargetingType60
  TargetingType61
  TargetingType62
  TargetingType63
  TargetingType64
  TargetingType65
  TargetingType66
  TargetingType67
  TargetingType68
  TargetingType69
  TargetingType70
  TargetingType71
  TargetingType72
  TrendingTopic
  TvBrand
  TvChannel
  TvGenre
  TvMarket
  TvShow
  TvShowAiringRestricted
  UniversalLookalike
  UnorderedKeyword
  UserEngagerRetargeting
  UserEngagerRetargetingLookalike
  UserInterest
  WifiOnly
}

"Generated from type: [`com.twitter.ads.entities.db.TargetingType`](http://go/sg.thrift/TargetingType)"
enum TargetingTypeInput @thrift_type(name : "TargetingType", package : "com.twitter.ads.entities.db") {
  AgeBucket
  AppStoreCategory
  AppStoreCategoryLookalike
  Brand
  BrandSurvey
  BroadMatchKeyword
  CampaignEngagerRetargeting
  CampaignEngagerRetargetingLookalike
  ContentPublisher
  Contextual
  ConversationTopic
  CustomAppList
  CustomAudience
  DeviceModel
  EngagementAudience
  Event
  ExactKeyword
  FollowersOf
  Gender
  Geo
  Heist
  IabCategory
  InterestCategory
  Language
  LiveTvEvent
  LoginStatus
  NetworkActivationDurationInSec
  NetworkOperator
  OsVersion
  Ostype
  PartnerAudience
  PartnerAudienceLookalike
  PhraseKeyword
  ProfileVisitors
  RetargetingCustomAudience
  RetargetingCustomAudienceLookalike
  RetargetingEngagementType
  RetargetingWeb
  RtbAppCategory
  SemanticCoreEntity
  SimilarToFollowersOf
  TailoredAudienceCrmLookalike
  TailoredAudienceFlexible
  TailoredAudienceFlexibleLookalike
  TailoredAudienceMobile
  TailoredAudienceMobileLookalike
  TargetingType60
  TargetingType61
  TargetingType62
  TargetingType63
  TargetingType64
  TargetingType65
  TargetingType66
  TargetingType67
  TargetingType68
  TargetingType69
  TargetingType70
  TargetingType71
  TargetingType72
  TrendingTopic
  TvBrand
  TvChannel
  TvGenre
  TvMarket
  TvShow
  TvShowAiringRestricted
  UniversalLookalike
  UnorderedKeyword
  UserEngagerRetargeting
  UserEngagerRetargetingLookalike
  UserInterest
  WifiOnly
}

"Generated from type: [`com.twitter.strato.graphql.TeamsAccessLevel`](http://go/sg.thrift/TeamsAccessLevel)"
enum TeamsAccessLevel @thrift_type(name : "TeamsAccessLevel", package : "com.twitter.strato.graphql") {
  Admin
  Contributor
}

"Generated from type: [`com.twitter.timelines.render.AlertType`](http://go/sg.thrift/AlertType)"
enum TimelineAlertType @thrift_type(name : "AlertType", package : "com.twitter.timelines.render") {
  Navigate
  NewTweets
}

"Generated from type: [`com.twitter.timelines.render.ArticleDisplayType`](http://go/sg.thrift/ArticleDisplayType)"
enum TimelineArticleDisplayType @thrift_type(name : "ArticleDisplayType", package : "com.twitter.timelines.render") {
  Default
}

"Generated from type: [`com.twitter.timelines.render.BadgeType`](http://go/sg.thrift/BadgeType)"
enum TimelineBadgeType @thrift_type(name : "BadgeType", package : "com.twitter.timelines.render") {
  Live
  Moments
  Periscope
  Reserved1
  Reserved2
  Reserved3
  Unknown
}

"Generated from type: [`com.twitter.timelines.render.ButtonStyle`](http://go/sg.thrift/ButtonStyle)"
enum TimelineButtonStyle @thrift_type(name : "ButtonStyle", package : "com.twitter.timelines.render") {
  Default
  Destructive
  DestructiveSecondary
  DestructiveText
  Neutral
  Primary
  Secondary
  Text
}

"Generated from type: [`com.twitter.timelines.render.CampaignState`](http://go/sg.thrift/CampaignState)"
enum TimelineCampaignState @thrift_type(name : "CampaignState", package : "com.twitter.timelines.render") {
  Finished
  Paused
  Running
}

"Generated from type: [`com.twitter.timelines.render.CardDisplayType`](http://go/sg.thrift/CardDisplayType)"
enum TimelineCardDisplayType @thrift_type(name : "CardDisplayType", package : "com.twitter.timelines.render") {
  Cell
  Hero
  TweetCard
}

"Generated from type: [`com.twitter.timelines.render.ConfirmationDisplayType`](http://go/sg.thrift/ConfirmationDisplayType)"
enum TimelineConfirmationDisplayType @thrift_type(name : "ConfirmationDisplayType", package : "com.twitter.timelines.render") {
  BottomSheet
  Inline
}

"Generated from type: [`com.twitter.timelines.render.ContextType`](http://go/sg.thrift/ContextType)"
enum TimelineContextType @thrift_type(name : "ContextType", package : "com.twitter.timelines.render") {
  Bird
  Community
  Conversation
  Facepile
  Feedback
  Follow
  Like
  List
  Location
  Megaphone
  Moment
  NewUser
  Pin
  Reply
  Retweet
  SmartBlockExpiration
  Spaces
  Sparkle
  TextOnly
  Topic
  Trending
}

"Generated from type: [`com.twitter.timelines.render.ConversationSection`](http://go/sg.thrift/ConversationSection)"
enum TimelineConversationSection @thrift_type(name : "ConversationSection", package : "com.twitter.timelines.render") {
  AbusiveQuality
  HighQuality
  LowQuality
}

"Generated from type: [`com.twitter.timelines.render.ConversationAnnotationType`](http://go/sg.thrift/ConversationAnnotationType)"
enum TimelineConversationType @thrift_type(name : "ConversationAnnotationType", package : "com.twitter.timelines.render") {
  Large
  Political
  Reserved3
  Reserved4
  Reserved5
  Reserved6
  Reserved7
  Reserved8
  Reserved9
}

"Generated from type: [`com.twitter.timelines.render.CursorAvatarDisplayType`](http://go/sg.thrift/CursorAvatarDisplayType)"
enum TimelineCursorAvatarDisplayType @thrift_type(name : "CursorAvatarDisplayType", package : "com.twitter.timelines.render") {
  Avatar
  Facepile
}

"Generated from type: [`com.twitter.timelines.render.CursorAvatarZOrder`](http://go/sg.thrift/CursorAvatarZOrder)"
enum TimelineCursorAvatarZOrder @thrift_type(name : "CursorAvatarZOrder", package : "com.twitter.timelines.render") {
  BackToFront
  FrontToBack
}

"Generated from type: [`com.twitter.timelines.render.CursorType`](http://go/sg.thrift/CursorType)"
enum TimelineCursorType @thrift_type(name : "CursorType", package : "com.twitter.timelines.render") {
  Bottom
  Gap
  Pivot
  ShowMore
  ShowMoreThreads
  ShowMoreThreadsPrompt
  Subbranch
  Top
}

"Generated from type: [`com.twitter.timelines.render.DisclaimerType`](http://go/sg.thrift/DisclaimerType)"
enum TimelineDisclaimerType @thrift_type(name : "DisclaimerType", package : "com.twitter.timelines.render") {
  Issue
  Political
  Reserved3
  Reserved4
  Reserved5
}

"Generated from type: [`com.twitter.timelines.render.DisclosureType`](http://go/sg.thrift/DisclosureType)"
enum TimelineDisclosureType @thrift_type(name : "DisclosureType", package : "com.twitter.timelines.render") {
  Earned
  Issue
  NoDisclosure
  Political
}

"Generated from type: [`com.twitter.timelines.render.DynamicPrerollType`](http://go/sg.thrift/DynamicPrerollType)"
enum TimelineDynamicPrerollType @thrift_type(name : "DynamicPrerollType", package : "com.twitter.timelines.render") {
  Amplify
  LiveTvEvent
  Marketplace
  ReservedDynamicPrerollType4
  ReservedDynamicPrerollType5
}

"Generated from type: [`com.twitter.timelines.render.EntityFollowPromptDisplayType`](http://go/sg.thrift/EntityFollowPromptDisplayType)"
enum TimelineEntityFollowPromptDisplayType @thrift_type(name : "EntityFollowPromptDisplayType", package : "com.twitter.timelines.render") {
  FollowFocus
  TitleFocus
}

"Generated from type: [`com.twitter.timelines.render.EventState`](http://go/sg.thrift/EventState)"
enum TimelineEventState @thrift_type(name : "EventState", package : "com.twitter.timelines.render") {
  Cancelled
  Completed
  InProgress
  Postponed
  Scheduled
  _Unused6
  _Unused7
}

"Generated from type: [`com.twitter.timelines.render.EventSummaryDisplayType`](http://go/sg.thrift/EventSummaryDisplayType)"
enum TimelineEventSummaryDisplayType @thrift_type(name : "EventSummaryDisplayType", package : "com.twitter.timelines.render") {
  Cell
  CellWithProminentSocialContext
  Hero
}

"Generated from type: [`com.twitter.timelines.render.FeedbackType`](http://go/sg.thrift/FeedbackType)"
enum TimelineFeedbackType @thrift_type(name : "FeedbackType", package : "com.twitter.timelines.render") {
  Dismiss
  DontLike
  Generic
  GiveFeedback
  Moderate
  NotAboutTopic
  NotCredible
  NotRecent
  NotRelevant
  Relevant
  RichBehavior
  SeeFewer
  SeeMore
  UnfollowEntity
}

"Generated from type: [`com.twitter.timelines.render.FollowPromptShowRule`](http://go/sg.thrift/FollowPromptShowRule)"
enum TimelineFollowPromptShowRule @thrift_type(name : "FollowPromptShowRule", package : "com.twitter.timelines.render") {
  AfterAnyEngagement
  AfterLike
  Always
}

"Generated from type: [`com.twitter.timelines.render.FollowSearchActionDisplayType`](http://go/sg.thrift/FollowSearchActionDisplayType)"
enum TimelineFollowSearchActionDisplayType @thrift_type(name : "FollowSearchActionDisplayType", package : "com.twitter.timelines.render") {
  ClientConfigurable
  Large
  Small
}

"Generated from type: [`com.twitter.timelines.render.FollowType`](http://go/sg.thrift/FollowType)"
enum TimelineFollowType @thrift_type(name : "FollowType", package : "com.twitter.timelines.render") {
  HomeTimeline
  UnusedFutureVal1
  UnusedFutureVal2
  UnusedFutureVal3
  UnusedFutureVal4
}

"Generated from type: [`com.twitter.timelines.render.ForwardPivotDisplayType`](http://go/sg.thrift/ForwardPivotDisplayType)"
enum TimelineForwardPivotDisplayType @thrift_type(name : "ForwardPivotDisplayType", package : "com.twitter.timelines.render") {
  CommunityNotes
  LiveEvent
  SoftIntervention
}

"Generated from type: [`com.twitter.timelines.render.FullCoverDisplayType`](http://go/sg.thrift/FullCoverDisplayType)"
enum TimelineFullCoverDisplayType @thrift_type(name : "FullCoverDisplayType", package : "com.twitter.timelines.render") {
  Cover
}

"Generated from type: [`com.twitter.timelines.render.HalfCoverDisplayType`](http://go/sg.thrift/HalfCoverDisplayType)"
enum TimelineHalfCoverDisplayType @thrift_type(name : "HalfCoverDisplayType", package : "com.twitter.timelines.render") {
  CenterCover
  Cover
}

"Generated from type: [`com.twitter.timelines.render.HorizonIcon`](http://go/sg.thrift/HorizonIcon)"
enum TimelineHorizonIcon @thrift_type(name : "HorizonIcon", package : "com.twitter.timelines.render") {
  ArrowRight
  BalloonStroke
  Bookmark
  Calendar
  Debug
  Error
  EyeOff
  Feedback
  FeedbackClose
  Flag
  Follow
  Frown
  Help
  Link
  LocationStroke
  Message
  Moderation
  Moment
  No
  NotificationsFollow
  Outgoing
  Person
  PersonStroke
  Pin
  Retweet
  Safety
  Smile
  Speaker
  Topic
  TopicClose
  TopicFilled
  Trashcan
  Unfollow
}

"Generated from type: [`com.twitter.timelines.render.ImageAnimationType`](http://go/sg.thrift/ImageAnimationType)"
enum TimelineImageAnimationType @thrift_type(name : "ImageAnimationType", package : "com.twitter.timelines.render") {
  Bounce
}

"Generated from type: [`com.twitter.timelines.render.ImageDisplayType`](http://go/sg.thrift/ImageDisplayType)"
enum TimelineImageDisplayType @thrift_type(name : "ImageDisplayType", package : "com.twitter.timelines.render") {
  FullWidth
  Icon
  IconSmall
}

"Generated from type: [`com.twitter.timelines.render.LabelDisplayType`](http://go/sg.thrift/LabelDisplayType)"
enum TimelineLabelDisplayType @thrift_type(name : "LabelDisplayType", package : "com.twitter.timelines.render") {
  InlineHeader
}

"Generated from type: [`com.twitter.timelines.render.MessageActionType`](http://go/sg.thrift/MessageActionType)"
enum TimelineMessageActionType @thrift_type(name : "MessageActionType", package : "com.twitter.timelines.render") {
  FollowAll
}

"Generated from type: [`com.twitter.timelines.render.ModuleDisplayType`](http://go/sg.thrift/ModuleDisplayType)"
enum TimelineModuleDisplayType @thrift_type(name : "ModuleDisplayType", package : "com.twitter.timelines.render") {
  Carousel
  CompactCarousel
  ConversationTree
  GridCarousel
  "Horizontally-scrolling carousel of PagedCarouselItem."
  PagedCarousel
  Vertical
  VerticalConversation
  "Vertically expandable grid of VerticalGridItems. VerticalGridItem is the only supported item type"
  VerticalGrid
  VerticalWithContextLine
}

"Generated from type: [`com.twitter.timelines.render.ModuleFooterDisplayType`](http://go/sg.thrift/ModuleFooterDisplayType)"
enum TimelineModuleFooterDisplayType @thrift_type(name : "ModuleFooterDisplayType", package : "com.twitter.timelines.render") {
  Button
  Classic
  Footnote
}

"Generated from type: [`com.twitter.timelines.render.ModuleHeaderDisplayType`](http://go/sg.thrift/ModuleHeaderDisplayType)"
enum TimelineModuleHeaderDisplayType @thrift_type(name : "ModuleHeaderDisplayType", package : "com.twitter.timelines.render") {
  Classic
  ContextEmphasis
}

"Generated from type: [`com.twitter.timelines.render.MomentCardType`](http://go/sg.thrift/MomentCardType)"
enum TimelineMomentCardType @thrift_type(name : "MomentCardType", package : "com.twitter.timelines.render") {
  EndCard
  StartCard
}

"Generated from type: [`com.twitter.timelines.render.MomentDisplayType`](http://go/sg.thrift/MomentDisplayType)"
enum TimelineMomentDisplayType @thrift_type(name : "MomentDisplayType", package : "com.twitter.timelines.render") {
  Default
  Hero
}

"Generated from type: [`com.twitter.timelines.render.NewsDisplayType`](http://go/sg.thrift/NewsDisplayType)"
enum TimelineNewsDisplayType @thrift_type(name : "NewsDisplayType", package : "com.twitter.timelines.render") {
  Cell
  PreviewCard
}

"Generated from type: [`com.twitter.timelines.render.PivotDisplayType`](http://go/sg.thrift/PivotDisplayType)"
enum TimelinePivotDisplayType @thrift_type(name : "PivotDisplayType", package : "com.twitter.timelines.render") {
  CompactImage
  Fill
  SelfThread
}

"Generated from type: [`com.twitter.timelines.render.RichTextAlignment`](http://go/sg.thrift/RichTextAlignment)"
enum TimelineRichTextAlignment @thrift_type(name : "RichTextAlignment", package : "com.twitter.timelines.render") {
  Center
  Natural
}

"Generated from type: [`com.twitter.timelines.render.RichTextFormat`](http://go/sg.thrift/RichTextFormat)"
enum TimelineRichTextFormat @thrift_type(name : "RichTextFormat", package : "com.twitter.timelines.render") {
  Plain
  Strong
}

"Generated from type: [`com.twitter.timelines.render.RosettaColor`](http://go/sg.thrift/RosettaColor)"
enum TimelineRosettaColor @thrift_type(name : "RosettaColor", package : "com.twitter.timelines.render") {
  Black
  Clear
  DeepBlue
  DeepGray
  DeepGreen
  DeepOrange
  DeepPurple
  DeepRed
  DeepYellow
  FadedBlue
  FadedGray
  FadedGreen
  FadedOrange
  FadedPurple
  FadedRed
  FadedYellow
  FaintBlue
  FaintGray
  LightBlue
  LightGray
  LightGreen
  LightOrange
  LightPurple
  LightRed
  LightYellow
  MediumGray
  MediumGreen
  MediumOrange
  MediumPurple
  MediumRed
  MediumYellow
  TextBlack
  TextBlue
  TwitterBlue
  White
}

"Generated from type: [`com.twitter.timelines.render.ScoreEventCardDisplayType`](http://go/sg.thrift/ScoreEventCardDisplayType)"
enum TimelineScoreEventCardDisplayType @thrift_type(name : "ScoreEventCardDisplayType", package : "com.twitter.timelines.render") {
  Cell
  Hero
  Tile
}

"Generated from type: [`com.twitter.timelines.render.ShowAlertDisplayLocation`](http://go/sg.thrift/ShowAlertDisplayLocation)"
enum TimelineShowAlertDisplayLocation @thrift_type(name : "ShowAlertDisplayLocation", package : "com.twitter.timelines.render") {
  Bottom
  Top
}

"Generated from type: [`com.twitter.timelines.render.ShowAlertIcon`](http://go/sg.thrift/ShowAlertIcon)"
enum TimelineShowAlertIcon @thrift_type(name : "ShowAlertIcon", package : "com.twitter.timelines.render") {
  DownArrow
  UpArrow
}

"Generated from type: [`com.twitter.timelines.render.SoftInterventionDisplayType`](http://go/sg.thrift/SoftInterventionDisplayType)"
enum TimelineSoftInterventionDisplayType @thrift_type(name : "SoftInterventionDisplayType", package : "com.twitter.timelines.render") {
  GetTheLatest
  GovernmentRequested
  Misleading
  StayInformed
}

"Generated from type: [`com.twitter.timelines.render.SoftInterventionType`](http://go/sg.thrift/SoftInterventionType)"
enum TimelineSoftInterventionType @thrift_type(name : "SoftInterventionType", package : "com.twitter.timelines.render") {
  Level1
  Level2
  Level3
}

"Generated from type: [`com.twitter.timelines.render.SpellingActionType`](http://go/sg.thrift/SpellingActionType)"
enum TimelineSpellingActionType @thrift_type(name : "SpellingActionType", package : "com.twitter.timelines.render") {
  Expand
  Replace
  Suggest
}

"Generated from type: [`com.twitter.timelines.render.SponsorshipType`](http://go/sg.thrift/SponsorshipType)"
enum TimelineSponsorshipType @thrift_type(name : "SponsorshipType", package : "com.twitter.timelines.render") {
  Direct
  Indirect
  NoSponsorship
  SponsorshipType4
  SponsorshipType5
}

"Generated from type: [`com.twitter.timelines.render.TimelineTerminationDirection`](http://go/sg.thrift/TimelineTerminationDirection)"
enum TimelineTimelineTerminationDirection @thrift_type(name : "TimelineTerminationDirection", package : "com.twitter.timelines.render") {
  Bottom
  Top
  TopAndBottom
}

"Generated from type: [`com.twitter.timelines.render.TombstoneDisplayType`](http://go/sg.thrift/TombstoneDisplayType)"
enum TimelineTombstoneDisplayType @thrift_type(name : "TombstoneDisplayType", package : "com.twitter.timelines.render") {
  DisconnectedRepliesAncestor
  DisconnectedRepliesDescendant
  Inline
  NonCompliant
  TweetUnavailable
}

"Generated from type: [`com.twitter.timelines.render.TopicContextFunctionalityType`](http://go/sg.thrift/TopicContextFunctionalityType)"
enum TimelineTopicContextFunctionalityType @thrift_type(name : "TopicContextFunctionalityType", package : "com.twitter.timelines.render") {
  "Shown in situations where where we provide minimal context other than telling the customer that the content is about the Topic"
  Basic
  "Shown in situations where we prompt customers with the education message to help customers understand the controls they have after seeing this topic with recommendation contents a few times"
  RecWithEducation
  "Shown in situations where users are recommended content about a Topic and need recommendation-specific controls"
  Recommendation
}

"Generated from type: [`com.twitter.timelines.render.TopicFollowPromptDisplayType`](http://go/sg.thrift/TopicFollowPromptDisplayType)"
enum TimelineTopicFollowPromptDisplayType @thrift_type(name : "TopicFollowPromptDisplayType", package : "com.twitter.timelines.render") {
  "Emphasizes the title/description over the follow button"
  IncentiveFocus
  "Emphasizes the action button over the title/description"
  TopicFocus
}

"Generated from type: [`com.twitter.timelines.render.TweetAction`](http://go/sg.thrift/TweetAction)"
enum TimelineTweetAction @thrift_type(name : "TweetAction", package : "com.twitter.timelines.render") {
  Bookmark
  Create
  Like
  QuoteTweet
  Reply
  Retweet
}

"Generated from type: [`com.twitter.timelines.render.TweetComposerDisplayType`](http://go/sg.thrift/TweetComposerDisplayType)"
enum TimelineTweetComposerDisplayType @thrift_type(name : "TweetComposerDisplayType", package : "com.twitter.timelines.render") {
  Reply
  SelfThread
}

"Generated from type: [`com.twitter.timelines.render.TweetDisplaySize`](http://go/sg.thrift/TweetDisplaySize)"
enum TimelineTweetDisplaySize @thrift_type(name : "TweetDisplaySize", package : "com.twitter.timelines.render") {
  Large
  Medium
  Small
}

"Generated from type: [`com.twitter.timelines.render.TweetDisplayType`](http://go/sg.thrift/TweetDisplayType)"
enum TimelineTweetDisplayType @thrift_type(name : "TweetDisplayType", package : "com.twitter.timelines.render") {
  DeprecatedMediaFocus
  EmphasizedPromotedTweet
  MapCardPromotedTweet
  Media
  MomentTimelineTweet
  QuotedTweet
  ReaderMode
  ReaderModeRoot
  SelfThread
  Tweet
  TweetFollowOnly
  TweetWithoutCard
}

"Generated from type: [`com.twitter.timelines.render.TwitterListDisplayType`](http://go/sg.thrift/TwitterListDisplayType)"
enum TimelineTwitterListDisplayType @thrift_type(name : "TwitterListDisplayType", package : "com.twitter.timelines.render") {
  List
  ListTile
  ListWithPin
  ListWithSubscribe
}

"Generated from type: [`com.twitter.timelines.render.UrlType`](http://go/sg.thrift/UrlType)"
enum TimelineUrlType @thrift_type(name : "UrlType", package : "com.twitter.timelines.render") {
  DeepLink
  ExternalUrl
  UrtEndpoint
}

"Generated from type: [`com.twitter.timelines.render.UserDisplayType`](http://go/sg.thrift/UserDisplayType)"
enum TimelineUserDisplayType @thrift_type(name : "UserDisplayType", package : "com.twitter.timelines.render") {
  PendingFollowUser
  ProfileCard
  User
  UserCompact
  UserConcise
  UserDetailed
}

"Generated from type: [`com.twitter.timelines.render.UserFacepileDisplayType`](http://go/sg.thrift/UserFacepileDisplayType)"
enum TimelineUserFacepileDisplayType @thrift_type(name : "UserFacepileDisplayType", package : "com.twitter.timelines.render") {
  Compact
  Large
}

"Generated from type: [`com.twitter.timelines.render.TopicDisplayType`](http://go/sg.thrift/TopicDisplayType)"
enum TopicDisplayType @thrift_type(name : "TopicDisplayType", package : "com.twitter.timelines.render") {
  "Shown as generic Topic entry in multiple places"
  Basic
  "Shown as generic Topic entry without the topic icon"
  NoIcon
  "Shown as Topic pill in GridCarousel Timelines (Topics) module"
  Pill
  "Shown as Topic Pill with only text and no action icon"
  PillWithoutActionIcon
}

"Generated from type: [`com.twitter.timelines.render.TopicFunctionalityType`](http://go/sg.thrift/TopicFunctionalityType)"
enum TopicFunctionalityType @thrift_type(name : "TopicFunctionalityType", package : "com.twitter.timelines.render") {
  "Shown in situations where the user should be able to manage their relationship to the Topic"
  Basic
  "Shown in situations where people are prompt to click on the topic module"
  Pivot
  "Shown in situations where people are recommended the Topic and need recommendation specific controls. Client should use RichFeedbackBehaviorMarkNotInterestedTopic to dismiss the referencing entry"
  Recommendation
}

"Generated from type: [`com.twitter.pages.render.TopicPageHeaderDisplayType`](http://go/sg.thrift/TopicPageHeaderDisplayType)"
enum TopicPageHeaderDisplayType @thrift_type(name : "TopicPageHeaderDisplayType", package : "com.twitter.pages.render") {
  "Shown with layout for General Topics"
  Basic
  "Shown with layout for Personalized Topics"
  Personalized
}

"Generated from type: [`com.twitter.gizmoduck.TranslatorType`](http://go/sg.thrift/TranslatorType)"
enum TranslatorType @thrift_type(name : "TranslatorType", package : "com.twitter.gizmoduck") {
  Badged
  Moderator
  None
  Regular
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsInfoUnavailableReason`](http://go/sg.thrift/TrustedFriendsInfoUnavailableReason)"
enum TrustedFriendsInfoUnavailableReason @thrift_type(name : "TrustedFriendsInfoUnavailableReason", package : "com.twitter.trusted_friends") {
  ListNotFound
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListCreateInvalidReason`](http://go/sg.thrift/TrustedFriendsListCreateInvalidReason)"
enum TrustedFriendsListCreateInvalidReason @thrift_type(name : "TrustedFriendsListCreateInvalidReason", package : "com.twitter.trusted_friends") {
  MaxListsExceeded
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberAddInvalidReason`](http://go/sg.thrift/TrustedFriendsListMemberAddInvalidReason)"
enum TrustedFriendsListMemberAddInvalidReason @thrift_type(name : "TrustedFriendsListMemberAddInvalidReason", package : "com.twitter.trusted_friends") {
  CannotAddSelf
  ListNotFound
  MaxMembersExceeded
  UserBlocked
  UserBlocking
  UserDeactivated
  UserNotAllowed
  UserNotFound
  UserOffboarded
  UserSuspended
}

"Generated from type: [`com.twitter.trusted_friends.TrustedFriendsListMemberRemoveInvalidReason`](http://go/sg.thrift/TrustedFriendsListMemberRemoveInvalidReason)"
enum TrustedFriendsListMemberRemoveInvalidReason @thrift_type(name : "TrustedFriendsListMemberRemoveInvalidReason", package : "com.twitter.trusted_friends") {
  ListNotFound
  UserNotFound
}

"Generated from type: [`com.twitter.timelines.render.TweetAttachedTopicFollowPromptDisplayType`](http://go/sg.thrift/TweetAttachedTopicFollowPromptDisplayType)"
enum TweetAttachedTopicFollowPromptDisplayType @thrift_type(name : "TweetAttachedTopicFollowPromptDisplayType", package : "com.twitter.timelines.render") {
  "Show the prompt at the bottom of the tweet"
  Basic
  "Don’t render the prompt by default. Only show the prompt after user triggers any click action."
  Reactive
}

"Generated from type: [`com.twitter.eduardo.actions.TweetEditActionUnavailableReason`](http://go/sg.thrift/TweetEditActionUnavailableReason)"
enum TweetEditActionUnavailableReason @thrift_type(name : "TweetEditActionUnavailableReason", package : "com.twitter.eduardo.actions") {
  EditCountLimitExceeded
  EditTimeLimitExceeded
  TweetIsStale
  Unavailable
  ViewerNotAuthor
}

"Generated from type: [`com.twitter.strato.graphql.TweetInterstitialDisplayType`](http://go/sg.thrift/TweetInterstitialDisplayType)"
enum TweetInterstitialDisplayType @thrift_type(name : "TweetInterstitialDisplayType", package : "com.twitter.strato.graphql") {
  EntireTweet
  NonCompliant
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetMetricType`](http://go/sg.thrift/TweetMetricType)"
enum TweetMetricType @thrift_type(name : "TweetMetricType", package : "com.twitter.dataproducts.metrics.graphql") {
  AdjustedEngagements
  AdjustedFavorites
  AdjustedQuotetweets
  AdjustedReplies
  AdjustedRetweets
  AppInstallAttempts
  AppOpens
  DetailExpands
  Favorites
  Follows
  HashtagClicks
  Impressions
  MediaEngagements
  PermalinkClicks
  PollCardVote
  Replies
  Retweets
  UrlClicks
  UserProfileClicks
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetMetricType`](http://go/sg.thrift/TweetMetricType)"
enum TweetMetricTypeInput @thrift_type(name : "TweetMetricType", package : "com.twitter.dataproducts.metrics.graphql") {
  AdjustedEngagements
  AdjustedFavorites
  AdjustedQuotetweets
  AdjustedReplies
  AdjustedRetweets
  AppInstallAttempts
  AppOpens
  DetailExpands
  Favorites
  Follows
  HashtagClicks
  Impressions
  MediaEngagements
  PermalinkClicks
  PollCardVote
  Replies
  Retweets
  UrlClicks
  UserProfileClicks
}

"Generated from type: [`com.twitter.easypromote.TweetEligibility`](http://go/sg.thrift/TweetEligibility)"
enum TweetQuickPromoteEligibility @thrift_type(name : "TweetEligibility", package : "com.twitter.easypromote") {
  Eligible
  EligibleWithPreviousCampaign
  IneligibleCampaignPaused
  IneligibleCampaignRunning
  IneligibleCampaignUnderReview
  IneligibleNotProfessional
  IneligibleNotProfessionalAndAdAccountEligible
  IneligibleNotProfessionalAndAdAccountIneligible
  IneligibleNotProfessionalAndPendingPayment
  IneligibleTweet
  IneligibleUserUnauthorized
  ReplyTweet
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetTypesThatCanBeExcluded`](http://go/sg.thrift/TweetTypesThatCanBeExcluded)"
enum TweetTypeExcludeOptionsInput @thrift_type(name : "TweetTypesThatCanBeExcluded", package : "com.twitter.dataproducts.aaa.graphql") {
  Replies
  Retweets
}

"Generated from type: [`com.twitter.incentives.jiminy.TweetType`](http://go/sg.thrift/TweetType)"
enum TweetTypeInput @thrift_type(name : "TweetType", package : "com.twitter.incentives.jiminy") {
  OriginalTweet
  QuoteTweet
  Reply
  Retweet
}

"Generated from type: [`com.twitter.strato.graphql.TweetUnavailableReason`](http://go/sg.thrift/TweetUnavailableReason)"
enum TweetUnavailableReason @thrift_type(name : "TweetUnavailableReason", package : "com.twitter.strato.graphql") {
  Blocked
  BounceDeleted
  Bounced
  ExclusiveTweet
  NsfwLoggedOut
  NsfwViewerHasNoStatedAge
  NsfwViewerIsUnderage
  Protected
  Suspended
}

"Generated from type: [`com.twitter.longform.composer.MediaCategory`](http://go/sg.thrift/MediaCategory)"
enum TwitterArticleMediaCategoryInput @thrift_type(name : "MediaCategory", package : "com.twitter.longform.composer") {
  TweetGif
  TweetImage
  TweetVideo
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleUnavailableReason`](http://go/sg.thrift/TwitterArticleUnavailableReason)"
enum TwitterArticleUnavailableReason @thrift_type(name : "TwitterArticleUnavailableReason", package : "com.twitter.longform.composer") {
  NoReasonAvailable
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleVisibility`](http://go/sg.thrift/TwitterArticleVisibility)"
enum TwitterArticleVisibility @thrift_type(name : "TwitterArticleVisibility", package : "com.twitter.longform.composer") {
  Draft
  Published
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleVisibility`](http://go/sg.thrift/TwitterArticleVisibility)"
enum TwitterArticleVisibilityInput @thrift_type(name : "TwitterArticleVisibility", package : "com.twitter.longform.composer") {
  Draft
  Published
}

"Generated from type: [`com.twitter.strato.graphql.TypeaheadResultContextType`](http://go/sg.thrift/TypeaheadResultContextType)"
enum TypeaheadResultContextType @thrift_type(name : "TypeaheadResultContextType", package : "com.twitter.strato.graphql") {
  Bio
  FollowRelationship
  Location
  NumFollowers
  NumTweets
  SocialProof
  Trending
  Undefined
  You
}

"Generated from type: [`com.twitter.convosvc.strato.TypingIndicatorFailureReason`](http://go/sg.thrift/TypingIndicatorFailureReason)"
enum TypingIndicatorFailureReason @thrift_type(name : "TypingIndicatorFailureReason", package : "com.twitter.convosvc.strato") {
  ClientError
  ConversationValidationError
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnblockInvalidRequestReason`](http://go/sg.thrift/UnblockInvalidRequestReason)"
enum UnblockInvalidRequestReason @thrift_type(name : "UnblockInvalidRequestReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  UserNotFound
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnblockSuccessReason`](http://go/sg.thrift/UnblockSuccessReason)"
enum UnblockSuccessReason @thrift_type(name : "UnblockSuccessReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  Unblocked
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowFailedReason`](http://go/sg.thrift/UnfollowFailedReason)"
enum UnfollowFailedReason @thrift_type(name : "UnfollowFailedReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  SpammerRejected
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowInvalidRequestReason`](http://go/sg.thrift/UnfollowInvalidRequestReason)"
enum UnfollowInvalidRequestReason @thrift_type(name : "UnfollowInvalidRequestReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  Unauthorized
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.UnfollowRetweetsFailureReason`](http://go/sg.thrift/UnfollowRetweetsFailureReason)"
enum UnfollowRetweetsFailureReason @thrift_type(name : "UnfollowRetweetsFailureReason", package : "com.twitter.strato.columns.socialgraph") {
  Blocked
  Blocking
  NotFollowing
  UserNotFound
}

"Generated from type: [`com.twitter.strato.columns.socialgraph.UnfollowRetweetsSuccessReason`](http://go/sg.thrift/UnfollowRetweetsSuccessReason)"
enum UnfollowRetweetsSuccessReason @thrift_type(name : "UnfollowRetweetsSuccessReason", package : "com.twitter.strato.columns.socialgraph") {
  RetweetsUnfollowed
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnfollowSuccessReason`](http://go/sg.thrift/UnfollowSuccessReason)"
enum UnfollowSuccessReason @thrift_type(name : "UnfollowSuccessReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  Unfollowed
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnmuteInvalidRequestReason`](http://go/sg.thrift/UnmuteInvalidRequestReason)"
enum UnmuteInvalidRequestReason @thrift_type(name : "UnmuteInvalidRequestReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  UserNotFound
}

"Generated from type: [`com.twitter.dataproducts.userrelationships.graphql.UnmuteSuccessReason`](http://go/sg.thrift/UnmuteSuccessReason)"
enum UnmuteSuccessReason @thrift_type(name : "UnmuteSuccessReason", package : "com.twitter.dataproducts.userrelationships.graphql") {
  Unmuted
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UploadProductIndividualStatus`](http://go/sg.thrift/UploadProductIndividualStatus)"
enum UploadProductIndividualStatus @thrift_type(name : "UploadProductIndividualStatus", package : "com.twitter.commerce.catalog.api.graphql") {
  UploadProductResultCreateSuccess
  UploadProductResultError
  UploadProductResultNoChange
  UploadProductResultUpdateSuccess
}

"Generated from type: [`com.twitter.timelines.render.UrlOverrideType`](http://go/sg.thrift/UrlOverrideType)"
enum UrlOverrideType @thrift_type(name : "UrlOverrideType", package : "com.twitter.timelines.render") {
  Dcm
  Unknown
}

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteActionUnavailableReason`](http://go/sg.thrift/UserCommunityInviteActionUnavailableReason)"
enum UserCommunityInviteActionUnavailableReason @thrift_type(name : "UserCommunityInviteActionUnavailableReason", package : "com.twitter.communities.actions") {
  Unavailable
  UserIsInvited
  UserIsMember
  UserIsProtected
  ViewerCannotDmUser
  ViewerIsNonMember
  ViewerOutOfInvites
}

"Generated from type: [`com.twitter.communities.actions.UserCommunityInviteMutationErrorReason`](http://go/sg.thrift/UserCommunityInviteMutationErrorReason)"
enum UserCommunityInviteMutationErrorReason @thrift_type(name : "UserCommunityInviteMutationErrorReason", package : "com.twitter.communities.actions") {
  Error
}

"Generated from type: [`com.twitter.strato.columns.content_controls.EnabledMode`](http://go/sg.thrift/EnabledMode)"
enum UserDeveloperContentFilterConfigEnabledMode @thrift_type(name : "EnabledMode", package : "com.twitter.strato.columns.content_controls") {
  Hidden
  Remove
}

"Generated from type: [`com.twitter.strato.columns.content_controls.EnabledMode`](http://go/sg.thrift/EnabledMode)"
enum UserDeveloperContentFilterConfigEnabledModeInput @thrift_type(name : "EnabledMode", package : "com.twitter.strato.columns.content_controls") {
  Hidden
  Remove
}

"Generated from type: [`com.twitter.convosvc.strato.UserFailuresReason`](http://go/sg.thrift/UserFailuresReason)"
enum UserFailuresReason @thrift_type(name : "UserFailuresReason", package : "com.twitter.convosvc.strato") {
  Other
  RecipientInactive
  RecipientNotFound
  SenderInactive
  SenderNotFound
  TextEmpty
}

"Generated from type: [`com.twitter.affiliates.UserLabelType`](http://go/sg.thrift/UserLabelType)"
enum UserLabelType @thrift_type(name : "UserLabelType", package : "com.twitter.affiliates") {
  AutomatedLabel
  ElectionsLabel
  GenericBadgeLabel
  GenericInfoLabel
  Reserved4
  Reserved5
  Reserved6
  Reserved7
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.UserMetricsByDayKey`](http://go/sg.thrift/UserMetricsByDayKey)"
enum UserMetricsByDayKey @thrift_type(name : "UserMetricsByDayKey", package : "com.twitter.dataproducts.metrics.graphql") {
  Engagements
  Impressions
  Likes
  Replies
  Retweets
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.UserMetricsByDayKey`](http://go/sg.thrift/UserMetricsByDayKey)"
enum UserMetricsByDayKeyInput @thrift_type(name : "UserMetricsByDayKey", package : "com.twitter.dataproducts.metrics.graphql") {
  Engagements
  Impressions
  Likes
  Replies
  Retweets
}

"Generated from type: [`com.twitter.easypromote.UserIneligibilityReason`](http://go/sg.thrift/UserIneligibilityReason)"
enum UserQuickPromoteIneligibilityReason @thrift_type(name : "UserIneligibilityReason", package : "com.twitter.easypromote") {
  InvalidAdsAccount
  PendingPayment
  UnsupportedCountry
  UnsupportedServiceLevel
  YoungAccount
}

"Generated from type: [`com.twitter.recurringpayments.recurringpaymentstatusevents.thriftscala.PaymentSource`](http://go/sg.thrift/PaymentSource)"
enum UserSubscriptionPaymentSource @thrift_type(name : "PaymentSource", package : "com.twitter.recurringpayments.recurringpaymentstatusevents.thriftscala") {
  AppleAppStore
  GooglePlay
  Stripe
  TPay
}

"Generated from type: [`com.twitter.recurringpayments.recurringpaymentstatusevents.thriftscala.PaymentSource`](http://go/sg.thrift/PaymentSource)"
enum UserSubscriptionPaymentSourceInput @thrift_type(name : "PaymentSource", package : "com.twitter.recurringpayments.recurringpaymentstatusevents.thriftscala") {
  AppleAppStore
  GooglePlay
  Stripe
  TPay
}

"Generated from type: [`com.twitter.subscriptioncommon.UserSubscriptionState`](http://go/sg.thrift/UserSubscriptionState)"
enum UserSubscriptionState @thrift_type(name : "UserSubscriptionState", package : "com.twitter.subscriptioncommon") {
  Active
  Expire
  Inactive
}

"Generated from type: [`com.twitter.gizmoduck.UserType`](http://go/sg.thrift/UserType)"
enum UserType @thrift_type(name : "UserType", package : "com.twitter.gizmoduck") {
  Email
  Frictionless
  NoScreenName
  Normal
  Periscope
  Soft
}

"Generated from type: [`com.twitter.strato.graphql.UserUnavailableReason`](http://go/sg.thrift/UserUnavailableReason)"
enum UserUnavailableReason @thrift_type(name : "UserUnavailableReason", package : "com.twitter.strato.graphql") {
  Blocked
  BlockedByViewer
  MutedByViewer
  NoReason
  Nsfw
  Offboarded
  Protected
  Suspended
}

"Generated from type: [`com.twitter.timelines.render.VerticalGridItemTileStyle`](http://go/sg.thrift/VerticalGridItemTileStyle)"
enum VerticalGridItemTileStyle @thrift_type(name : "VerticalGridItemTileStyle", package : "com.twitter.timelines.render") {
  DoubleStateDefault
  "Text centered in cell. White text (default). Blue background (default)"
  SingleStateDefault
}

"Generated from type: [`com.twitter.timelines.render.VerticalGridItemTopicFunctionalityType`](http://go/sg.thrift/VerticalGridItemTopicFunctionalityType)"
enum VerticalGridItemTopicFunctionalityType @thrift_type(name : "VerticalGridItemTopicFunctionalityType", package : "com.twitter.timelines.render") {
  "Shown in situations where user can click on the item to pivot to detail page"
  Pivot
  "Shown in situations where people are recommended the Topic and need recommendation specific controls like follow, dismiss/not-interested, etc"
  Recommendation
}

"Generated from type: [`com.twitter.vibes.VibeVerb`](http://go/sg.thrift/VibeVerb)"
enum VibeVerb @thrift_type(name : "VibeVerb", package : "com.twitter.vibes") {
  Listening
  Watching
}

"Generated from type: [`com.twitter.vibes.VibeVerb`](http://go/sg.thrift/VibeVerb)"
enum VibeVerbInput @thrift_type(name : "VibeVerb", package : "com.twitter.vibes") {
  Listening
  Watching
}

"Generated from type: [`com.twitter.strato.graphql.VideoAutoplaySetting`](http://go/sg.thrift/VideoAutoplaySetting)"
enum VideoAutoplaySetting @thrift_type(name : "VideoAutoplaySetting", package : "com.twitter.strato.graphql") {
  Always
  Off
  WiFiOnly
}

"Generated from type: [`com.twitter.strato.graphql.VideoAutoplaySetting`](http://go/sg.thrift/VideoAutoplaySetting)"
enum VideoAutoplaySettingInput @thrift_type(name : "VideoAutoplaySetting", package : "com.twitter.strato.graphql") {
  Always
  Off
  WiFiOnly
}

"Generated from type: [`com.twitter.payments.web.CurrencyCode`](http://go/sg.thrift/CurrencyCode)"
enum WebSubscriptionsCurrencyCode @thrift_type(name : "CurrencyCode", package : "com.twitter.payments.web") {
  Aud
  Cad
  Eur
  Gbp
  Nzd
  Usd
}

"Generated from type: [`com.twitter.payments.web.OriginProduct`](http://go/sg.thrift/OriginProduct)"
enum WebSubscrptionOriginProductInput @thrift_type(name : "OriginProduct", package : "com.twitter.payments.web") {
  TwitterBlue
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.Weekday`](http://go/sg.thrift/Weekday)"
enum Weekday @thrift_type(name : "Weekday", package : "com.twitter.bizprofiles.manhattan") {
  Friday
  Monday
  Saturday
  Sunday
  Thursday
  Tuesday
  Wednesday
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.Weekday`](http://go/sg.thrift/Weekday)"
enum WeekdayInput @thrift_type(name : "Weekday", package : "com.twitter.bizprofiles.manhattan") {
  Friday
  Monday
  Saturday
  Sunday
  Thursday
  Tuesday
  Wednesday
}

"The `Int53` scala type represents non-fractional whole numeric values. Values must be be safe to represent as an Integer in Javascript.(between -2^53+1 and 2^53-1)"
scalar Int53

"The `NumericString` scalar type represents non-fractional whole numeric values. It renders the value as a String in JSON."
scalar NumericString

"The `Short` scalar type represents non-fractional signed whole numeric values. Short can represent values between -(2^15) and 2^15 - 1."
scalar Short

"Some serializations of 64-bit unsigned integers cannot be read from common languages, for instance JSON integers using > 53 bits internally cannot be read from Javascript. UnsignedLong exists to handle these cases, and to represent 64-bit unsigned integers generally. `UnsignedLong` can represent values between 0 and 2^64 - 1."
scalar UnsignedLong

"Generated from type: [`com.twitter.bizprofiles.graphql.AboutModuleConfigInput`](http://go/sg.thrift/AboutModuleConfigInput)"
input AboutModuleConfigInput @thrift_type(name : "AboutModuleConfigInput", package : "com.twitter.bizprofiles.graphql") {
  enable_call: Boolean
  enable_email: Boolean
  enable_sms: Boolean
  show_directions: Boolean
}

"Generated from type: [`com.twitter.bizprofiles.graphql.AboutModuleConfigInputSimplified`](http://go/sg.thrift/AboutModuleConfigInputSimplified)"
input AboutModuleConfigInputSimplifiedInput @thrift_type(name : "AboutModuleConfigInputSimplified", package : "com.twitter.bizprofiles.graphql") {
  enable_call: Boolean
  enable_sms: Boolean
}

"Generated from type: [`com.twitter.adsmanager.AdNameFilter`](http://go/sg.thrift/AdNameFilter)"
input AdvertiserAdNameFilterInput @thrift_type(name : "AdNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperatorInput!
  query: String!
}

"Generated from type: [`com.twitter.adsmanager.CampaignIdFilter`](http://go/sg.thrift/CampaignIdFilter)"
input AdvertiserCampaignIdFilterInput @thrift_type(name : "CampaignIdFilter", package : "com.twitter.adsmanager") {
  campaign_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.adsmanager.CampaignNameFilter`](http://go/sg.thrift/CampaignNameFilter)"
input AdvertiserCampaignNameFilterInput @thrift_type(name : "CampaignNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperatorInput!
  query: String!
}

"Generated from type: [`com.twitter.adsmanager.CampaignTypesFilter`](http://go/sg.thrift/CampaignTypesFilter)"
input AdvertiserCampaignTypesFilterInput @thrift_type(name : "CampaignTypesFilter", package : "com.twitter.adsmanager") {
  campaign_types: [AdvertiserCampaignTypeInput!]!
}

"Generated from type: [`com.twitter.adsmanager.DisplayStateFilter`](http://go/sg.thrift/DisplayStateFilter)"
input AdvertiserDisplayStateFilterInput @thrift_type(name : "DisplayStateFilter", package : "com.twitter.adsmanager") {
  display_states: [AdvertiserCampaignDisplayStateInput!]!
}

"Generated from type: [`com.twitter.adsmanager.FilterGraphql`](http://go/sg.thrift/FilterGraphql)"
input AdvertiserFilterInput @thrift_type(name : "FilterGraphql", package : "com.twitter.adsmanager") {
  ad_name_filter: AdvertiserAdNameFilterInput
  campaign_id_filter: AdvertiserCampaignIdFilterInput
  campaign_name_filter: AdvertiserCampaignNameFilterInput
  campaign_type_filter: AdvertiserCampaignTypesFilterInput
  display_state_filter: AdvertiserDisplayStateFilterInput
  fi_filter: AdvertiserFundingInstrumentsFilterInput
  funding_source_name_filter: AdvertiserFundingSourceNameFilterInput
  had_delivery_filter: AdvertiserHadDeliveryFilterInput
  line_item_id_filter: AdvertiserLineItemIdFilterInput
  line_item_name_filter: AdvertiserLineItemNameFilterInput
  objectives_filter: AdvertiserObjectivesFilterInput
  placement_filter: AdvertiserPlacementCategoryInput
  tweet_id_filter: AdvertiserTweetIdFilterInput
}

"Generated from type: [`com.twitter.adsmanager.FundingInstrumentsFilter`](http://go/sg.thrift/FundingInstrumentsFilter)"
input AdvertiserFundingInstrumentsFilterInput @thrift_type(name : "FundingInstrumentsFilter", package : "com.twitter.adsmanager") {
  ids: [NumericString!]!
}

"Generated from type: [`com.twitter.adsmanager.FundingSourceNameFilter`](http://go/sg.thrift/FundingSourceNameFilter)"
input AdvertiserFundingSourceNameFilterInput @thrift_type(name : "FundingSourceNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperatorInput!
  query: String!
}

"Generated from type: [`com.twitter.adsmanager.HadDeliveryFilter`](http://go/sg.thrift/HadDeliveryFilter)"
input AdvertiserHadDeliveryFilterInput @thrift_type(name : "HadDeliveryFilter", package : "com.twitter.adsmanager") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object."
  _no_fields_available: Boolean
}

"Generated from type: [`com.twitter.adsmanager.LineItemIdFilter`](http://go/sg.thrift/LineItemIdFilter)"
input AdvertiserLineItemIdFilterInput @thrift_type(name : "LineItemIdFilter", package : "com.twitter.adsmanager") {
  line_item_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.adsmanager.LineItemNameFilter`](http://go/sg.thrift/LineItemNameFilter)"
input AdvertiserLineItemNameFilterInput @thrift_type(name : "LineItemNameFilter", package : "com.twitter.adsmanager") {
  operator: AdvertiserStringOperatorInput!
  query: String!
}

"Generated from type: [`com.twitter.adsmanager.Objective`](http://go/sg.thrift/Objective)"
input AdvertiserObjectiveInput @thrift_type(name : "Objective", package : "com.twitter.adsmanager") {
  li_objective: LineItemObjectiveInput
}

"Generated from type: [`com.twitter.adsmanager.ObjectivesFilter`](http://go/sg.thrift/ObjectivesFilter)"
input AdvertiserObjectivesFilterInput @thrift_type(name : "ObjectivesFilter", package : "com.twitter.adsmanager") {
  objectives: [AdvertiserObjectiveInput!]!
}

"Generated from type: [`com.twitter.adsmanager.TweetIdFilter`](http://go/sg.thrift/TweetIdFilter)"
input AdvertiserTweetIdFilterInput @thrift_type(name : "TweetIdFilter", package : "com.twitter.adsmanager") {
  tweet_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.analytics.api.Timestamp`](http://go/sg.thrift/Timestamp)"
input AnalyticsTimestampInput @thrift_type(name : "Timestamp", package : "com.twitter.analytics.api") {
  iso8601_time: String!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.AppStoreReceipt`](http://go/sg.thrift/AppStoreReceipt)"
input AppStoreReceiptInput @thrift_type(name : "AppStoreReceipt", package : "com.twitter.in_app_purchases.graphql") {
  base64_receipt: String!
  redemption_metadata_input: RedemptionMetadataInput
  test_external_product_id: String
  transaction_ids: [String!]!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.AppStoreReceiptV2`](http://go/sg.thrift/AppStoreReceiptV2)"
input AppStoreReceiptV2Input @thrift_type(name : "AppStoreReceiptV2", package : "com.twitter.in_app_purchases.graphql") {
  base64_receipt: String!
  redemption_metadata_input: RedemptionMetadataInput
  test_external_product_id: String
  transaction_ids: [String!]!
}

"Generated from type: [`com.twitter.strato.graphql.ArticleListSeed`](http://go/sg.thrift/ArticleListSeed)"
input ArticleListSeedInput @thrift_type(name : "ArticleListSeed", package : "com.twitter.strato.graphql") {
  list_id: NumericString
}

"Generated from type: [`com.twitter.audience_rewards.SetBenefitInfo`](http://go/sg.thrift/SetBenefitInfo)"
input AudienceRewardsSetBenefitInfoInput @thrift_type(name : "SetBenefitInfo", package : "com.twitter.audience_rewards") {
  benefit_type: AudienceRewardsBenefitFeatureInput!
  description: String!
  title: String!
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharedTweetInput`](http://go/sg.thrift/AudioSpaceSharedTweetInput)"
input AudioSpaceSharedTweetInput @thrift_type(name : "AudioSpaceSharedTweetInput", package : "com.twitter.strato.graphql") {
  tweet_id: NumericString!
}

"Generated from type: [`com.twitter.strato.graphql.AudioSpaceSharingInput`](http://go/sg.thrift/AudioSpaceSharingInput)"
input AudioSpaceSharingInput @thrift_type(name : "AudioSpaceSharingInput", package : "com.twitter.strato.graphql") {
  shared_tweet: AudioSpaceSharedTweetInput
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteDataV1Input`](http://go/sg.thrift/BirdwatchNoteDataV1Input)"
input BirdwatchNoteDataV1Input @thrift_type(name : "BirdwatchNoteDataV1Input", package : "com.twitter.strato.graphql") {
  believable: BirdwatchNoteBelievableTagInput
  classification: BirdwatchNoteClassificationInput
  harmful: BirdwatchNoteHarmfulTagInput
  misleading_tags: [BirdwatchNoteMisleadingTagInput!]
  not_misleading_tags: [BirdwatchNoteNotMisleadingTagInput!]
  summary: String
  trustworthy_sources: Boolean
  validation: BirdwatchNoteEaseOfValidationTagInput
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingDataV1`](http://go/sg.thrift/BirdwatchNoteRatingDataV1)"
input BirdwatchNoteRatingDataV1Input @thrift_type(name : "BirdwatchNoteRatingDataV1", package : "com.twitter.strato.graphql") {
  agree: Boolean
  helpful: Boolean
  helpful_tags: [BirdwatchNoteRatingHelpfulTagsInput!]
  not_helpful_tags: [BirdwatchNoteRatingNotHelpfulTagsInput!]
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingDataV2`](http://go/sg.thrift/BirdwatchNoteRatingDataV2)"
input BirdwatchNoteRatingDataV2Input @thrift_type(name : "BirdwatchNoteRatingDataV2", package : "com.twitter.strato.graphql") {
  helpful_tags: [BirdwatchNoteRatingHelpfulTagsInput!]
  helpfulness_level: BirdwatchNoteRatingHelpfulnessLevelInput
  not_helpful_tags: [BirdwatchNoteRatingNotHelpfulTagsInput!]
}

input BirdwatchNoteRatingUserResponseAnswerEntryInput {
  key: Int!
  value: [Int!]!
}

"Generated from type: [`com.twitter.strato.graphql.BirdwatchNoteRatingUserResponse`](http://go/sg.thrift/BirdwatchNoteRatingUserResponse)"
input BirdwatchNoteRatingUserResponseInput @thrift_type(name : "BirdwatchNoteRatingUserResponse", package : "com.twitter.strato.graphql") {
  answers: [BirdwatchNoteRatingUserResponseAnswerEntryInput!]!
  passthrough_token: String!
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessAddress`](http://go/sg.thrift/BusinessAddress)"
input BusinessAddressInput @thrift_type(name : "BusinessAddress", package : "com.twitter.bizprofiles.manhattan") {
  address_line1: String
  administrative_area: String
  city: String
  country: String
  formatted_address: String
  geo: BusinessGeoInput
  postal_code: String
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessCategory`](http://go/sg.thrift/BusinessCategory)"
input BusinessCategoryInput @thrift_type(name : "BusinessCategory", package : "com.twitter.bizprofiles.manhattan") {
  display: Boolean
  id: Int
  name: String
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessContactEmail`](http://go/sg.thrift/BusinessContactEmail)"
input BusinessContactEmailInput @thrift_type(name : "BusinessContactEmail", package : "com.twitter.bizprofiles.manhattan") {
  email_address: String!
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessContact`](http://go/sg.thrift/BusinessContact)"
input BusinessContactInput @thrift_type(name : "BusinessContact", package : "com.twitter.bizprofiles.manhattan") {
  email: BusinessContactEmailInput
  phone: BusinessContactPhoneInput
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessContactPhone`](http://go/sg.thrift/BusinessContactPhone)"
input BusinessContactPhoneInput @thrift_type(name : "BusinessContactPhone", package : "com.twitter.bizprofiles.manhattan") {
  "International calling prefix"
  country_code: String
  "2 digits ISO code of the country"
  country_iso_code: String
  number: String
}

"Generated from type: [`com.twitter.bizprofiles.graphql.BusinessCreationDataInput`](http://go/sg.thrift/BusinessCreationDataInput)"
input BusinessCreationDataInput @thrift_type(name : "BusinessCreationDataInput", package : "com.twitter.bizprofiles.graphql") {
  categories: [BusinessCategoryInput!]!
  consent_marketing_updates: Boolean
  name: String!
  professional_type: ProfessionalTypeInput
  source: CreationSourceInput
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessGeo`](http://go/sg.thrift/BusinessGeo)"
input BusinessGeoInput @thrift_type(name : "BusinessGeo", package : "com.twitter.bizprofiles.manhattan") {
  lat: Float!
  long: Float!
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimes`](http://go/sg.thrift/BusinessOpenTimes)"
input BusinessOpenTimesInput @thrift_type(name : "BusinessOpenTimes", package : "com.twitter.bizprofiles.manhattan") {
  open_times_type: BusinessOpenTimesTypeInput
  regular: [BusinessOpenTimesRegularInput!]
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimesRegular`](http://go/sg.thrift/BusinessOpenTimesRegular)"
input BusinessOpenTimesRegularInput @thrift_type(name : "BusinessOpenTimesRegular", package : "com.twitter.bizprofiles.manhattan") {
  slots: [BusinessOpenTimesRegularSlotInput!]
  weekday: WeekdayInput
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessOpenTimesRegularSlot`](http://go/sg.thrift/BusinessOpenTimesRegularSlot)"
input BusinessOpenTimesRegularSlotInput @thrift_type(name : "BusinessOpenTimesRegularSlot", package : "com.twitter.bizprofiles.manhattan") {
  close: HourMinuteInput
  open: HourMinuteInput
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.BusinessTimezone`](http://go/sg.thrift/BusinessTimezone)"
input BusinessTimezoneInput @thrift_type(name : "BusinessTimezone", package : "com.twitter.bizprofiles.manhattan") {
  name: String!
}

"Generated from type: [`com.twitter.bizprofiles.graphql.BusinessVenueInput`](http://go/sg.thrift/BusinessVenueInput)"
input BusinessVenueInput @thrift_type(name : "BusinessVenueInput", package : "com.twitter.bizprofiles.graphql") {
  address: BusinessAddressInput
  contact: BusinessContactInput
  name: String
  open_times: BusinessOpenTimesInput
  timezone: BusinessTimezoneInput
  website: BusinessWebsiteInput
}

"Generated from type: [`com.twitter.bizprofiles.graphql.BusinessWebsiteInput`](http://go/sg.thrift/BusinessWebsiteInput)"
input BusinessWebsiteInput @thrift_type(name : "BusinessWebsiteInput", package : "com.twitter.bizprofiles.graphql") {
  display_url: String!
  expanded_url: String!
}

"""
Specifies information about a CollabTweet or CollabInvitation (a union is used to ensure CollabControl defines one or the other). See more at go/collab-tweets.

Generated from type: [`com.twitter.tweetypie.graphql.CollabControlOptions`](http://go/sg.thrift/CollabControlOptions)
"""
input CollabControlOptionsInput @thrift_type(name : "CollabControlOptions", package : "com.twitter.tweetypie.graphql") {
  collab_control_type: CollabControlTypeInput!
  "A list of user ids representing all Collaborators on a CollabTweet or CollabInvitation"
  collaborator_user_ids: [NumericString!]!
}

"Generated from type: [`com.twitter.commerce.catalog.common.CommerceConfigRequest`](http://go/sg.thrift/CommerceConfigRequest)"
input CommerceConfigRequestInput @thrift_type(name : "CommerceConfigRequest", package : "com.twitter.commerce.catalog.common") {
  config_type: CommerceConfigTypeInput!
  product_set_config: ProductSetConfigInput
}

"Generated from type: [`com.twitter.communities.membership.CommunityOpenMembershipSettings`](http://go/sg.thrift/CommunityOpenMembershipSettings)"
input CommunityOpenMembershipSettingsInput @thrift_type(name : "CommunityOpenMembershipSettings", package : "com.twitter.communities.membership") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object."
  _no_fields_available: Boolean
}

"Generated from type: [`com.twitter.communities.membership.CommunityRestrictedMembershipSettings`](http://go/sg.thrift/CommunityRestrictedMembershipSettings)"
input CommunityRestrictedMembershipSettingsInput @thrift_type(name : "CommunityRestrictedMembershipSettings", package : "com.twitter.communities.membership") {
  invites_policy: CommunityInvitesPolicyInput!
  join_approval_policy: CommunityJoinApprovalPolicyInput!
}

"Generated from type: [`com.twitter.ads.adserver.ConversationalCardDetails`](http://go/sg.thrift/ConversationalCardDetails)"
input ConversationalCardDetailsInput @thrift_type(name : "ConversationalCardDetails", package : "com.twitter.ads.adserver") {
  button_index: Int
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmMessage`](http://go/sg.thrift/CreateDmMessage)"
input CreateDmMessageInput @thrift_type(name : "CreateDmMessage", package : "com.twitter.dataproducts.devo.dm.graphql") {
  card: DMCardInput
  media: DMMediaInput
  profile: DMProfileInput
  quick_reply_request_create_params: QuickReplyRequestCreateParamsInput
  quick_reply_response_create_params: QuickReplyResponseCreateParamsInput
  text: DMTextInput
  tweet: DMTweetInput
}

"Generated from type: [`com.twitter.dataproducts.devo.dm.graphql.CreateDmTarget`](http://go/sg.thrift/CreateDmTarget)"
input CreateDmTargetInput @thrift_type(name : "CreateDmTarget", package : "com.twitter.dataproducts.devo.dm.graphql") {
  existing_conversation_id: NumericString
  user_ids: [NumericString!]
}

"Generated from type: [`com.twitter.incentives.jiminy.CreateNudgeOptions`](http://go/sg.thrift/CreateNudgeOptions)"
input CreateNudgeOptionsInput @thrift_type(name : "CreateNudgeOptions", package : "com.twitter.incentives.jiminy") {
  enable_nudge_testing_keyword: Boolean
  previously_received_nudge_id: NumericString
  requested_nudge_types: [ScribeNudgeTypeInput!]
}

"Generated from type: [`com.twitter.incentives.jiminy.CreatePreemptiveNudgeOptions`](http://go/sg.thrift/CreatePreemptiveNudgeOptions)"
input CreatePreemptiveNudgeOptionsInput @thrift_type(name : "CreatePreemptiveNudgeOptions", package : "com.twitter.incentives.jiminy") {
  enable_nudge_testing_keyword: Boolean
}

"Generated from type: [`com.twitter.convosvc.search.CursorObject`](http://go/sg.thrift/CursorObject)"
input CursorObjectInput @thrift_type(name : "CursorObject", package : "com.twitter.convosvc.search") {
  conversations: String
  "Deprecated( deprecate group convo search in dmSearchComposite)"
  groups: String
  "Deprecated( deprecate people convo search in dmSearchComposite)"
  people: String
}

"Generated from type: [`com.twitter.convosvc.strato.Card`](http://go/sg.thrift/Card)"
input DMCardInput @thrift_type(name : "Card", package : "com.twitter.convosvc.strato") {
  text: String
  uri: String!
}

"Generated from type: [`com.twitter.convosvc.strato.Media`](http://go/sg.thrift/Media)"
input DMMediaInput @thrift_type(name : "Media", package : "com.twitter.convosvc.strato") {
  id: NumericString!
  text: String
}

"Generated from type: [`com.twitter.convosvc.strato.Profile`](http://go/sg.thrift/Profile)"
input DMProfileInput @thrift_type(name : "Profile", package : "com.twitter.convosvc.strato") {
  text: String
  user_id: NumericString!
}

"Generated from type: [`com.twitter.convosvc.strato.DMReactions`](http://go/sg.thrift/DMReactions)"
input DMReactionsInput @thrift_type(name : "DMReactions", package : "com.twitter.convosvc.strato") {
  conversation_id: String!
  message_id: NumericString!
  reaction_types: [ReactionTypeInput!]!
}

"Generated from type: [`com.twitter.convosvc.strato.Text`](http://go/sg.thrift/Text)"
input DMTextInput @thrift_type(name : "Text", package : "com.twitter.convosvc.strato") {
  text: String!
}

"Generated from type: [`com.twitter.convosvc.strato.Tweet`](http://go/sg.thrift/Tweet)"
input DMTweetInput @thrift_type(name : "Tweet", package : "com.twitter.convosvc.strato") {
  text: String
  tweet_id: NumericString!
}

"Generated from type: [`com.twitter.strato.columns.content_controls.DeveloperContentFilterDecision`](http://go/sg.thrift/DeveloperContentFilterDecision)"
input DeveloperContentFilterDecisionInput @thrift_type(name : "DeveloperContentFilterDecision", package : "com.twitter.strato.columns.content_controls") {
  decision_type: DeveloperContentFilterDecisionTypeInput!
  reason: String
}

"""
Information about the requesting device's application window display size.

Generated from type: [`com.twitter.timelineservice.DisplaySize`](http://go/sg.thrift/DisplaySize)
"""
input DisplaySizeInput @thrift_type(name : "DisplaySize", package : "com.twitter.timelineservice") {
  dpi: Int
  height: Int
  width: Int
}

"Generated from type: [`com.twitter.easypromote.AgeTargeting`](http://go/sg.thrift/AgeTargeting)"
input EasypromoteAgeTargetingInput @thrift_type(name : "AgeTargeting", package : "com.twitter.easypromote") {
  age_bucket: AdsAgeBucketInput!
}

"Generated from type: [`com.twitter.easypromote.GenderTargeting`](http://go/sg.thrift/GenderTargeting)"
input EasypromoteGenderTargetingInput @thrift_type(name : "GenderTargeting", package : "com.twitter.easypromote") {
  gender: AdsGenderInput!
}

"Generated from type: [`com.twitter.easypromote.GeoTargeting`](http://go/sg.thrift/GeoTargeting)"
input EasypromoteGeoTargetingInput @thrift_type(name : "GeoTargeting", package : "com.twitter.easypromote") {
  location_id: String!
  name: String
}

"Generated from type: [`com.twitter.easypromote.InterestTargeting`](http://go/sg.thrift/InterestTargeting)"
input EasypromoteInterestTargetingInput @thrift_type(name : "InterestTargeting", package : "com.twitter.easypromote") {
  interest_id: NumericString!
  name: String
}

"Generated from type: [`com.twitter.easypromote.KeywordTargeting`](http://go/sg.thrift/KeywordTargeting)"
input EasypromoteKeywordTargetingInput @thrift_type(name : "KeywordTargeting", package : "com.twitter.easypromote") {
  keyword: String!
}

"Generated from type: [`com.twitter.easypromote.LanguageTargeting`](http://go/sg.thrift/LanguageTargeting)"
input EasypromoteLanguageTargetingInput @thrift_type(name : "LanguageTargeting", package : "com.twitter.easypromote") {
  lang_code: String!
  lang_id: NumericString!
}

"Generated from type: [`com.twitter.easypromote.TargetingOverrides`](http://go/sg.thrift/TargetingOverrides)"
input EasypromoteTargetingOverridesInput @thrift_type(name : "TargetingOverrides", package : "com.twitter.easypromote") {
  age_buckets: [EasypromoteAgeTargetingInput!]
  gender: EasypromoteGenderTargetingInput
  geos: [EasypromoteGeoTargetingInput!]
  interests: [EasypromoteInterestTargetingInput!]
  keywords: [EasypromoteKeywordTargetingInput!]
  languages: [EasypromoteLanguageTargetingInput!]
  users: [EasypromoteUserTargetingInput!]
}

"Generated from type: [`com.twitter.easypromote.UserTargeting`](http://go/sg.thrift/UserTargeting)"
input EasypromoteUserTargetingInput @thrift_type(name : "UserTargeting", package : "com.twitter.easypromote") {
  followers_of: Boolean
  similar_to_followers_of: Boolean
  user_id: NumericString!
  user_name: String
}

"""
Edit options for a Tweet.

Generated from type: [`com.twitter.tweetypie.graphql.EditOptions`](http://go/sg.thrift/EditOptions)
"""
input EditOptionsInput @thrift_type(name : "EditOptions", package : "com.twitter.tweetypie.graphql") {
  "previous Tweet id"
  previous_tweet_id: NumericString
}

input EmailNotificationSettingsInput {
  send_account_updates_email: Boolean
  send_activation_email: Boolean
  send_address_book_notification_email: Boolean
  send_email_newsletter: Boolean
  send_email_vit_weekly: Boolean
  send_follow_recs_email: Boolean
  send_login_notification_email: Boolean
  send_network_activity_email: Boolean
  send_network_digest: DigestScheduleInput
  send_new_direct_text_email: Boolean
  send_partner_email: Boolean
  send_performance_digest: DigestScheduleInput
  send_resurrection_email: Boolean
  send_shared_tweet_email: Boolean
  send_similar_people_email: Boolean
  send_smb_sales_marketing_email: Boolean
  send_survey_email: Boolean
  send_twitter_emails: Boolean
}

"""
Additional information associated to the event. It is used most often to report metrics to advertisers or to 3rd party entities. This entity is similar to ad_engagement_details.thrift, the only difference is that union usage replaced with struct, since unions are not allowed as GraphQL input request. Due to later struct -> union conversion- pls make sure that only one of these fields will be set at a time.

Generated from type: [`com.twitter.ads.callback.EngagementMetadata`](http://go/sg.thrift/EngagementMetadata)
"""
input EngagementMetadataInput @thrift_type(name : "EngagementMetadata", package : "com.twitter.ads.callback") {
  "Metadata associated to certain events sent from conversational cards."
  conversational_card_details: ConversationalCardDetailsInput
}

"""
Holds engagement information required for creating Ad Callback event

Generated from type: [`com.twitter.ads.callback.EngagementRequest`](http://go/sg.thrift/EngagementRequest)
"""
input EngagementRequestInput @thrift_type(name : "EngagementRequest", package : "com.twitter.ads.callback") {
  "Is autoplay enabled on the user's device. Used by Adserver to optimize promoted content."
  autoplay_enabled: Boolean
  "An earned engagement is an engagement on a reply or retweet to a promoted tweet."
  earned: Boolean
  "The wrapper for all ad engagement metadata."
  engagement_metadata: EngagementMetadataInput
  "The impression id of the ad from which this tweet was created."
  impression_id: String!
}

"""
Marks a tweet as exclusive. See go/superfollows.

Generated from type: [`com.twitter.tweetypie.graphql.ExclusiveTweetControlOptions`](http://go/sg.thrift/ExclusiveTweetControlOptions)
"""
input ExclusiveTweetControlOptionsInput @thrift_type(name : "ExclusiveTweetControlOptions", package : "com.twitter.tweetypie.graphql") {
  "This object has no fields that are convertible to GraphQL, so this field was synthesized to make it a valid object."
  _no_fields_available: Boolean
}

"Generated from type: [`com.twitter.bizprofiles.manhattan.HourMinute`](http://go/sg.thrift/HourMinute)"
input HourMinuteInput @thrift_type(name : "HourMinute", package : "com.twitter.bizprofiles.manhattan") {
  hour: Short!
  minute: Short!
}

"Generated from type: [`com.twitter.hubble.AudienceSubSegment`](http://go/sg.thrift/AudienceSubSegment)"
input HubbleAudienceSubSegmentInput @thrift_type(name : "AudienceSubSegment", package : "com.twitter.hubble") {
  "segmentValue of the segment being further broken down"
  dimension_segment_value: NumericString!
  sub_dimension: HubbleAudienceSubDimensionInput!
}

"Generated from type: [`com.twitter.hubble.DeliveredInIntervalFilter`](http://go/sg.thrift/DeliveredInIntervalFilter)"
input HubbleDeliveredInIntervalFilterInput @thrift_type(name : "DeliveredInIntervalFilter", package : "com.twitter.hubble") {
  end_date: String!
  start_date: String!
}

"Generated from type: [`com.twitter.incentives.jiminy.NudgeActionEvent`](http://go/sg.thrift/NudgeActionEvent)"
input NudgeActionEventInput @thrift_type(name : "NudgeActionEvent", package : "com.twitter.incentives.jiminy") {
  nudge_action_type: ScribeNudgeActionTypeInput!
  nudge_id: NumericString!
  timestamp: NumericString
}

"Generated from type: [`com.twitter.incentives.jiminy.NudgeResultEvent`](http://go/sg.thrift/NudgeResultEvent)"
input NudgeResultEventInput @thrift_type(name : "NudgeResultEvent", package : "com.twitter.incentives.jiminy") {
  created_tweet_id: NumericString
  nudge_id: NumericString!
  nudge_result_type: ScribeNudgeResultTypeInput!
  timestamp: NumericString
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.RedeemMetadata`](http://go/sg.thrift/RedeemMetadata)"
input ObfuscatedIdRedeemMetadataInput @thrift_type(name : "RedeemMetadata", package : "com.twitter.in_app_purchases.graphql") {
  spaces_metadata: ObfuscatedIdSpacesMetadataInput
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.SpacesMetadata`](http://go/sg.thrift/SpacesMetadata)"
input ObfuscatedIdSpacesMetadataInput @thrift_type(name : "SpacesMetadata", package : "com.twitter.in_app_purchases.graphql") {
  space_id: String!
}

"Generated from type: [`com.twitter.tweb3.graphql.model.Paginated`](http://go/sg.thrift/Paginated)"
input PaginatedInput @thrift_type(name : "Paginated", package : "com.twitter.tweb3.graphql.model") {
  count: Int
  cursor: String
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.PaymentReceipt`](http://go/sg.thrift/PaymentReceipt)"
input PaymentReceiptInput @thrift_type(name : "PaymentReceipt", package : "com.twitter.in_app_purchases.graphql") {
  app_store_receipt: AppStoreReceiptInput
  "Deprecated( no longer in use)"
  app_store_receipt_v2: AppStoreReceiptV2Input
  play_store_receipt: PlayStoreReceiptInput
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.PlayStoreReceipt`](http://go/sg.thrift/PlayStoreReceipt)"
input PlayStoreReceiptInput @thrift_type(name : "PlayStoreReceipt", package : "com.twitter.in_app_purchases.graphql") {
  external_product_id: String!
  package_name: String!
  redemption_metadata_input: RedemptionMetadataInput
  token: String!
}

"Generated from type: [`com.twitter.dataproducts.aaa.graphql.TweetPoll`](http://go/sg.thrift/TweetPoll)"
input PollParametersInput @thrift_type(name : "TweetPoll", package : "com.twitter.dataproducts.aaa.graphql") {
  duration_minutes: Int53!
  options: [String!]!
}

"Generated from type: [`com.twitter.scheduleanddraftapi.PostRetweetRequest`](http://go/sg.thrift/PostRetweetRequest)"
input PostRetweetRequestInput @thrift_type(name : "PostRetweetRequest", package : "com.twitter.scheduleanddraftapi") {
  source_status_id: NumericString!
}

"Generated from type: [`com.twitter.scheduleanddraftapi.PostTweetRequest`](http://go/sg.thrift/PostTweetRequest)"
input PostTweetRequestInput @thrift_type(name : "PostTweetRequest", package : "com.twitter.scheduleanddraftapi") {
  attachment_url: String
  auto_populate_reply_metadata: Boolean! = false
  exclude_reply_user_ids: [NumericString!]
  in_reply_to_status_id: NumericString
  media_ids: [NumericString!]
  possibly_sensitive: Boolean
  status: String!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.Price`](http://go/sg.thrift/Price)"
input PriceInput @thrift_type(name : "Price", package : "com.twitter.commerce.catalog.api.graphql") {
  currency_code: CurrencyCodeInput!
  micro_value: NumericString!
  "Deprecated( Replaced with microValue)"
  value: Int!
}

"Generated from type: [`com.twitter.commerce.catalog.common.ProductSetConfig`](http://go/sg.thrift/ProductSetConfig)"
input ProductSetConfigInput @thrift_type(name : "ProductSetConfig", package : "com.twitter.commerce.catalog.common") {
  product_set_id: NumericString!
}

"Generated from type: [`com.twitter.commerce.catalog.core.ProductSetItem`](http://go/sg.thrift/ProductSetItem)"
input ProductSetItemInput @thrift_type(name : "ProductSetItem", package : "com.twitter.commerce.catalog.core") {
  item_id: String
  item_key: NumericString!
  item_type: ProductSetItemTypeInput!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.QuickPromoteMetadataInput`](http://go/sg.thrift/QuickPromoteMetadataInput)"
input QuickPromoteMetadataInput @thrift_type(name : "QuickPromoteMetadataInput", package : "com.twitter.in_app_purchases.graphql") {
  "Ad account id"
  ad_account_id: String!
  objective: QuickPromoteObjectiveInput
  targeting_overrides: EasypromoteTargetingOverridesInput
  tweet_id: NumericString!
  "Promoting user id"
  user_id: NumericString!
}

"Generated from type: [`com.twitter.quick_promote.PromotionBudget`](http://go/sg.thrift/PromotionBudget)"
input QuickPromotePromotionBudgetInput @thrift_type(name : "PromotionBudget", package : "com.twitter.quick_promote") {
  currency: String
  daily_local_micros: NumericString!
  total_local_micros: NumericString!
}

"Generated from type: [`com.twitter.quick_promote.PromotionContext`](http://go/sg.thrift/PromotionContext)"
input QuickPromotePromotionContextInput @thrift_type(name : "PromotionContext", package : "com.twitter.quick_promote") {
  account_id: NumericString
  platform: EasypromotePlatformInput! = Web
  user_id: NumericString!
}

"Generated from type: [`com.twitter.quick_promote.PromotionContextV2`](http://go/sg.thrift/PromotionContextV2)"
input QuickPromotePromotionContextV2Input @thrift_type(name : "PromotionContextV2", package : "com.twitter.quick_promote") {
  account_id: String
  platform: EasypromotePlatformInput! = Web
  user_id: NumericString!
}

"Generated from type: [`com.twitter.convosvc.strato.QuickReplyOptionCreateParams`](http://go/sg.thrift/QuickReplyOptionCreateParams)"
input QuickReplyOptionCreateParamsInput @thrift_type(name : "QuickReplyOptionCreateParams", package : "com.twitter.convosvc.strato") {
  description: String
  label: String!
  metadata: String
}

"Generated from type: [`com.twitter.convosvc.strato.QuickReplyRequestCreateParams`](http://go/sg.thrift/QuickReplyRequestCreateParams)"
input QuickReplyRequestCreateParamsInput @thrift_type(name : "QuickReplyRequestCreateParams", package : "com.twitter.convosvc.strato") {
  quick_reply_params_list: [QuickReplyOptionCreateParamsInput!]!
}

"Generated from type: [`com.twitter.convosvc.strato.QuickReplyResponseCreateParams`](http://go/sg.thrift/QuickReplyResponseCreateParams)"
input QuickReplyResponseCreateParamsInput @thrift_type(name : "QuickReplyResponseCreateParams", package : "com.twitter.convosvc.strato") {
  request_id: String!
  selected_option_id: String!
  text: String!
}

"Generated from type: [`com.twitter.in_app_purchases.graphql.RedemptionMetadataInput`](http://go/sg.thrift/RedemptionMetadataInput)"
input RedemptionMetadataInput @thrift_type(name : "RedemptionMetadataInput", package : "com.twitter.in_app_purchases.graphql") {
  quick_promote_metadata: QuickPromoteMetadataInput
  space_id: String
}

"Generated from type: [`com.twitter.convosvc.search.SearchQuery`](http://go/sg.thrift/SearchQuery)"
input SearchQueryInput @thrift_type(name : "SearchQuery", package : "com.twitter.convosvc.search") {
  cursor_object: CursorObjectInput
  query: String
  search_type_list: [SearchTypeInput!]
  size_object: SizeObjectInput
}

"Generated from type: [`com.twitter.commerce.shopmodule.api.graphql.ShopId`](http://go/sg.thrift/ShopId)"
input ShopIdInput @thrift_type(name : "ShopId", package : "com.twitter.commerce.shopmodule.api.graphql") {
  module_id: NumericString!
  user_id: NumericString!
}

"Generated from type: [`com.twitter.targetingcatalog.SimplifiedTargetingCriterion`](http://go/sg.thrift/SimplifiedTargetingCriterion)"
input SimplifiedTargetingCriterionInput @thrift_type(name : "SimplifiedTargetingCriterion", package : "com.twitter.targetingcatalog") {
  domain: TargetingTypeInput!
  domain_id: Int53
  domain_id_string: NumericString
  label: String
}

"Generated from type: [`com.twitter.convosvc.search.SizeObject`](http://go/sg.thrift/SizeObject)"
input SizeObjectInput @thrift_type(name : "SizeObject", package : "com.twitter.convosvc.search") {
  conversations: Int
  "Deprecated( deprecate group convo search in dmSearchComposite)"
  groups: Int
  "Deprecated( deprecate people convo search in dmSearchComposite)"
  people: Int
}

"""
Specifies information for a Trusted Friends tweet.  See go/trusted-friends

Generated from type: [`com.twitter.tweetypie.graphql.TrustedFriendsControlOptions`](http://go/sg.thrift/TrustedFriendsControlOptions)
"""
input TrustedFriendsControlOptionsInput @thrift_type(name : "TrustedFriendsControlOptions", package : "com.twitter.tweetypie.graphql") {
  "The ID of the Trusted Friends List whose members can view this tweet."
  trusted_friends_list_id: NumericString!
}

"Generated from type: [`com.twitter.tweetypie.graphql.TweetAnnotation`](http://go/sg.thrift/TweetAnnotation)"
input TweetAnnotationInput @thrift_type(name : "TweetAnnotation", package : "com.twitter.tweetypie.graphql") {
  domain_id: NumericString!
  entity_id: NumericString!
  group_id: NumericString!
}

"""
Specifies limits on user participation in a conversation. See also http://go/dont-at-me. Up to one value may be provided. (Conceptually this is a union, however graphql doesn\'t support union types as inputs.)

Generated from type: [`com.twitter.tweetypie.graphql.TweetConversationControl`](http://go/sg.thrift/TweetConversationControl)
"""
input TweetConversationControlInput @thrift_type(name : "TweetConversationControl", package : "com.twitter.tweetypie.graphql") {
  mode: ConversationControlModeInput!
}

"Generated from type: [`com.twitter.tweetypie.graphql.TweetGeoCoordinates`](http://go/sg.thrift/TweetGeoCoordinates)"
input TweetGeoCoordinatesInput @thrift_type(name : "TweetGeoCoordinates", package : "com.twitter.tweetypie.graphql") {
  "Whether or not make the coordinates public. When false, geo coordinates are persisted with the Tweet but are not shared publicly."
  display_coordinates: Boolean! = true
  "The latitude of the location this Tweet refers to. The valid range for latitude is -90.0 to +90.0 (North is positive) inclusive."
  latitude: Float!
  "The longitude of the location this Tweet refers to. The valid range for longitude is -180.0 to +180.0 (East is positive) inclusive."
  longitude: Float!
}

"""
Tweet geo location metadata. See https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/geo

Generated from type: [`com.twitter.tweetypie.graphql.TweetGeo`](http://go/sg.thrift/TweetGeo)
"""
input TweetGeoInput @thrift_type(name : "TweetGeo", package : "com.twitter.tweetypie.graphql") {
  "The geo coordinates of the location this Tweet refers to."
  coordinates: TweetGeoCoordinatesInput
  "See https://confluence.twitter.biz/display/GEO/Passing+the+geo+search+request+ID"
  geo_search_request_id: String
  "A place in the world. See also https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/geo#place"
  place_id: String
}

"Generated from type: [`com.twitter.tweetypie.graphql.TweetMediaEntity`](http://go/sg.thrift/TweetMediaEntity)"
input TweetMediaEntityInput @thrift_type(name : "TweetMediaEntity", package : "com.twitter.tweetypie.graphql") {
  "Media id as obtained from the User Image Service when uploaded."
  media_id: NumericString!
  "List of user_ids to tag in this media entity. Requires Client App Privelege MEDIA_TAGS. Contributors (http://go/teams) are not supported. Tags are silently dropped when unauthorized."
  tagged_users: [NumericString!]! = []
}

"Generated from type: [`com.twitter.tweetypie.graphql.TweetMedia`](http://go/sg.thrift/TweetMedia)"
input TweetMediaInput @thrift_type(name : "TweetMedia", package : "com.twitter.tweetypie.graphql") {
  "You may include up to 4 photos or 1 animated GIF or 1 video in a Tweet."
  media_entities: [TweetMediaEntityInput!]! = []
  "Mark this tweet as possibly containing objectionable media."
  possibly_sensitive: Boolean! = false
}

"Generated from type: [`com.twitter.dataproducts.metrics.graphql.TweetMetricKey`](http://go/sg.thrift/TweetMetricKey)"
input TweetMetricKeyInput @thrift_type(name : "TweetMetricKey", package : "com.twitter.dataproducts.metrics.graphql") {
  count_type: CountTypeInput
  metric_type: TweetMetricTypeInput!
}

"""
Specifies information about live video streaming. Note that the Periscope product was shut down in March 2021, however some live video streaming features remain in the Twitter app. This struct keeps the Periscope naming convention to retain parity and traceability to other areas of the codebase that also retain the Periscope name.

Generated from type: [`com.twitter.tweetypie.graphql.TweetPeriscopeContext`](http://go/sg.thrift/TweetPeriscopeContext)
"""
input TweetPeriscopeContextInput @thrift_type(name : "TweetPeriscopeContext", package : "com.twitter.tweetypie.graphql") {
  "Indicates if the tweet contains live streaming video. A value of false is equivalent to this struct being undefined in the CreateTweetRequest."
  is_live: Boolean! = false
}

"Generated from type: [`com.twitter.tweetypie.graphql.TweetReply`](http://go/sg.thrift/TweetReply)"
input TweetReplyInput @thrift_type(name : "TweetReply", package : "com.twitter.tweetypie.graphql") {
  "Screen names appearing in the mention prefix can be excluded. Because the mention prefix must always include the leading mention to preserve directed-at addressing for the in-reply-to tweet author, attempting to exclude that user id will have no effect. Specifying a user id not in the prefix will be silently ignored."
  exclude_reply_user_ids: [NumericString!]! = []
  "The id of the tweet that this tweet is replying to."
  in_reply_to_tweet_id: NumericString!
}

"Generated from type: [`com.twitter.longform.composer.TwitterArticleData`](http://go/sg.thrift/TwitterArticleData)"
input TwitterArticleDataInput @thrift_type(name : "TwitterArticleData", package : "com.twitter.longform.composer") {
  "Json representation of the draft.js ContentState"
  content_state_json: String!
  "Plaintext representation of the Twitter Article data"
  plaintext: String
}

"Generated from type: [`com.twitter.longform.composer.MediaKey`](http://go/sg.thrift/MediaKey)"
input TwitterArticleMediaKeyInput @thrift_type(name : "MediaKey", package : "com.twitter.longform.composer") {
  media_category: TwitterArticleMediaCategoryInput!
  media_id: NumericString!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UploadProductDataImage`](http://go/sg.thrift/UploadProductDataImage)"
input UploadProductDataImageInput @thrift_type(name : "UploadProductDataImage", package : "com.twitter.commerce.catalog.api.graphql") {
  image_url: String
  media_id: NumericString
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UploadProductData`](http://go/sg.thrift/UploadProductData)"
input UploadProductDataInput @thrift_type(name : "UploadProductData", package : "com.twitter.commerce.catalog.api.graphql") {
  additional_images: [UploadProductDataImageInput!]
  age_group: ProductAgeGroupInput
  availability: ProductAvailabilityInput!
  brand: String
  color: String
  condition: ProductConditionInput!
  data_source: ProductDataSourceInput
  description: String!
  gender: ProductGenderInput
  google_product_category: String
  gtin: String
  image: UploadProductDataImageInput!
  inventory: Int
  item_group_id: String
  link: String!
  material: String
  mobile_link: String
  mpn: String
  popularity_rank: Int
  price: PriceInput!
  product_id: String!
  product_type: String
  sale: UploadProductDataSaleInfoInput
  size: String
  title: String!
}

"Generated from type: [`com.twitter.commerce.catalog.api.graphql.UploadProductDataSaleInfo`](http://go/sg.thrift/UploadProductDataSaleInfo)"
input UploadProductDataSaleInfoInput @thrift_type(name : "UploadProductDataSaleInfo", package : "com.twitter.commerce.catalog.api.graphql") {
  effective_end_date: String
  effective_start_date: String
  price: PriceInput!
}

"Generated from type: [`com.twitter.signals.reactions.UserProfileReactionTimelineCursor`](http://go/sg.thrift/UserProfileReactionTimelineCursor)"
input UserProfileReactionTimelineCursorInput @thrift_type(name : "UserProfileReactionTimelineCursor", package : "com.twitter.signals.reactions") {
  next: String!
  previous: String
}